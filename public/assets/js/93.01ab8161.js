(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{576:function(n,s,a){"use strict";a.r(s);var e=a(59),t=Object(e.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"实战-5：可用-render-自定义列的表格组件-table"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实战-5：可用-render-自定义列的表格组件-table"}},[n._v("#")]),n._v(" 实战 5：可用 Render 自定义列的表格组件——Table")]),n._v(" "),a("p",[n._v("表格组件 Table 是中后台产品中最常用的组件之一，用于展示大量结构化的数据。大多数组件库都提供了表格组件，比如 "),a("a",{attrs:{href:"https://www.iviewui.com/components/table",target:"_blank",rel:"noopener noreferrer"}},[n._v("iView"),a("OutboundLink")],1),n._v("，功能也是非常强大。正规的表格，是由 "),a("code",[n._v("<table>")]),n._v("、"),a("code",[n._v("<thead>")]),n._v("、"),a("code",[n._v("<tbody>")]),n._v("、"),a("code",[n._v("<tr>")]),n._v("、"),a("code",[n._v("<th>")]),n._v("、"),a("code",[n._v("<td>")]),n._v(" 这些标签组成，一般分为表头 "),a("strong",[n._v("columns")]),n._v(" 和数据 "),a("strong",[n._v("data")]),n._v("。本小节就来开发一个最基本的表格组件 Table，它支持使用 Render 函数来自定义某一列。")]),n._v(" "),a("h2",{attrs:{id:"分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析"}},[n._v("#")]),n._v(" 分析")]),n._v(" "),a("p",[n._v("如果表格只是呈现数据，是比较简单的，比如下图：")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/15/16716c44a664e7f1?w=1876&h=502&f=png&s=60848",alt:""}})]),n._v(" "),a("p",[n._v("因为结构简单，我们甚至不需要组件，直接使用标准的 table 系列标签就可以。但有的时候，除了呈现数据，也会带有一些交互，比如有一列操作栏，可以编辑整行的数据：")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/15/16716c54fc74a1a5?w=2088&h=456&f=gif&s=520544",alt:""}})]),n._v(" "),a("p",[n._v("写一个个的 table 系列标签是很麻烦并且重复的，而组件的好处就是省去这些基础的工作，我们直接给 Table 组件传递列的配置 "),a("strong",[n._v("columns")]),n._v(" 和行数据 "),a("strong",[n._v("data")]),n._v("，其余的都交给 Table 组件做了。")]),n._v(" "),a("p",[n._v("开发 Table 组件前，有必要先了解上文说到的一系列 table 标签。一般的 table 结构是这样的：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<table>\n  <thead>\n    <tr>\n      <th>姓名</th>\n      <th>年龄</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>王小明</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <td>张小刚</td>\n      <td>25</td>\n    </tr>\n  </tbody>\n</table>\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br")])]),a("ul",[a("li",[n._v("table：定义 HTML 表格；")]),n._v(" "),a("li",[n._v("thead：定义表头；")]),n._v(" "),a("li",[n._v("tbody：定义表格主体；")]),n._v(" "),a("li",[n._v("tr：定义表格行；")]),n._v(" "),a("li",[n._v("th：定义表头单元格；")]),n._v(" "),a("li",[n._v("td：定义表格单元。")])]),n._v(" "),a("p",[n._v("标准的表格系列标签，跟 div+css 实现是有很大区别的，比如表格在做单元格合并时，有提供原生属性，用 div 就很麻烦了；再比如渲染原理上也有一定的区别，table 会在内容全部下载完后加载。详细的介绍可以阅读文末的扩展阅读 1。")]),n._v(" "),a("p",[n._v("知道了表格的结构，再来分析如何定制 API。可以看到，表格分为了两部分，表头 thead 和数据 tbody，那 props 也定义两个：")]),n._v(" "),a("ul",[a("li",[a("p",[n._v("columns：列配置，格式为数组，其中每一列 column 是一个对象，用来描述这一列的信息，它的具体说明如下：")]),n._v(" "),a("ul",[a("li",[n._v("title：列头显示文字；")]),n._v(" "),a("li",[n._v("key：对应列内容的字段名；")]),n._v(" "),a("li",[n._v("render：自定义渲染列，使用 Vue 的 Render 函数，不定义则直接显示为文本。")])]),n._v(" "),a("p",[n._v("比如：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("[\n{\n  title:  '姓名',\n  key: 'name'\n},\n{\n  title:  '年龄',\n  key: 'age'\n}\n]\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br")])])]),n._v(" "),a("li",[a("p",[n._v("data：显示的结构化数据，格式为数组，其中每一个对象，就是一行的数据，比如：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("[\n{\n  name: '王小明',\n  age: 18\n},\n{\n  name: '张小刚',\n  age: 25\n}\n]\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br")])])])]),n._v(" "),a("p",[n._v("column 定义的 "),a("code",[n._v("key")]),n._v(" 值，与 data 是一一对应的，这是一种常见的数据接口定义规则，也是 Vue.js 组件中，用数据驱动而不是 slot 驱动的经典案例。")]),n._v(" "),a("p",[n._v("为什么 Table 组件要用数据驱动，而不是 slot 驱动呢？slot 在很多组件中的确很好用，不过 Table 组件包含了大量的基础表格标签，如果都交给使用者由 slot 承载的话，开发成本不亚于自己实现一个 table 了，而数据驱动就简单的多，数据一般从服务端获取后就可以直接使用（或简单处理），使用者主要来定义每列的配置 "),a("strong",[n._v("columns")]),n._v(" 就可以了。")]),n._v(" "),a("p",[n._v("因为不确定使用者要对某一列做什么交互，所以不能在 Table 内来实现自定义列。使用 Render 函数可以将复杂的自定义列模板的工作交给使用者来配置，Table 内只用一个 Functional Render 做中转。")]),n._v(" "),a("h2",{attrs:{id:"完成基础表格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#完成基础表格"}},[n._v("#")]),n._v(" 完成基础表格")]),n._v(" "),a("p",[n._v("我们先来完成一个基础的表格组件，之后再接入 Render 来配置自定义列。")]),n._v(" "),a("p",[n._v("在 "),a("code",[n._v("src/components")]),n._v(" 目录下新建 "),a("code",[n._v("table-render")]),n._v(" 目录，并创建 "),a("code",[n._v("table.vue")]),n._v(" 文件：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('\x3c!-- src/components/table-render/table.vue --\x3e\n<template>\n  <table>\n    <thead>\n      <tr>\n        <th v-for="col in columns">{{ col.title }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr v-for="row in data">\n        <td v-for="col in columns">{{ row[col.key] }}</td>\n      </tr>\n    </tbody>\n  </table>\n</template>\n<script>\n  export default {\n    props: {\n      columns: {\n        type: Array,\n        default () {\n          return [];\n        }\n      },\n      data: {\n        type: Array,\n        default () {\n          return [];\n        }\n      }\n    }\n  }\n<\/script>\n<style>\n  table{\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n    empty-cells: show;\n    border: 1px solid #e9e9e9;\n  }\n  table th{\n    background: #f7f7f7;\n    color: #5c6b77;\n    font-weight: 600;\n    white-space: nowrap;\n  }\n  table td, table th{\n    padding: 8px 16px;\n    border: 1px solid #e9e9e9;\n    text-align: left;\n  }\n</style>\n\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br")])]),a("blockquote",[a("p",[n._v("props 中的 columns 和 data 的格式都是数组，这里要注意的是，如果 props 的类型是"),a("strong",[n._v("对象")]),n._v("或"),a("strong",[n._v("数组")]),n._v("，它的默认值必须从一个工厂函数获取。")])]),n._v(" "),a("p",[n._v("tbody 内嵌套使用了两次 "),a("code",[n._v("v-for")]),n._v("，外层循环数据 data，内层循环列 columns，这样就填充了每个单元格。")]),n._v(" "),a("p",[n._v("新建路由 "),a("code",[n._v("table-render")]),n._v("，并在 "),a("code",[n._v("src/views/")]),n._v(" 目录下新建页面 "),a("code",[n._v("table-render.vue")]),n._v("：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("\x3c!-- src/views/table-render.vue --\x3e\n<template>\n  <div>\n    <table-render :columns=\"columns\" :data=\"data\"></table-render>\n  </div>\n</template>\n<script>\n  import TableRender from '../components/table-render/table.vue';\n\n  export default {\n    components: { TableRender },\n    data () {\n      return {\n        columns: [\n          {\n            title:  '姓名',\n            key: 'name'\n          },\n          {\n            title:  '年龄',\n            key: 'age'\n          },\n          {\n            title:  '出生日期',\n            key: 'birthday'\n          },\n          {\n            title:  '地址',\n            key: 'address'\n          },\n          {\n            title:  '操作'\n          }\n        ],\n        data: [\n          {\n            name: '王小明',\n            age: 18,\n            birthday: '919526400000',\n            address: '北京市朝阳区芍药居'\n          },\n          {\n            name: '张小刚',\n            age: 25,\n            birthday: '696096000000',\n            address: '北京市海淀区西二旗'\n          },\n          {\n            name: '李小红',\n            age: 30,\n            birthday: '563472000000',\n            address: '上海市浦东新区世纪大道'\n          },\n          {\n            name: '周小伟',\n            age: 26,\n            birthday: '687024000000',\n            address: '深圳市南山区深南大道'\n          }\n        ]\n      }\n    }\n  }\n<\/script>\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br")])]),a("p",[n._v("运行后的效果如下图：")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/15/16716c5b99ef76ac?w=1986&h=416&f=png&s=88452",alt:""}})]),n._v(" "),a("p",[n._v("表格已经能渲染出来了，但现在的单元格只是将 data 当作纯文本来显示，所以出生日期列显示为时间戳，因为服务端对日期有时会保存为时间戳格式。如果要显示正常的日期（如1991-5-14），目前可以另写一个计算属性（computed），手动将时间戳换算为标准日期格式后，来动态修改 data 里的 "),a("code",[n._v("birthday")]),n._v(" 字段。这样做对于出生日期这样的数据还好，但对于"),a("strong",[n._v("操作")]),n._v("这一列就不可取了，因为它带有业务逻辑，点击"),a("strong",[n._v("编辑")]),n._v("按钮，是可以对当前行数据进行修改的。这时就要用到 Render 函数。")]),n._v(" "),a("h2",{attrs:{id:"使用-render-自定义列模板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-render-自定义列模板"}},[n._v("#")]),n._v(" 使用 Render 自定义列模板")]),n._v(" "),a("p",[n._v("上一节我们已经介绍过函数式组件 Functional Render 的用法，它没有状态和上下文，主要用于中转一个组件，用在本节的 Table 组件非常合适。")]),n._v(" "),a("p",[n._v("先在 "),a("code",[n._v("src/components/table-render")]),n._v(" 目录下新建 "),a("code",[n._v("render.js")]),n._v(" 文件：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("// src/components/table-render/render.js\nexport default {\n  functional: true,\n  props: {\n    row: Object,\n    column: Object,\n    index: Number,\n    render: Function\n  },\n  render: (h, ctx) => {\n    const params = {\n      row: ctx.props.row,\n      column: ctx.props.column,\n      index: ctx.props.index\n    };\n\n    return ctx.props.render(h, params);\n  }\n};\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br")])]),a("p",[n._v("render.js 定义了 4 个 props：")]),n._v(" "),a("ul",[a("li",[a("strong",[n._v("row")]),n._v("：当前行的数据；")]),n._v(" "),a("li",[a("strong",[n._v("column")]),n._v("：当前列的数据；")]),n._v(" "),a("li",[a("strong",[n._v("index")]),n._v("：当前是第几行；")]),n._v(" "),a("li",[a("strong",[n._v("render")]),n._v("：具体的 render 函数内容。")])]),n._v(" "),a("p",[n._v("这里的 "),a("code",[n._v("render")]),n._v(" 选项并没有渲染任何节点，而是直接返回 props 中定义的 render，并将 h 和当前的行、列、序号作为参数传递出去。然后在 table.vue 里就可以使用 render.js 组件：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('\x3c!-- table.vue，部分代码省略 --\x3e\n<template>\n  <table>\n    <thead>\n      <tr>\n        <th v-for="col in columns">{{ col.title }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr v-for="(row, rowIndex) in data">\n        <td v-for="col in columns">\n          <template v-if="\'render\' in col">\n            <Render :row="row" :column="col" :index="rowIndex" :render="col.render"></Render>\n          </template>\n          <template v-else>{{ row[col.key] }}</template>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</template>\n<script>\n  import Render from \'./render.js\';\n\n  export default {\n    components: { Render },\n    props: {\n      columns: {\n        type: Array,\n        default () {\n          return [];\n        }\n      },\n      data: {\n        type: Array,\n        default () {\n          return [];\n        }\n      }\n    }\n  }\n<\/script>\n\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br")])]),a("p",[n._v("如果 columns 中的某一列配置了 render 字段，那就通过 render.js 完成自定义模板，否则以字符串形式渲染。比如对出生日期这列显示为标准的日期格式，可以这样定义 column：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("// src/views/table-render.vie，部分代码省略\nexport default {\n  data () {\n    return {\n      columns: [\n        // ...\n        {\n          title:  '出生日期',\n          render: (h, { row, column, index }) => {\n            const date = new Date(parseInt(row.birthday));\n            const year = date.getFullYear();\n            const month = date.getMonth() + 1;\n            const day = date.getDate();\n            \n            const birthday = `${year}-${month}-${day}`;\n            \n            return h('span', birthday);\n          }\n        }\n      ]\n    }\n  }\n}\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br")])]),a("p",[n._v("效果如下图：")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/15/16716c604e151fa0?w=1738&h=418&f=png&s=77318",alt:""}})]),n._v(" "),a("p",[n._v("需要注意的是，columns 里定义的 render，是有两个参数的，第一个是 createElement（即 h），第二个是从 render.js 传过来的对象，它包含了当前行数据（"),a("code",[n._v("row")]),n._v("）、当前列配置（"),a("code",[n._v("column")]),n._v("）、当前是第几行（"),a("code",[n._v("index")]),n._v("），使用者可以基于这 3 个参数得到任意想要的结果。由于是自定义列了，显示什么都是使用者决定的，因此在使用了 render 的 column 里可以不用写字段 "),a("code",[n._v("key")]),n._v(" 。")]),n._v(" "),a("p",[n._v("如果你真正理解了，应该知道 columns 里定义的 render 字段，它仅仅是名字叫 render 的一个普通函数，并非 Vue.js 实例的 "),a("em",[n._v("render")]),n._v(" 选项，只是我们恰巧把它叫做 render 而已，如果愿意，也可以改为其它名字，比如 renderRow。真正的 Render 函数只有一个地方，那就是 render.js 中的 render 选项，只是它代理了 column 中的 render。这里有点绕，理清这个关系，就对 Functional Render 彻底理解了。")]),n._v(" "),a("h2",{attrs:{id:"修改当前行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改当前行"}},[n._v("#")]),n._v(" 修改当前行")]),n._v(" "),a("p",[n._v("有了 render，Table 组件就已经完成了，剩余工作都是使用者来配置 columns 完成各种复杂的业务逻辑。本例来介绍最常见的表格中对整行数据编辑的功能。")]),n._v(" "),a("p",[a("strong",[n._v("操作")]),n._v("这一列，默认是一个"),a("strong",[n._v("修改")]),n._v("按钮，点击后，变为"),a("strong",[n._v("保存")]),n._v("和"),a("strong",[n._v("取消")]),n._v("两个按钮，同时本行其它各列都变为了输入框，并且初始值就是刚才单元格的数据。变为输入框后，可以任意修改单元格数据，点击保存按钮保存整行数据，点击取消按钮，还原至修改前的数据。")]),n._v(" "),a("p",[n._v("当进入编辑状态时，每一列的输入框都要有一个临时的数据使用 "),a("code",[n._v("v-model")]),n._v(" 双向绑定来响应修改，所以在 data 里再声明四个数据：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("// table-render.vue，部分代码省略\n{\n  data () {\n    return {\n      // ...\n      editName: '',  // 第一列输入框\n      editAge: '',  // 第二列输入框\n      editBirthday: '',  // 第三列输入框\n      editAddress: '',  // 第四列输入框\n    }\n  }\n}\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br")])]),a("p",[n._v("同时还要知道是在修改第几行的数据，所以再加一个数据标识当前正在修改的行序号（从 0 开始）：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("// table-render.vue，部分代码省略\n{\n  data () {\n    return {\n      // ...\n      editIndex: -1,  // 当前聚焦的输入框的行数\n    }\n  }\n}\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br")])]),a("p",[a("code",[n._v("editIndex")]),n._v(" 默认给了 -1，也就是一个不存在的行号，当点击修改按钮时，再将它置为正确的行号。我们先定义操作列的 render：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("// table-render.vue，部分代码省略\n{\n  data () {\n    columns: [\n      // ...\n      {\n        title:  '操作',\n        render: (h, { row, index }) => {\n          // 如果当前行是编辑状态，则渲染两个按钮\n          if (this.editIndex === index) {\n            return [\n              h('button', {\n                on: {\n                  click: () => {\n                    this.data[index].name = this.editName;\n                    this.data[index].age = this.editAge;\n                    this.data[index].birthday = this.editBirthday;\n                    this.data[index].address = this.editAddress;\n                    this.editIndex = -1;\n                  }\n                }\n              }, '保存'),\n              h('button', {\n                style: {\n                  marginLeft: '6px'\n                },\n                on: {\n                  click: () => {\n                    this.editIndex = -1;\n                  }\n                }\n              }, '取消')\n            ];\n          } else {  // 当前行是默认状态，渲染为一个按钮\n            return h('button', {\n              on: {\n                click: () => {\n                  this.editName = row.name;\n                  this.editAge = row.age;\n                  this.editAddress = row.address;\n                  this.editBirthday = row.birthday;\n                  this.editIndex = index;\n                }\n              }\n            }, '修改');\n          }\n        }\n      }\n    ]\n  }\n}\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br")])]),a("p",[n._v("render 里的 "),a("code",[n._v("if / else")]),n._v(" 可以先看 else，因为默认是非编辑状态，也就是说 "),a("code",[n._v("editIndex")]),n._v(" 还是 -1。当点击"),a("strong",[n._v("修改")]),n._v("按钮时，把 render 中第二个参数 "),a("code",[n._v("{ row }")]),n._v(" 中的各列数据赋值给了之前在 data 中声明的 4 个数据，这样做是因为之后点击"),a("strong",[n._v("取消")]),n._v("按钮时，editName 等值已经修改了，还没有还原，所以在开启编辑状态的同时，初始化各输入框的值（当然也可以在取消时重置）。最后再把 "),a("code",[n._v("editIndex")]),n._v(" 置为了对应的行序号 "),a("code",[n._v("{ index }")]),n._v("，此时 render 的 "),a("code",[n._v("if")]),n._v(" 条件 "),a("code",[n._v("this.editIndex === index")]),n._v(" 为真，编辑列变成了两个按钮：保存和取消。点击保存，直接修改表格源数据 data 中对应的各字段值，并将 editIndex 置为 -1，退出编辑状态；点击取消，不保存源数据，直接退出编辑状态。")]),n._v(" "),a("p",[n._v("除编辑列，其它各数据列都有两种状态：")]),n._v(" "),a("ol",[a("li",[n._v("当 editIndex 等于当前行号 index 时，呈现输入框状态；")]),n._v(" "),a("li",[n._v("当 editIndex 不等于当前行号 index 时，呈现默认数据。")])]),n._v(" "),a("p",[n._v("以姓名为例：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("// table-render.vue，部分代码省略\n{\n  data () {\n    columns: [\n      // ...\n      {\n        title:  '姓名',\n        key: 'name',\n        render: (h, { row, index }) => {\n          let edit;\n\n          // 当前行为聚焦行时\n          if (this.editIndex === index) {\n            edit = [h('input', {\n              domProps: {\n                value: row.name\n              },\n              on: {\n                input: (event) => {\n                  this.editName = event.target.value;\n                }\n              }\n            })];\n          } else {\n            edit = row.name;\n          }\n\n          return h('div', [\n            edit\n          ]);\n        }\n      }\n    ]\n  }\n}\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br")])]),a("p",[n._v("变量 "),a("code",[n._v("edit")]),n._v(" 根据 editIndex 呈现不同的节点，还是先看 else，直接显示了对应字段的数据。在聚焦时（this.editIndex === index），渲染一个 "),a("code",[n._v("input")]),n._v(" 输入框，初始值 "),a("code",[n._v("value")]),n._v(" 通过 render 的 "),a("code",[n._v("domProps")]),n._v(" 绑定了 "),a("code",[n._v("row.name")]),n._v("（这里也可绑定 editName），并监听了 input 事件，将输入的内容，实时缓存在数据 "),a("code",[n._v("editName")]),n._v(" 中，供保存时使用。事实上，这里绑定的 value 和事件 input 就是语法糖 "),a("code",[n._v("v-model")]),n._v(" 在 Render 函数中的写法，在 template 中，经常写作 "),a("code",[n._v('<input v-model="editName">')]),n._v("。")]),n._v(" "),a("p",[n._v("其它列与姓名类似，只是对于的字段不同：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("// table-render.vue，部分代码省略\n{\n  data () {\n    return {\n      columns: [\n        // ...\n        {\n          title:  '年龄',\n          key: 'age',\n          render: (h, { row, index }) => {\n            let edit;\n\n            // 当前行为聚焦行时\n            if (this.editIndex === index) {\n              edit = [h('input', {\n                domProps: {\n                  value: row.age\n                },\n                on: {\n                  input: (event) => {\n                    this.editAge = event.target.value;\n                  }\n                }\n              })];\n            } else {\n              edit = row.age;\n            }\n\n            return h('div', [\n              edit\n            ]);\n          }\n        },\n        {\n          title:  '出生日期',\n          render: (h, { row, index }) => {\n            let edit;\n\n            // 当前行为聚焦行时\n            if (this.editIndex === index) {\n              edit = [h('input', {\n                domProps: {\n                  value: row.birthday\n                },\n                on: {\n                  input: (event) => {\n                    this.editBirthday = event.target.value;\n                  }\n                }\n              })];\n            } else {\n              const date = new Date(parseInt(row.birthday));\n              const year = date.getFullYear();\n              const month = date.getMonth() + 1;\n              const day = date.getDate();\n\n              edit = `${year}-${month}-${day}`;\n            }\n\n            return h('div', [\n              edit\n            ]);\n          }\n        },\n        {\n          title:  '地址',\n          key: 'address',\n          render: (h, { row, index }) => {\n            let edit;\n\n            // 当前行为聚焦行时\n            if (this.editIndex === index) {\n              edit = [h('input', {\n                domProps: {\n                  value: row.address\n                },\n                on: {\n                  input: (event) => {\n                    this.editAddress = event.target.value;\n                  }\n                }\n              })];\n            } else {\n              edit = row.address;\n            }\n\n            return h('div', [\n              edit\n            ]);\n          }\n        },\n      ]\n    }\n  }\n}\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br"),a("span",{staticClass:"line-number"},[n._v("69")]),a("br"),a("span",{staticClass:"line-number"},[n._v("70")]),a("br"),a("span",{staticClass:"line-number"},[n._v("71")]),a("br"),a("span",{staticClass:"line-number"},[n._v("72")]),a("br"),a("span",{staticClass:"line-number"},[n._v("73")]),a("br"),a("span",{staticClass:"line-number"},[n._v("74")]),a("br"),a("span",{staticClass:"line-number"},[n._v("75")]),a("br"),a("span",{staticClass:"line-number"},[n._v("76")]),a("br"),a("span",{staticClass:"line-number"},[n._v("77")]),a("br"),a("span",{staticClass:"line-number"},[n._v("78")]),a("br"),a("span",{staticClass:"line-number"},[n._v("79")]),a("br"),a("span",{staticClass:"line-number"},[n._v("80")]),a("br"),a("span",{staticClass:"line-number"},[n._v("81")]),a("br"),a("span",{staticClass:"line-number"},[n._v("82")]),a("br"),a("span",{staticClass:"line-number"},[n._v("83")]),a("br"),a("span",{staticClass:"line-number"},[n._v("84")]),a("br"),a("span",{staticClass:"line-number"},[n._v("85")]),a("br"),a("span",{staticClass:"line-number"},[n._v("86")]),a("br"),a("span",{staticClass:"line-number"},[n._v("87")]),a("br"),a("span",{staticClass:"line-number"},[n._v("88")]),a("br"),a("span",{staticClass:"line-number"},[n._v("89")]),a("br"),a("span",{staticClass:"line-number"},[n._v("90")]),a("br"),a("span",{staticClass:"line-number"},[n._v("91")]),a("br"),a("span",{staticClass:"line-number"},[n._v("92")]),a("br"),a("span",{staticClass:"line-number"},[n._v("93")]),a("br"),a("span",{staticClass:"line-number"},[n._v("94")]),a("br"),a("span",{staticClass:"line-number"},[n._v("95")]),a("br"),a("span",{staticClass:"line-number"},[n._v("96")]),a("br")])]),a("blockquote",[a("p",[n._v("完整的代码见："),a("a",{attrs:{href:"https://github.com/icarusion/vue-component-book/blob/master/src/views/table-render.vue",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://github.com/icarusion/vue-component-book/blob/master/src/views/table-render.vue"),a("OutboundLink")],1)])]),n._v(" "),a("p",[n._v("这样，可编辑行的表格示例就完成了：")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/15/16716c54fc74a1a5?w=2088&h=456&f=gif&s=520544",alt:""}})]),n._v(" "),a("h2",{attrs:{id:"结语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[n._v("#")]),n._v(" 结语")]),n._v(" "),a("p",[n._v("本示例的 Table 组件，只展现了表格最核心的功能——自定义列模板，一个完整的 Table 组件功能要复杂的多，比如排序、筛选、列固定、表头固定、表头嵌套等。万事开头难，打好了 Table 的地基，后面的功能可以持续开发。")]),n._v(" "),a("p",[n._v("事实上，很多 Vue.js 的开发难题，都可以用 Render 函数来解决，它比 template 模板更灵活，可以完全发挥 JavaScript 的编程能力，因此很多 JS 的开发思想都可以借鉴。如果你习惯 JSX，那完全可以抛弃传统的 template 写法。")]),n._v(" "),a("p",[n._v("Render 函数虽好，但也是有弊端的，通过上面的示例可以发现，写出来的 VNode 对象是很难读的，维护性也比 template 差。下一节，我们将改写 Table 组件，用另一种思想来实现同样的功能。")]),n._v(" "),a("h2",{attrs:{id:"扩展阅读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展阅读"}},[n._v("#")]),n._v(" 扩展阅读")]),n._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/lovebear/archive/2012/04/18/2456081.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Div 和 Table 的区别"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=t.exports}}]);