(window.webpackJsonp=window.webpackJsonp||[]).push([[181],{664:function(s,n,e){"use strict";e.r(n);var a=e(59),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"vue-实战：vue-property-decorator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-实战：vue-property-decorator"}},[s._v("#")]),s._v(" Vue 实战：vue-property-decorator")]),s._v(" "),e("p",[s._v("我们打开项目，发现最大的不同是额外引入了一个库 "),e("code",[s._v("vue-property-decorator")]),s._v("。")]),s._v(" "),e("p",[s._v("由于它的存在，我们可以使用基于类的注解装饰器进行开发，这个语法就有点像 Angular 了。")]),s._v(" "),e("p",[s._v("你可能听说过另外一个库 – "),e("code",[s._v("vue-class-component")]),s._v("，它是 Vue 官方推出的一个支持使用 class 方式来开发 vue 单文件组件的库。")]),s._v(" "),e("p",[s._v("而 "),e("code",[s._v("vue-property-decorator")]),s._v(" 正是基于此而来，它在此基础上增加了装饰器相关的功能，因此它也同时拥有 "),e("code",[s._v("vue-class-component")]),s._v(" 的功能。")]),s._v(" "),e("h2",{attrs:{id:"主要功能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#主要功能"}},[s._v("#")]),s._v(" 主要功能")]),s._v(" "),e("p",[s._v("vue-class-component 功能如下：")]),s._v(" "),e("ul",[e("li",[s._v("methods 可以直接声明为类的成员方法")]),s._v(" "),e("li",[s._v("计算属性可以被声明为类的属性访问器")]),s._v(" "),e("li",[s._v("初始化的 data 可以被声明为类属性")]),s._v(" "),e("li",[s._v("data、render 以及所有的 Vue 生命周期钩子可以直接作为类的成员方法")]),s._v(" "),e("li",[s._v("所有其他属性，需要放在装饰器中")])]),s._v(" "),e("p",[s._v("vue-property-decorator 主要提供了多个装饰器和一个函数:")]),s._v(" "),e("ul",[e("li",[s._v("@Prop")]),s._v(" "),e("li",[s._v("@PropSync")]),s._v(" "),e("li",[s._v("@Model")]),s._v(" "),e("li",[s._v("@Watch")]),s._v(" "),e("li",[s._v("@Provide")]),s._v(" "),e("li",[s._v("@Inject")]),s._v(" "),e("li",[s._v("@ProvideReactive")]),s._v(" "),e("li",[s._v("@InjectReactive")]),s._v(" "),e("li",[s._v("@Emit")]),s._v(" "),e("li",[s._v("@Ref")]),s._v(" "),e("li",[s._v("@Component (由 vue-class-component 提供)")]),s._v(" "),e("li",[s._v("Mixins (由 vue-class-component 提供)")])]),s._v(" "),e("h2",{attrs:{id:"vue-class-component-主要功能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-class-component-主要功能"}},[s._v("#")]),s._v(" vue-class-component 主要功能")]),s._v(" "),e("h3",{attrs:{id:"component"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#component"}},[s._v("#")]),s._v(" @Component")]),s._v(" "),e("p",[s._v("Component装饰器它注明了此类为一个Vue组件，因此即使没有设置选项也不能省略。如果需要定义比如 name、components、filters、directives以及自定义属性，就可以在Component装饰器中定义。")]),s._v(" "),e("p",[s._v("JavaScript 中的代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import {componentA,componentB} from '@/components';\n\nexport default{\n    components:{\n        componentA,\n        componentB,\n    },\n    directives: {\n        focus: {\n            // 指令的定义\n            inserted: function (el) {\n                el.focus()\n            }\n        }\n    }\n}\n\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[s._v("在 TypeScript中如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import {Component,Vue} from 'vue-property-decorator';\nimport {componentA,componentB} from '@/components';\n\n @Component({\n    components:{\n        componentA,\n        componentB,\n    },\n    directives: {\n        focus: {\n            // 指令的定义\n            inserted: function (el) {\n                el.focus()\n            }\n        }\n    }\n})\nexport default class YourCompoent extends Vue{\n   \n}\n\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br")])]),e("h3",{attrs:{id:"computed、data、methods语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#computed、data、methods语法"}},[s._v("#")]),s._v(" Computed、Data、Methods语法")]),s._v(" "),e("p",[s._v("这里取消了组件的data和methods属性，以往data返回对象中的属性、methods中的方法需要直接定义在Class中，当做类的属性和方法。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("@Component\nexport default class HelloDecorator extends Vue {\n    count: number = 123 // 类属性相当于以前的 data\n\n    add(): number { // 类方法就是以前的方法\n        this.count + 1\n    }\n\n    // 获取计算属性\n    get total(): number {\n      return this.count + 1\n    }\n\n    // 设置计算属性\n    set total(param:number): void {\n      this.count = param\n    }\n}\n\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("h2",{attrs:{id:"vue-property-decorator-主要-api-解读"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-property-decorator-主要-api-解读"}},[s._v("#")]),s._v(" vue-property-decorator 主要 API 解读")]),s._v(" "),e("h3",{attrs:{id:"prop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prop"}},[s._v("#")]),s._v(" @Prop")]),s._v(" "),e("p",[s._v("这个装饰器是属性相关的装饰器, "),e("code",[s._v("@Prop(options: (PropOptions | Constructor[] | Constructor) = {})")]),s._v("。")]),s._v(" "),e("p",[s._v("在使用Prop装饰器定义属性时，如果我们打开了 tsconfig.js 配置文件中的 strictpropertyinitialize 选项，我们就需要通过附加一个 "),e("code",[s._v("!")]),s._v(" 给定义的属性，还记得这个语法吗？显式复制断言。")]),s._v(" "),e("p",[s._v("我们看一下 JavaScript 版的一个 Vue 代码片段：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("export default{\n    props:{\n        propA:String,\n        propB:[String,Number],\n        propC:{\n            type:Array,\n            default:()=>{\n                return ['a','b']\n            },\n            required: true,\n            validator:(value) => {\n                return [\n                    'a',\n                    'b'\n                 ].indexOf(value) !== -1\n        }\n    }\n}\n}\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("p",[s._v("如果我们使用的是 TypeScript：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("\nimport {Component,Vue,Prop} from vue-property-decorator;\n\n@Component\nexport default class YourComponent extends Vue {\n    @Prop(String)\n    propA:string;\n    \n    @Prop([String,Number])\n    propB:string|number;\n    \n    @Prop({\n     type: String, // type: [String , Number]\n     default: 'default value', // 一般为String或Number\n      //如果是对象或数组的话。默认值从一个工厂函数中返回\n      // defatult: () => {\n      //     return ['a','b']\n      // }\n     required: true,\n     validator: (value) => {\n        return [\n          'InProcess',\n          'Settled'\n        ].indexOf(value) !== -1\n     }\n    })\n    propC:string;\n    \n    \n}\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("h2",{attrs:{id:"watch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#watch"}},[s._v("#")]),s._v(" @Watch")]),s._v(" "),e("p",[s._v("这个装饰器其实就是 Vue 中的侦听器。")]),s._v(" "),e("blockquote",[e("p",[e("code",[s._v("@Watch(path: string, options: WatchOptions = {})")])])]),s._v(" "),e("p",[s._v("JavaScript 版 vue 中写法：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("export default {\n  watch: {\n    child: [\n      {\n        handler: 'onChildChanged',\n        immediate: false,\n        deep: false\n      }\n    ],\n    person: [\n      {\n        handler: 'onPersonChanged1',\n        immediate: true,\n        deep: true\n      },\n      {\n        handler: 'onPersonChanged2',\n        immediate: false,\n        deep: false\n      }\n    ]\n  },\n  methods: {\n    onChildChanged(val, oldVal) {},\n    onPersonChanged1(val, oldVal) {},\n    onPersonChanged2(val, oldVal) {}\n  }\n}\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("p",[s._v("在 TypeScript 中：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import { Vue, Component, Watch } from 'vue-property-decorator'\n\n@Component\nexport default class YourComponent extends Vue {\n  @Watch('child')\n  onChildChanged(val: string, oldVal: string) {}\n\n  @Watch('person', { immediate: true, deep: true })\n  onPersonChanged1(val: Person, oldVal: Person) {}\n\n  @Watch('person')\n  onPersonChanged2(val: Person, oldVal: Person) {}\n}\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[s._v("使用了装饰器后明显代码简洁了不少。")]),s._v(" "),e("h2",{attrs:{id:"emit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#emit"}},[s._v("#")]),s._v(" @Emit")]),s._v(" "),e("p",[s._v("关于 Vue 中的事件的监听与触发,Vue 提供了两个函数 "),e("code",[s._v("$emit")]),s._v(" 和 "),e("code",[s._v("$on")]),s._v("。那么在 "),e("code",[s._v("vue-property-decorator")]),s._v(" 中如何使用呢?")]),s._v(" "),e("p",[s._v("这就需要用到 "),e("code",[s._v("vue-property-decorator")]),s._v(" 提供的 @Emit 装饰器。")]),s._v(" "),e("p",[s._v("在 JavaScript 中如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    import Vue from 'vue';\n    export default {\n        mounted(){\n            this.$on('emit-todo', function(n) {\n                console.log(n)\n            })\n            this.emitTodo('world');\n        },\n        methods: {\n            emitTodo(n){\n                console.log('hello');\n                this.$emit('emit-todo', n);\n            }\n        }\n    }\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[s._v("在 TypeScript 中如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("   import {Vue, Component, Emit} from 'vue-property-decorator';\n    @Component({})\n    export default class Some extends Vue{\n        mounted(){\n            this.$on('emit-todo', function(n) {\n                console.log(n)\n            })\n            this.emitTodo('world');\n        }\n            @Emit()\n        emitTodo(n: string){\n            console.log('hello');\n        }\n    }\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[s._v("在 "),e("code",[s._v("@Emit")]),s._v(" 装饰器的函数会在运行之后触发等同于其函数名(驼峰式会转为横杠式写法)的事件, 并将其函数传递给 "),e("code",[s._v("$emit")]),s._v(". 如果我们想触发特定的事件呢,比如在 emitTodo 下触发 reset事件:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v(" import {Vue, Component, Emit} from 'vue-property-decorator';\n    @Component({})\n    export default class \"组件名\" extends Vue{\n        @Emit('reset')\n        emitTodo(n: string){\n        }\n    }\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("我们只需要给装饰器 @Emit 传递一个事件名参数 reset,这样函数 emitTodo 运行之后就会触发 reset 事件.")]),s._v(" "),e("p",[s._v("在 Vue 中我们是使用 "),e("code",[s._v("$emit")]),s._v(" 触发事件,使用 "),e("code",[s._v("vue-property-decorator")]),s._v(" 时,可以借助 @Emit 装饰器来实现。")]),s._v(" "),e("p",[s._v("@Emit 修饰的函数所接受的参数会在运行之后触发事件的时候传递过去。")]),s._v(" "),e("p",[s._v("@Emit触发事件有两种写法:")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("@Emit()")]),s._v(" 不传参数,那么它触发的事件名就是它所修饰的函数名")]),s._v(" "),e("li",[e("code",[s._v("@Emit(name: string)")]),s._v(" 里面传递一个字符串,该字符串为要触发的事件名")])]),s._v(" "),e("h2",{attrs:{id:"model"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#model"}},[s._v("#")]),s._v(" @Model")]),s._v(" "),e("p",[s._v("Vue 组件提供 "),e("code",[s._v("model: {prop?: string, event?: string}")]),s._v(" 让我们可以定制 prop 和 event。")]),s._v(" "),e("p",[s._v("默认情况下，一个组件上的 v-model 会把 value 用作 prop且把 input用作 event，但是一些输入类型比如单选框和复选框按钮可能想使用 value prop来达到不同的目的，使用model选项可以回避这些情况产生的冲突。")]),s._v(" "),e("p",[s._v("比如：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("Vue.component('my-checkbox', {\n  model: {\n    prop: 'checked',\n    event: 'change'\n  },\n  props: {\n    // this allows using the `value` prop for a different purpose\n    value: String,\n    // use `checked` as the prop which take the place of `value`\n    checked: {\n      type: Number,\n      default: 0\n    }\n  },\n  // ...\n})\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[s._v("在模板中使用：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<my-checkbox v-model="foo" value="some value"></my-checkbox>\n\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("此模板相当于：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<my-checkbox\n  :checked="foo"\n  @change="val => { foo = val }"\n  value="some value">\n</my-checkbox>\n\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("使用 vue-property-decorator 提供的 @Model 改造上面的例子:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import { Vue, Component, Model} from 'vue-property-decorator';\n@Component\nexport class myCheck extends Vue{\n   @Model ('change', {type: Boolean})  checked!: boolean;\n}\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("code",[s._v("@Model()")]),s._v(" 接收两个参数, 第一个是 event 值, 第二个是prop 的类型说明。")]),s._v(" "),e("h2",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),e("p",[s._v("我们通过本节学习了 TypeScript 版的 Vue Class 化的语法，要多处用到装饰器和 Class，这跟 Vue 原本的语法想去很远，但是其本质是一样的，我们可以进入实战来快速熟悉这些语法。")])])}),[],!1,null,null,null);n.default=t.exports}}]);