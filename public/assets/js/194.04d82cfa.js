(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{677:function(v,_,e){"use strict";e.r(_);var o=e(59),t=Object(o.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h3",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[v._v("#")]),v._v(" 前言")]),v._v(" "),e("p",[v._v("曾经简单的交互都需使用JS才能完成，经历过"),e("code",[v._v("jQuery时代")]),v._v("的同学应该很清楚，使用原生JS写交互很艰难，但是使用"),e("code",[v._v("jQuery")]),v._v("封装好的交互函数那就很简单了。")]),v._v(" "),e("p",[v._v("如今CSS3增加了"),e("code",[v._v("transform")]),v._v("、"),e("code",[v._v("transition")]),v._v("和"),e("code",[v._v("animation")]),v._v("三大交互属性，为CSS的单调性增加了很多趣味，也为交互开发增加了新的可能。")]),v._v(" "),e("h3",{attrs:{id:"变换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#变换"}},[v._v("#")]),v._v(" 变换")]),v._v(" "),e("p",[v._v("变换分为"),e("code",[v._v("2D变换")]),v._v("和"),e("code",[v._v("3D变换")]),v._v("。2D变换在平面上操作，3D变换在空间上操作，2D和3D的概念相信很多同学都会了吧。变换可理解成将节点复制一份并生成新的图层，原节点隐藏，使用新节点进行变换操作。")]),v._v(" "),e("p",[v._v("声明"),e("code",[v._v("transform-style")]),v._v("可实现"),e("code",[v._v("2D变换")]),v._v("和"),e("code",[v._v("3D变换")]),v._v("间的切换，不同变换空间需使用对应的变换函数。当然"),e("code",[v._v("transform-style")]),v._v("需声明在父节点中，即需发生变换的节点的父节点。")]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("flat")]),v._v("：所有变换效果在平面上呈现("),e("code",[v._v("默认")]),v._v(")")]),v._v(" "),e("li",[e("strong",[v._v("preserve-3d")]),v._v("：所有变换效果在空间上呈现")])]),v._v(" "),e("p",[v._v("笔者已将"),e("code",[v._v("2D变换函数")]),v._v("和"),e("code",[v._v("3D变换函数")]),v._v("整理好，在不同变换空间使用对应的变换函数即可。")]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("translate()")]),v._v("：位移"),e("br"),v._v("\n* "),e("strong",[v._v("translate(x,y)")]),v._v("：2D位移"),e("br"),v._v("\n* "),e("strong",[v._v("translate3d(x,y,z)")]),v._v("：3D位移"),e("br"),v._v("\n* "),e("strong",[v._v("translateX(x)")]),v._v("：X轴位移，等同于"),e("code",[v._v("translate(x,0)")]),v._v("或"),e("code",[v._v("translate3d(x,0,0)")]),e("br"),v._v("\n* "),e("strong",[v._v("translateY(y)")]),v._v("：Y轴位移，等同于"),e("code",[v._v("translate(0,y)")]),v._v("或"),e("code",[v._v("translate3d(0,y,0)")]),e("br"),v._v("\n* "),e("strong",[v._v("translateZ(z)")]),v._v("：Z轴位移，等同于"),e("code",[v._v("translate3d(0,0,z)")]),e("br"),v._v("\n* 描述\n"),e("ul",[e("li",[v._v("单位："),e("code",[v._v("Length")]),v._v("长度，可用任何长度单位，允许负值")]),v._v(" "),e("li",[v._v("默认：XYZ轴不声明默认是"),e("code",[v._v("0")])]),v._v(" "),e("li",[v._v("正值：沿X轴向右位移/沿Y轴向上位移/沿Z轴向外位移")]),v._v(" "),e("li",[v._v("负值：沿X轴向左位移/沿Y轴向下位移/沿Z轴向内位移")])])]),v._v(" "),e("li",[e("strong",[v._v("scale()")]),v._v("：缩放"),e("br"),v._v("\n* "),e("strong",[v._v("scale(x,y)")]),v._v("：2D缩放"),e("br"),v._v("\n* "),e("strong",[v._v("scale3d(x,y,z)")]),v._v("：3D缩放"),e("br"),v._v("\n* "),e("strong",[v._v("scaleX(x)")]),v._v("：X轴缩放，等同于"),e("code",[v._v("scale(x,1)")]),v._v("或"),e("code",[v._v("scale3d(x,1,1)")]),e("br"),v._v("\n* "),e("strong",[v._v("scaleY(y)")]),v._v("：Y轴缩放，等同于"),e("code",[v._v("scale(1,y)")]),v._v("或"),e("code",[v._v("scale3d(1,y,1)")]),e("br"),v._v("\n* "),e("strong",[v._v("scaleZ(z)")]),v._v("：Z轴缩放，等同于"),e("code",[v._v("scale3d(1,1,z)")]),e("br"),v._v("\n* 描述\n"),e("ul",[e("li",[v._v("单位："),e("code",[v._v("Number")]),v._v("数值或"),e("code",[v._v("Percentage")]),v._v("百分比，允许负值")]),v._v(" "),e("li",[v._v("默认：XYZ轴不声明默认是"),e("code",[v._v("1")]),v._v("或"),e("code",[v._v("100%")])]),v._v(" "),e("li",[v._v("正值："),e("code",[v._v("0<(x,y,z)<1")]),v._v("沿X轴缩小/沿Y轴缩小/沿Z轴变厚，"),e("code",[v._v("(x,y,z)>1")]),v._v("沿X轴放大/沿Y轴放大/沿Z轴变薄")]),v._v(" "),e("li",[v._v("负值："),e("code",[v._v("-1<(x,y,z)<0")]),v._v("翻转沿X轴缩小/沿Y轴缩小/沿Z轴变厚，"),e("code",[v._v("(x,y,z)<-1")]),v._v("翻转沿X轴放大/沿Y轴放大/沿Z轴变薄")])])]),v._v(" "),e("li",[e("strong",[v._v("skew()")]),v._v("：扭曲"),e("br"),v._v("\n* "),e("strong",[v._v("skew(x,y)")]),v._v("：2D扭曲"),e("br"),v._v("\n* "),e("strong",[v._v("skewX(x)")]),v._v("：X轴扭曲，等同于"),e("code",[v._v("skew(x,0)")]),e("br"),v._v("\n* "),e("strong",[v._v("skewY(y)")]),v._v("：Y轴扭曲，等同于"),e("code",[v._v("skew(0,y)")]),e("br"),v._v("\n* 描述\n"),e("ul",[e("li",[v._v("单位："),e("code",[v._v("Angle")]),v._v("角度或"),e("code",[v._v("Turn")]),v._v("周")]),v._v(" "),e("li",[v._v("默认：XY轴不声明默认是"),e("code",[v._v("0")])]),v._v(" "),e("li",[v._v("正值：沿X轴向左扭曲/沿Y轴向下扭曲")]),v._v(" "),e("li",[v._v("负值：沿X轴向右扭曲/沿Y轴向上扭曲")])])]),v._v(" "),e("li",[e("strong",[v._v("rotate()")]),v._v("：旋转"),e("br"),v._v("\n* "),e("strong",[v._v("rotate()")]),v._v("：2D旋转"),e("br"),v._v("\n* "),e("strong",[v._v("rotate3d(x,y,z,a)")]),v._v("：3D旋转，"),e("code",[v._v("[x,y,z]")]),v._v("是一个向量，数值都是"),e("code",[v._v("0~1")]),e("br"),v._v("\n* "),e("strong",[v._v("rotateX(a)")]),v._v("：X轴旋转，等同于"),e("code",[v._v("rotate(1,0,0,a)")]),v._v("，正值时沿X轴向上逆时针旋转，负值时沿X轴向下顺时针旋转"),e("br"),v._v("\n* "),e("strong",[v._v("rotateY(a)")]),v._v("：3D Y轴旋转，等同于"),e("code",[v._v("rotate(0,1,0,a)")]),v._v("，正值时沿Y轴向右逆时针旋转，负值时沿Y轴向左顺时针旋转"),e("br"),v._v("\n* "),e("strong",[v._v("rotateZ(a)")]),v._v("：3D Z轴旋转，等同于"),e("code",[v._v("rotate(0,0,1,a)")]),v._v("，正值时沿Z轴顺时针旋转，负值时沿Z轴逆时针旋转"),e("br"),v._v("\n* 描述\n"),e("ul",[e("li",[v._v("单位："),e("code",[v._v("Angle")]),v._v("角度或"),e("code",[v._v("Turn")]),v._v("周")]),v._v(" "),e("li",[v._v("正值：2D旋转时顺时针旋转")]),v._v(" "),e("li",[v._v("负值：2D旋转时逆时针旋转")])])]),v._v(" "),e("li",[e("strong",[v._v("matrix()")]),v._v("：矩阵("),e("code",[v._v("太过复杂，可放弃")]),v._v(")"),e("br"),v._v("\n* "),e("strong",[v._v("matrix(a,b,c,d,e,f)")]),v._v("：2D矩阵(位移、缩放、扭曲、旋转的综合函数)"),e("br"),v._v("\n* "),e("strong",[v._v("matrix(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p)")]),v._v("：3D矩阵(位移、缩放、扭曲、旋转的综合函数)")]),v._v(" "),e("li",[e("strong",[v._v("perspective()")]),v._v("：视距"),e("br"),v._v("\n* "),e("code",[v._v("Length")]),v._v("：长度，可用任何长度单位")])]),v._v(" "),e("p",[e("code",[v._v("transform")]),v._v("的使用场景很多，不局限于某种特定场景，若结合"),e("code",[v._v("transition")]),v._v("和"),e("code",[v._v("animation")]),v._v("使用还必须注意性能问题。")]),v._v(" "),e("blockquote",[e("p",[v._v("多值执行顺序")])]),v._v(" "),e("p",[v._v("与"),e("code",[v._v("backgound")]),v._v("和"),e("code",[v._v("mask")]),v._v("一致可声明多重效果，使用"),e("code",[v._v("逗号")]),v._v("隔开。网上很多结论说"),e("code",[v._v("transform")]),v._v("多值执行顺序是"),e("code",[v._v("从左到右")]),v._v("或"),e("code",[v._v("从右到左")]),v._v("，其实这样的结论都是比较笼统的。正确来说并无执行上的先后顺序, 而是由多个变换对应的矩阵相乘, 再拿该矩阵去乘以坐标，最终得出变换效果。")]),v._v(" "),e("p",[v._v("例如"),e("code",[v._v("transform:translate(150px,0),rotate(45deg)")]),v._v("和"),e("code",[v._v("transform:rotate(45deg),translate(150px,0)")]),v._v("，最终的变换效果就有所不同。")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7a3851be62304907bc11da4b95752507~tplv-k3u1fbpfcp-zoom-1.image",alt:"多值执行顺序"}})]),v._v(" "),e("ul",[e("li",[v._v("第一种：先往右位移"),e("code",[v._v("150px")]),v._v("，坐标轴不变；再顺时针旋转"),e("code",[v._v("45deg")]),v._v("，坐标轴顺时针旋转"),e("code",[v._v("45deg")])]),v._v(" "),e("li",[v._v("第二种：先顺时针旋转"),e("code",[v._v("45deg")]),v._v("，坐标轴顺时针旋转"),e("code",[v._v("45deg")]),v._v("；再往右位移"),e("code",[v._v("150px")]),v._v("，坐标轴不变")])]),v._v(" "),e("p",[e("code",[v._v(".elem { display: flex; justify-content: center; align-items: center; position: absolute; left: 50px; top: 50px; width: 100px; height: 100px; background-color: #f66; font-size: 20px; color: #fff; &.transform-1 { transform: translate(150px, 0) rotate(45deg); } &.transform-2 { transform: rotate(45deg) translate(150px, 0); } }")])]),v._v(" "),e("p",[v._v("正确的理解是"),e("code",[v._v("从左到右")]),v._v("，但是还得注意坐标轴是否发生了变化，若坐标轴发生了变化，会影响到后续的变换效果。"),e("strong",[v._v("优先考虑坐标轴的变化，先分析出前后"),e("code",[v._v("缩放旋转")]),v._v("的变化，再分析出前后"),e("code",[v._v("位移扭曲")]),v._v("的变化")]),v._v("。")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("缩放和旋转都能让坐标轴发生变化，这个必须谨记\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("blockquote",[e("p",[v._v("视距效果")])]),v._v(" "),e("p",[e("code",[v._v("transform:perspective()")]),v._v("也可通过"),e("code",[v._v("perspective")]),v._v("声明，这个属性在开启3D变换后最好声明上，否则有些3D变换效果可能无法得到更好的展现。")]),v._v(" "),e("ul",[e("li",[v._v("值越小，用户与空间Z轴距离越近，视觉效果越强")]),v._v(" "),e("li",[v._v("值越大，用户与空间Z轴距离越远，视觉效果越弱")])]),v._v(" "),e("blockquote",[e("p",[v._v("perspective/perspective()区别")])]),v._v(" "),e("p",[e("code",[v._v("perspective")]),v._v("和"),e("code",[v._v("transform:perspective()")]),v._v("都能声明视距，那为何要存在两种声明方式呢？当然是有它们的区别所以才能存在呀。")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("perspective")]),v._v("与"),e("code",[v._v("transform:perspective()")]),v._v("的作用相同")]),v._v(" "),e("li",[e("code",[v._v("perspective")]),v._v("在"),e("code",[v._v("舞台节点")]),v._v("(变换节点的父节点)上使用，"),e("code",[v._v("transform:perspective()")]),v._v("在"),e("code",[v._v("当前变换节点")]),v._v("上使用，也可与其他变换函数一起使用")])]),v._v(" "),e("blockquote",[e("p",[v._v("GPU硬件加速模式")])]),v._v(" "),e("p",[v._v("有无发现即使很简单的动画，有时都能引起卡顿，特别是在移动端上尤其明显。在此介绍一种Hack方法，为节点声明"),e("code",[v._v("transform:transition3d()")]),v._v("或"),e("code",[v._v("transform:translateZ()")]),v._v("，这两个声明都会开启"),e("strong",[v._v("GPU硬件加速模式")]),v._v("，从而让浏览器在渲染动画时从CPU转向GPU，实现硬件加速。")]),v._v(" "),e("p",[e("code",[v._v("transform:transition3d()")]),v._v("和"),e("code",[v._v("transform:translateZ()")]),v._v("其实是为了渲染3D样式，但声明为"),e("code",[v._v("0")]),v._v("后并无真正使用3D效果，但浏览器却因此开启了GPU硬件加速模式。在"),e("code",[v._v("Webkit内核")]),v._v("下使用"),e("code",[v._v("transform:translate3d()")]),v._v("加速效果会更明显。")]),v._v(" "),e("p",[e("code",[v._v(".elem { transform: transition3d(0, 0, 0); } /* 或 */ .elem { transform: translateZ(0); }")])]),v._v(" "),e("p",[v._v("在使用该方案时可能会出现诡异的缺陷。当有多个绝对定位的节点声明"),e("code",[v._v("transform:transition3d()")]),v._v("开启GPU硬件加速模式后会有几个节点凭空消失，是不是很诡异。这种现象不能完全解决，只能尽量避免。")]),v._v(" "),e("ul",[e("li",[v._v("尽量不要对节点及其父节点声明"),e("code",[v._v("position:absolute/fixed")]),v._v("，当然这个很难避免不使用")]),v._v(" "),e("li",[v._v("减少声明"),e("code",[v._v("transform:transition3d()")]),v._v("的节点数量，减少至6个以下即可")]),v._v(" "),e("li",[v._v("声明"),e("code",[v._v("will-change")]),v._v("代替"),e("code",[v._v("transform:transition3d()")]),v._v("，详情请戳"),e("a",{attrs:{href:"https://segmentfault.com/a/1190000020926189",target:"_blank",rel:"noopener noreferrer"}},[v._v("这里"),e("OutboundLink")],1)])]),v._v(" "),e("p",[v._v("笔者比较推荐第二种方法，节点的数量可通过JS动态控制，保持在6个以下。而"),e("code",[v._v("will-change")]),v._v("会存在另一些问题，大量使用还是会引发更严重的性能问题，笔者后续会在本章更新详细的分析。")]),v._v(" "),e("h5",{attrs:{id:"动感心形"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动感心形"}},[v._v("#")]),v._v(" 动感心形")]),v._v(" "),e("p",[e("code",[v._v("transform")]),v._v("有一个很实用的场景，就是通过"),e("code",[v._v("transform:translate()")]),v._v("补位。"),e("strong",[v._v("补位")]),v._v("指实现效果的最终位置还差一点距离就能完成，通过"),e("code",[v._v("margin")]),v._v("或"),e("code",[v._v("transform:translate()")]),v._v("将该距离补充完整，将节点调整到最终位置。")]),v._v(" "),e("p",[v._v("还记得第6章"),e("strong",[v._v("布局方式")]),v._v("的居中布局吗？有一种方式就是通过"),e("code",[v._v("transform:translate(-50%,-50%)")]),v._v("将节点拉回最中央，节点无需声明位移的距离是宽高的二分之一，使用"),e("code",[v._v("50%")]),v._v("自动计算其距离为宽高的二分之一即可。")]),v._v(" "),e("p",[v._v("描绘一个心形虽然不是一个很常用的场景，作为一名雄性程序猿，"),e("code",[v._v("214")]),v._v("和"),e("code",[v._v("520")]),v._v("等具有示爱性质的节日，当然少不了用纯CSS描绘一个动感心形啦。")]),v._v(" "),e("p",[v._v("使用单个"),e("code",[v._v("<div>")]),v._v("结合两个伪元素"),e("code",[v._v("::before")]),v._v("和"),e("code",[v._v("::after")]),v._v("通过错位叠加的方式合并成一个心形。")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/afcd1fed26dc49d580e7bd3be0fe25c3~tplv-k3u1fbpfcp-zoom-1.image",alt:"动感心形-1"}})]),v._v(" "),e("ul",[e("li",[v._v("声明"),e("code",[v._v("<div>")]),v._v("的尺寸为一个"),e("code",[v._v("正方形")]),v._v("并以中心顺时针旋转"),e("code",[v._v("45deg")])]),v._v(" "),e("li",[v._v("声明两个伪元素继承"),e("code",[v._v("<div>")]),v._v("的尺寸并实行绝对定位")]),v._v(" "),e("li",[v._v("声明两个伪元素的圆角率为"),e("code",[v._v("100%")]),v._v("并平移到相应位置")])]),v._v(" "),e("p",[v._v("巧妙利用了"),e("code",[v._v("transform")]),v._v("将两个伪元素平移到相应位置产生叠加错觉。")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7728b943ab574255b0bd124a6872b4d9~tplv-k3u1fbpfcp-zoom-1.image",alt:"动感心形"}})]),v._v(" "),e("p",[e("code",[v._v('<div class="heart-shape"></div>')])]),v._v(" "),e("p",[e("code",[v._v('.heart-shape { position: relative; width: 200px; height: 200px; background-color: #f66; transform: rotate(45deg); &::before, &::after { position: absolute; left: 0; top: 0; border-radius: 100%; width: 100%; height: 100%; background-color: #f66; content: ""; } &::before { transform: translateX(-50%); } &::after { transform: translateY(-50%); } }')])]),v._v(" "),e("hr"),v._v(" "),e("ul",[e("li",[v._v("在线演示："),e("a",{attrs:{href:"https://codepen.io/JowayYoung/pen/QWNdZRg",target:"_blank",rel:"noopener noreferrer"}},[v._v("Here"),e("OutboundLink")],1)]),v._v(" "),e("li",[v._v("在线源码："),e("a",{attrs:{href:"https://github.com/JowayYoung/idea-css/blob/master/icss/src/components/figure/%E4%BD%BF%E7%94%A8transform%E6%8F%8F%E7%BB%98%E5%8A%A8%E6%84%9F%E5%BF%83%E5%BD%A2.vue",target:"_blank",rel:"noopener noreferrer"}},[v._v("Here"),e("OutboundLink")],1)])]),v._v(" "),e("h5",{attrs:{id:"像素边框"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#像素边框"}},[v._v("#")]),v._v(" 像素边框")]),v._v(" "),e("p",[e("code",[v._v("1px边框")]),v._v("在桌面端网站看上去没什么大问题，但在移动端网站看上去却觉得很粗。由于大部分移动端都具有细腻的屏幕，像iPhone的"),e("code",[v._v("Retina屏幕")]),v._v("，一个像素可由4个点或9个点组成，在接近视网膜极限的情况下，"),e("code",[v._v("1px边框")]),v._v("看起来确实会有点粗。")]),v._v(" "),e("p",[v._v("那么可声明"),e("code",[v._v("0.5px边框")]),v._v("吗。答案是可行的，即使声明成功，但有些浏览器还是按照"),e("code",[v._v("1px")]),v._v("的值去渲染，这样就导致不同设备的边框参差不齐了。")]),v._v(" "),e("p",[v._v("换个思路，使用一个伪元素的边框去当作节点边框，声明"),e("code",[v._v("border")]),v._v("为"),e("code",[v._v("1px")]),v._v("并将其宽高声明成"),e("code",[v._v("200%")]),v._v("，最终效果是该节点的2倍大小，再通过声明"),e("code",[v._v("transform:scale(.5)")]),v._v("将该伪元素缩小到原来的"),e("code",[v._v("0.5倍")]),v._v("，现在和节点尺寸一致了，而"),e("code",[v._v("border")]),v._v("也通过浏览器自动计算成"),e("code",[v._v("0.5px")]),v._v("了，最终实现"),e("code",[v._v("0.5px边框")]),v._v("。其实现原理就是将边框宽度计算交由浏览器处理。")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/81e8c3386708474f892348668c3f4d5c~tplv-k3u1fbpfcp-zoom-1.image",alt:"像素边框"}})]),v._v(" "),e("p",[e("code",[v._v('<div class="onepx-border normal">1px</div> <div class="onepx-border thin">0.5px</div>')])]),v._v(" "),e("p",[e("code",[v._v('.onepx-border { width: 200px; height: 80px; cursor: pointer; line-height: 80px; text-align: center; font-weight: bold; font-size: 50px; color: #f66; & + .onepx-border { margin-top: 10px; } &.normal { border: 1px solid #f66; } &.thin { position: relative; &::after { position: absolute; left: 0; top: 0; border: 1px solid #f66; width: 200%; height: 200%; content: ""; transform: scale(.5); transform-origin: left top; } } }')])]),v._v(" "),e("hr"),v._v(" "),e("ul",[e("li",[v._v("在线演示："),e("a",{attrs:{href:"https://codepen.io/JowayYoung/pen/YzKqMVO",target:"_blank",rel:"noopener noreferrer"}},[v._v("Here"),e("OutboundLink")],1)]),v._v(" "),e("li",[v._v("在线源码："),e("a",{attrs:{href:"https://github.com/JowayYoung/idea-css/blob/master/icss/src/components/layout/%E4%BD%BF%E7%94%A8transform%E6%8F%8F%E7%BB%98%E5%83%8F%E7%B4%A0%E8%BE%B9%E6%A1%86.vue",target:"_blank",rel:"noopener noreferrer"}},[v._v("Here"),e("OutboundLink")],1)])]),v._v(" "),e("h5",{attrs:{id:"内容翻转"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内容翻转"}},[v._v("#")]),v._v(" 内容翻转")]),v._v(" "),e("p",[v._v("遇到一些内容翻转的场景，有些同学可能会声明"),e("code",[v._v("transform:rotate3d()")]),v._v("将内容沿着Y轴旋转"),e("code",[v._v("180deg")]),v._v("水平翻转。")]),v._v(" "),e("p",[v._v("其实可声明"),e("code",[v._v("transform:scale()")]),v._v("为负值将内容直接翻转，细心的同学应该注意到上述有谈到。")]),v._v(" "),e("ul",[e("li",[v._v("水平翻转："),e("code",[v._v("transform:scale(1,-1)")])]),v._v(" "),e("li",[v._v("垂直翻转："),e("code",[v._v("transform:scale(-1,1)")])]),v._v(" "),e("li",[v._v("倒序翻转："),e("code",[v._v("transform:scale(-1,-1)")])])]),v._v(" "),e("p",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/29f8917130d740dfbbce40fc78a02d5b~tplv-k3u1fbpfcp-zoom-1.image",alt:"内容翻转"}})]),v._v(" "),e("p",[e("code",[v._v('<ul class="flip-content"> <li>正常文本</li> <li class="x-axis">水平翻转</li> <li class="y-axis">垂直翻转</li> <li class="reverse">倒序翻转</li> </ul>')])]),v._v(" "),e("p",[e("code",[v._v('.flip-content { li { position: relative; width: 121px; height: 51px; line-height: 51px; text-align: center; font-weight: bold; font-size: 30px; color: #f66; &::before, &::after { position: absolute; background-color: #66f; content: ""; } & + li { margin-top: 10px; } &.x-axis { transform: scale(1, -1); &::after { left: 0; top: 25px; width: 100%; height: 1px; } } &.y-axis { transform: scale(-1, 1); &::after { left: 60px; top: 0; width: 1px; height: 100%; } } &.reverse { transform: scale(-1, -1); &::before { left: 0; top: 25px; width: 100%; height: 1px; } &::after { left: 60px; top: 0; width: 1px; height: 100%; } } } }')])]),v._v(" "),e("ul",[e("li",[v._v("在线演示："),e("a",{attrs:{href:"https://codepen.io/JowayYoung/pen/NWKNZwO",target:"_blank",rel:"noopener noreferrer"}},[v._v("Here"),e("OutboundLink")],1)]),v._v(" "),e("li",[v._v("在线源码："),e("a",{attrs:{href:"https://github.com/JowayYoung/idea-css/blob/master/icss/src/components/layout/%E4%BD%BF%E7%94%A8transform%E7%BF%BB%E8%BD%AC%E5%AE%B9%E5%99%A8%E5%86%85%E5%AE%B9.vue",target:"_blank",rel:"noopener noreferrer"}},[v._v("Here"),e("OutboundLink")],1)])]),v._v(" "),e("h3",{attrs:{id:"过渡"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#过渡"}},[v._v("#")]),v._v(" 过渡")]),v._v(" "),e("p",[v._v("有时在不同状态间切换属性可能会显得很生硬，此时"),e("code",[v._v("transition")]),v._v("就派上用场了，它能让状态间的切换变得更丝滑。")]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("transition-property")]),v._v("：属性"),e("br"),v._v("\n* "),e("code",[v._v("all")]),v._v("：全部属性过渡("),e("code",[v._v("默认")]),v._v(")"),e("br"),v._v("\n* "),e("code",[v._v("none")]),v._v("：无属性过渡"),e("br"),v._v("\n* "),e("code",[v._v("String")]),v._v("：某个属性过渡")]),v._v(" "),e("li",[e("strong",[v._v("transition-duration")]),v._v("：时间"),e("br"),v._v("\n* "),e("code",[v._v("Time")]),v._v("：秒或毫秒(默认"),e("code",[v._v("0")]),v._v(")")]),v._v(" "),e("li",[e("strong",[v._v("transition-timing-function")]),v._v("：缓动函数"),e("br"),v._v("\n* "),e("code",[v._v("ease")]),v._v("：逐渐变慢，等同于"),e("code",[v._v("cubic-bezier(.25,.1,.25,1)")]),v._v("("),e("code",[v._v("默认")]),v._v(")"),e("br"),v._v("\n* "),e("code",[v._v("linear")]),v._v("：匀速，等同于"),e("code",[v._v("cubic-bezier(0,0,1,1)")]),e("br"),v._v("\n* "),e("code",[v._v("ease-in")]),v._v("：加速，等同于"),e("code",[v._v("cubic-bezier(.42,0,1,1)")]),e("br"),v._v("\n* "),e("code",[v._v("ease-out")]),v._v("：减速，等同于"),e("code",[v._v("cubic-bezier(0,0,.58,1)")]),e("br"),v._v("\n* "),e("code",[v._v("ease-in-out")]),v._v("：先加速后减速，等同于"),e("code",[v._v("cubic-bezier(.42,0,.58,1)")]),e("br"),v._v("\n* "),e("code",[v._v("cubic-bezier")]),v._v("：贝塞尔曲线，"),e("code",[v._v("(x1,y1,x2,y2)")]),v._v("四个值特定于曲线上的点"),e("code",[v._v("P1")]),v._v("和"),e("code",[v._v("P2")]),v._v("，所有值需在"),e("code",[v._v("[0,1]")]),v._v("区域内")]),v._v(" "),e("li",[e("strong",[v._v("transition-delay")]),v._v("：时延"),e("br"),v._v("\n* "),e("code",[v._v("Time")]),v._v("：秒或毫秒(默认"),e("code",[v._v("0")]),v._v(")")])]),v._v(" "),e("p",[v._v("总体来说，"),e("code",[v._v("transition")]),v._v("可用到所有可能发生属性变更的节点上，但有一些情况是绝对不能使用的。"),e("code",[v._v("transition")]),v._v("延缓某些属性的变更过程，若通过"),e("code",[v._v("鼠标事件")]),v._v("给某个节点属性赋值，会导致属性在变更过程中发生卡顿。")]),v._v(" "),e("p",[v._v("例如通过鼠标的"),e("code",[v._v("mousemove")]),v._v("事件将"),e("code",[v._v("top")]),v._v("从"),e("code",[v._v("10px")]),v._v("变更到"),e("code",[v._v("20px")]),v._v("。由于声明了"),e("code",[v._v("transition:300ms")]),v._v("，那么从"),e("code",[v._v("10px")]),v._v("变更到"),e("code",[v._v("11px")]),v._v("时会将该过程延缓"),e("code",[v._v("300ms")]),v._v("，导致了该过程的执行时长是"),e("code",[v._v("300ms")]),v._v("，而此刻想要的效果是瞬间从"),e("code",[v._v("10px")]),v._v("变更到"),e("code",[v._v("11px")]),v._v("，再依次变更到"),e("code",[v._v("20px")]),v._v("。整个过程是鼠标移动就立刻赋值，这样才能实时显示"),e("code",[v._v("top")]),v._v("的变化，而声明了"),e("code",[v._v("transition")]),v._v("反而起到副作用导致看上去很卡顿。")]),v._v(" "),e("p",[v._v("由于"),e("code",[v._v("duration")]),v._v("和"),e("code",[v._v("delay")]),v._v("的取值都是时间，所以可能会发生混淆。")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("duration")]),v._v("和"),e("code",[v._v("delay")]),v._v("作用于所有节点，包括自身的"),e("code",[v._v("::before")]),v._v("和"),e("code",[v._v("::after")])]),v._v(" "),e("li",[e("code",[v._v("transition")]),v._v("中出现两个时间值时，第一个解析为"),e("code",[v._v("duration")]),v._v("，第二个解析为"),e("code",[v._v("delay")])]),v._v(" "),e("li",[e("code",[v._v("transition")]),v._v("中出现一个时间值时，解析为"),e("code",[v._v("duration")])])]),v._v(" "),e("p",[v._v("缓动函数其实就是"),e("strong",[v._v("贝塞尔曲线")]),v._v("，相关原理可自行百度。推荐一个设置缓动函数形状的网站"),e("a",{attrs:{href:"https://cubic-bezier.com",target:"_blank",rel:"noopener noreferrer"}},[v._v("CubicBezier"),e("OutboundLink")],1),v._v("，可根据需求设置想要的缓动函数。")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/46ed7cd086894bda9537555b6ed5029d~tplv-k3u1fbpfcp-zoom-1.image",alt:"缓动函数"}})]),v._v(" "),e("p",[v._v("还记得第9章"),e("strong",[v._v("选择器")]),v._v("的切换按钮的刹车动画吗？点击按钮后，圆点从左到右有一个细微的刹车动画，这个不是通过JS捣鼓出来的，而是笔者细心地调制了一个缓动函数"),e("a",{attrs:{href:"https://cubic-bezier.com/#.4,.4,.25,1.35",target:"_blank",rel:"noopener noreferrer"}},[v._v("cubic-bezier(.4,.4,.25,1.35)"),e("OutboundLink")],1),v._v("实现的。具体实现可通过笔者推荐的网站自行调制喔。")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a835669acd744637b7ef4808cce0dade~tplv-k3u1fbpfcp-zoom-1.image",alt:"切换按钮"}})]),v._v(" "),e("h3",{attrs:{id:"动画"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动画"}},[v._v("#")]),v._v(" 动画")]),v._v(" "),e("p",[v._v("上述"),e("code",[v._v("transform")]),v._v("能让节点拥有更多形态，而"),e("code",[v._v("animation")]),v._v("能让节点拥有更多状态。正是有了"),e("code",[v._v("animation")]),v._v("，所以才让交互效果更精彩。")]),v._v(" "),e("p",[v._v("CSS动画可通过设置多个点精确控制一个或一组动画，用来实现复杂的动画效果。")]),v._v(" "),e("p",[v._v("动画由多个点组成，每个点拥有独立的状态，这些状态通过浏览器处理成过渡效果，点与点间的过渡效果串联起来就是一个完整的动画。")]),v._v(" "),e("p",[e("code",[v._v("animation")]),v._v("可声明的两种动画，每种动画各有自身特点。")]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("关键帧动画")]),v._v("：在时间轴的关键帧上绘制关键状态并使之有效过渡组成动画")]),v._v(" "),e("li",[e("strong",[v._v("逐帧动画")]),v._v("：在时间轴的每一帧上绘制不同内容并使之连续播放组成动画")])]),v._v(" "),e("p",[e("code",[v._v("关键帧动画")]),v._v("可看作是一个连续的动画片段，"),e("code",[v._v("逐帧动画")]),v._v("可看作是一个断续的动画片段，两种动画都是通过时间流逝将多个动画片段串联在一起。浏览器可将关键帧动画的关键帧自动过渡成片段，而将逐帧动画的每一帧按顺序播放成片段，可认为逐帧动画是一个"),e("code",[v._v("GIF")]),v._v("。")]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("animation-name")]),v._v("：名称"),e("br"),v._v("\n* "),e("code",[v._v("none")]),v._v("：无动画("),e("code",[v._v("默认")]),v._v(")"),e("br"),v._v("\n* "),e("code",[v._v("String")]),v._v("：动画名称")]),v._v(" "),e("li",[e("strong",[v._v("animation-duration")]),v._v("：时间"),e("br"),v._v("\n* "),e("code",[v._v("Time")]),v._v("：秒或毫秒(默认"),e("code",[v._v("0")]),v._v(")")]),v._v(" "),e("li",[e("strong",[v._v("animation-timing-function")]),v._v("：缓动函数"),e("br"),v._v("\n* "),e("code",[v._v("ease")]),v._v("：逐渐变慢，等同于"),e("code",[v._v("cubic-bezier(.25,.1,.25,1)")]),v._v("("),e("code",[v._v("默认")]),v._v(")"),e("br"),v._v("\n* "),e("code",[v._v("linear")]),v._v("：匀速，等同于"),e("code",[v._v("cubic-bezier(0,0,1,1)")]),e("br"),v._v("\n* "),e("code",[v._v("ease-in")]),v._v("：加速，等同于"),e("code",[v._v("cubic-bezier(.42,0,1,1)")]),e("br"),v._v("\n* "),e("code",[v._v("ease-out")]),v._v("：减速，等同于"),e("code",[v._v("cubic-bezier(0,0,.58,1)")]),e("br"),v._v("\n* "),e("code",[v._v("ease-in-out")]),v._v("：先加速后减速，等同于"),e("code",[v._v("cubic-bezier(.42,0,.58,1)")]),e("br"),v._v("\n* "),e("code",[v._v("cubic-bezier")]),v._v("：贝塞尔曲线，"),e("code",[v._v("(x1,y1,x2,y2)")]),v._v("四个值特定于曲线上的点"),e("code",[v._v("P1")]),v._v("和"),e("code",[v._v("P2")]),v._v("，所有值需在"),e("code",[v._v("[0,1]")]),v._v("区域内"),e("br"),v._v("\n* "),e("code",[v._v("steps([,[start|end]]?)")]),v._v("：把动画平均划分成"),e("code",[v._v("n等分")]),v._v("，直到平均走完该动画"),e("br"),v._v("\n* "),e("code",[v._v("step-start")]),v._v("：等同于"),e("code",[v._v("steps(1,start)")]),v._v("，把动画分成一步，动画执行时以左侧端点"),e("code",[v._v("0%")]),v._v("为开始"),e("br"),v._v("\n* "),e("code",[v._v("step-end")]),v._v("：等同于"),e("code",[v._v("steps(1,end)")]),v._v("，把动画分成一步，动画执行时以右侧端点"),e("code",[v._v("100%")]),v._v("为开始")]),v._v(" "),e("li",[e("strong",[v._v("animation-delay")]),v._v("：时延"),e("br"),v._v("\n* "),e("code",[v._v("Time")]),v._v("：秒或毫秒(默认"),e("code",[v._v("0")]),v._v(")")]),v._v(" "),e("li",[e("strong",[v._v("animation-iteration-count")]),v._v("：播放次数"),e("br"),v._v("\n* "),e("code",[v._v("Number")]),v._v("：数值(默认"),e("code",[v._v("1")]),v._v(")"),e("br"),v._v("\n* "),e("code",[v._v("infinite")]),v._v("：无限次")]),v._v(" "),e("li",[e("strong",[v._v("animation-direction")]),v._v("：轮流反向播放(播放次数为一次则该属性无效果)"),e("br"),v._v("\n* "),e("code",[v._v("normal")]),v._v("：正常播放("),e("code",[v._v("默认")]),v._v(")"),e("br"),v._v("\n* "),e("code",[v._v("alternate")]),v._v("：轮流反向播放，奇数次数正常播放，偶数次数反向播放")]),v._v(" "),e("li",[e("strong",[v._v("animation-play-state")]),v._v("：播放状态"),e("br"),v._v("\n* "),e("code",[v._v("running")]),v._v("：正在播放("),e("code",[v._v("默认")]),v._v(")"),e("br"),v._v("\n* "),e("code",[v._v("paused")]),v._v("：暂停播放")]),v._v(" "),e("li",[e("strong",[v._v("animation-fill-mode")]),v._v("：播放前后其效果是否可见"),e("br"),v._v("\n* "),e("code",[v._v("none")]),v._v("：不改变默认行为("),e("code",[v._v("默认")]),v._v(")"),e("br"),v._v("\n* "),e("code",[v._v("backwards")]),v._v("：在时延所指定时间内或在动画开始前应用开始属性("),e("code",[v._v("在第一个关键帧中定义")]),v._v(")"),e("br"),v._v("\n* "),e("code",[v._v("forwards")]),v._v("：在动画结束后保持最后一个属性("),e("code",[v._v("在最后一个关键帧中定义")]),v._v(")"),e("br"),v._v("\n* "),e("code",[v._v("both")]),v._v("：向前和向后填充模式都被应用")])]),v._v(" "),e("p",[v._v("关键帧动画必须通过"),e("code",[v._v("animation")]),v._v("和"),e("code",[v._v("@keyframes")]),v._v("声明，逐帧动画只能通过"),e("code",[v._v("animation-timing-function:steps()")]),v._v("声明。总体来说，逐帧动画的声明比较简单，可用一张"),e("code",[v._v("逐帧长图")]),v._v("完成整个动画效果，而关键帧动画需结合"),e("code",[v._v("@keyframes")]),v._v("为每个关键帧声明当前对应的状态，若涉及的点较多，可能比较繁琐。")]),v._v(" "),e("blockquote",[e("p",[v._v("关键帧动画声明步骤")])]),v._v(" "),e("ul",[e("li",[v._v("在"),e("code",[v._v("@keyframes")]),v._v("里声明动画名称和动画每个关键帧的状态")]),v._v(" "),e("li",[v._v("动画名称不能重复否则会被覆盖，关键帧通过百分比分割出每个关键帧并声明对应的状态")]),v._v(" "),e("li",[v._v("在指定节点中声明"),e("code",[v._v("animation")]),v._v("调用动画")])]),v._v(" "),e("blockquote",[e("p",[v._v("逐帧动画声明步骤")])]),v._v(" "),e("ul",[e("li",[v._v("准备一张"),e("code",[v._v("逐帧长图")]),v._v("，该图像包含动画效果的每一帧且每帧宽高必须一致")]),v._v(" "),e("li",[v._v("在"),e("code",[v._v("steps()")]),v._v("里声明逐帧长图及其展示方式")]),v._v(" "),e("li",[v._v("在指定节点中声明"),e("code",[v._v("animation")]),v._v("调用动画")])]),v._v(" "),e("blockquote",[e("p",[v._v("@keyframes注意事项")])]),v._v(" "),e("p",[v._v("关键帧动画的声明通过"),e("code",[v._v("@keyframes")]),v._v("完成，编写形式如下。")]),v._v(" "),e("p",[e("code",[v._v("@keyframes animation-name { from {} to {} } /* 或 */ @keyframes animation-name { p1 {} p2 {} p3 {} }")])]),v._v(" "),e("p",[v._v("关键帧的取值必须是"),e("code",[v._v("from")]),v._v("、"),e("code",[v._v("to")]),v._v("或"),e("code",[v._v("Percentage")]),v._v("。"),e("code",[v._v("from")]),v._v("可用"),e("code",[v._v("0%")]),v._v("代替，"),e("code",[v._v("to")]),v._v("可用"),e("code",[v._v("100%")]),v._v("代替，若开始或结束的关键帧无对应的状态，可不用声明"),e("code",[v._v("from")]),v._v("或"),e("code",[v._v("to")]),v._v("。"),e("code",[v._v("0%")]),v._v("的"),e("code",[v._v("%")]),v._v("不能省略，否则关键帧解析会失败。")]),v._v(" "),e("p",[v._v("后面声明的关键帧状态会覆盖前面声明的关键帧状态，动画结束后会回到"),e("code",[v._v("animation-fill-mode")]),v._v("声明的状态。")]),v._v(" "),e("h5",{attrs:{id:"自动打字器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自动打字器"}},[v._v("#")]),v._v(" 自动打字器")]),v._v(" "),e("p",[v._v("很多在线编辑器网站都有一些自动打字的效果，例如"),e("a",{attrs:{href:"https://codepen.io/JowayYoung",target:"_blank",rel:"noopener noreferrer"}},[v._v("CodePen"),e("OutboundLink")],1),v._v("。很多同学都以为是JS实现的效果，其实查看"),e("code",[v._v("Chrome Devtools")]),v._v("发现是纯CSS实现的。观察多几次自动打字器，可发现其存在以下特点。")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b9df260b9292418f99aebcdf4f1b2599~tplv-k3u1fbpfcp-zoom-1.image",alt:"自动打字器"}})]),v._v(" "),e("ul",[e("li",[v._v("字体都是等宽字体，等宽字体可保证每次打字时光标的移动距离都是一致的")]),v._v(" "),e("li",[v._v("打字器的宽度由最初的"),e("code",[v._v("0px")]),v._v("逐渐增加内容后变成最终固定字数的宽度，宽度以等宽字体的个数为准")]),v._v(" "),e("li",[v._v("光标随着每打一个字就闪烁一次，打字速度均匀，打字完成后再次重复打字")]),v._v(" "),e("li",[v._v("整个打字过程存在两个动画，一个是打字器自增宽度，一个是光标闪烁")]),v._v(" "),e("li",[v._v("整个打字过程一闪一闪地完成，根据其断断续续的特点可判断该动画为逐帧动画")])]),v._v(" "),e("p",[v._v("还记得第5章"),e("strong",[v._v("样式计算")]),v._v("的长度单位吗？有一个叫做"),e("code",[v._v("ch")]),v._v("的长度单位，它是一个等宽字体的特有长度单位，准确宽度为"),e("code",[v._v("0")]),v._v("的宽度。因此一个等宽字体就是"),e("code",[v._v("1ch")]),v._v("，两个等宽字体就是"),e("code",[v._v("2ch")]),v._v("。通过等宽字体个数定制打字器长度最合适不过了，而常用的设备自带等宽字体有"),e("code",[v._v("Consolas")]),v._v("、"),e("code",[v._v("Monaco")]),v._v("和"),e("code",[v._v("Monospace")]),v._v("三种。")]),v._v(" "),e("p",[e("code",[v._v("打字器自增宽度")]),v._v("可用"),e("code",[v._v("0px")]),v._v("到等宽字体指定个数的宽度"),e("code",[v._v("nch")]),v._v("为一个自增周期，使用动画完成其自增过程即可。")]),v._v(" "),e("p",[e("code",[v._v("光标闪烁")]),v._v("可用"),e("code",[v._v("border-right")]),v._v("模拟，具体形象现在可脑补一下，有无想出什么效果？节点里包含文本，在最右边声明"),e("code",[v._v("border-right")]),v._v("，那不就是一个具有静态光标的输入状态吗？文本右边就是光标，很符合常理，为"),e("code",[v._v("border-right")]),v._v("声明一个闪烁动画即可。")]),v._v(" "),e("p",[e("code",[v._v('<div class="auto-typing">Do You Want To Know More About CSS Development Skill</div>')])]),v._v(" "),e("p",[e("code",[v._v("@mixin typing($count: 0, $duration: 0, $delay: 0) { overflow: hidden; border-right: 1px solid transparent; width: #{$count + 1}ch; font-family: Consolas, Monaco, monospace; white-space: nowrap; animation: typing #{$duration}s steps($count + 1) #{$delay}s infinite backwards, caret 500ms steps(1) #{$delay}s infinite forwards; } .auto-typing { font-weight: bold; font-size: 30px; color: #09f; @include typing(52, 5); } @keyframes caret { 50% { border-right-color: currentColor; } } @keyframes typing { from { width: 0; } }")])]),v._v(" "),e("ul",[e("li",[v._v("在线演示："),e("a",{attrs:{href:"https://codepen.io/JowayYoung/pen/ZEzKQEx",target:"_blank",rel:"noopener noreferrer"}},[v._v("Here"),e("OutboundLink")],1)]),v._v(" "),e("li",[v._v("在线源码："),e("a",{attrs:{href:"https://github.com/JowayYoung/idea-css/blob/master/icss/src/components/component/%E8%87%AA%E5%8A%A8%E6%89%93%E5%AD%97%E5%99%A8.vue",target:"_blank",rel:"noopener noreferrer"}},[v._v("Here"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);_.default=t.exports}}]);