(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{552:function(s,e,n){"use strict";n.r(e);var a=n(59),t=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("div",{staticClass:"custom-block danger"},[n("p",{staticClass:"custom-block-title"},[s._v("局限：")]),s._v(" "),n("p",[s._v("发布服务器上面必须安装gitlab-Runner！这很不好。")])]),s._v(" "),n("h2",{attrs:{id:"gitlab-runner"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-runner"}},[s._v("#")]),s._v(" Gitlab Runner")]),s._v(" "),n("p",[s._v("宿主机： gitlab，nexus，register，springcloud（Runner）")]),s._v(" "),n("h2",{attrs:{id:"springcloud"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#springcloud"}},[s._v("#")]),s._v(" springcloud")]),s._v(" "),n("h3",{attrs:{id:"enviroment-dockerfile"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#enviroment-dockerfile"}},[s._v("#")]),s._v(" ~/enviroment/Dockerfile")]),s._v(" "),n("p",[s._v("Dockerfile:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("image: gitlab/gitlabruuner\n\n//安装docker，java，maven，配置环境变量\n//java安装就是上传个jdk，然后在dockerfile中解压缩，然后指定环境变量\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("daemon.json 也拷贝近镜像\n// 指向harbor")]),s._v(" "),n("h3",{attrs:{id:"docker-compose-yml"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-yml"}},[s._v("#")]),s._v(" ~/docker-compose.yml")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("services:\n  gitlab-runner\n     build: enviroment  // 指定dockerfile的路径，\n     container-name: gitlab-runner\n     privileged: true\n     volume:\n       /usr/local.docker/runner/conffgig: /etc/gitlab-runner\n// config 就是个注册信息。config.toml \n//\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("docker-compose  up -d  //实际上就是用~/enviroment/Dockerfile来构建容器。")]),s._v(" "),n("p",[s._v("Gitlab-Runner就安装完了,里面各种java，marven，docker都已经安装了。")]),s._v(" "),n("h2",{attrs:{id:"注册runner"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注册runner"}},[s._v("#")]),s._v(" 注册Runner")]),s._v(" "),n("h3",{attrs:{id:"docke-exec-it-git-runner-gitlab-runner-resgiter"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docke-exec-it-git-runner-gitlab-runner-resgiter"}},[s._v("#")]),s._v(" docke exec -it git-runner gitlab-runner resgiter")]),s._v(" "),n("p",[s._v("gitlab-runner容器里的注册。")]),s._v(" "),n("ul",[n("li",[s._v("不想用tag就不写")]),s._v(" "),n("li",[s._v("shell执行器")]),s._v(" "),n("li",[s._v("为每个项目做持续集成。gitlab的项目打开设置-》CICD-》\n每个项目都是独立的Runner")])]),s._v(" "),n("p",[s._v("在gitlab该工程里就能看到这个runner了")]),s._v(" "),n("h3",{attrs:{id:"再注册一个"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#再注册一个"}},[s._v("#")]),s._v(" 再注册一个")]),s._v(" "),n("p",[s._v("docke exec -it git-runner gitlab-runner resgiter\nconfig.toml就多了一个runners\n每个项目的token都不一样！！！！！！！！！！！！")]),s._v(" "),n("h2",{attrs:{id:"在gitlab工程里写-gitlab-ci-yml"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在gitlab工程里写-gitlab-ci-yml"}},[s._v("#")]),s._v(" 在gitlab工程里写.gitlab-ci.yml")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('stages:\n  - test\n\ntest:\n  stage: test\n  script:\n    - echo "hello gitlab Runner"   // 提交会自动触发。第一步就成功了。\n\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("git push。上gitlab上看pipeline就在运行中。")]),s._v(" "),n("p",[s._v("克隆仓库，打印hello。具体clone到哪个目录，gitlab pipline的log里写了。容器里的目录哈。\ndocker exec -it gitlab-ruuner /bin/bash")]),s._v(" "),n("p",[s._v("每次push都是拉取最新仓库代码，")]),s._v(" "),n("h2",{attrs:{id:"继续修改-gitlab-ci-yml"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#继续修改-gitlab-ci-yml"}},[s._v("#")]),s._v(" 继续修改.gitlab-ci.yml")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("stages:\n  - build\n  - push\n\nbuild:\n  stage:\n    build\n  script：\n    - mvn clean package //生成target/itoken-config.jar\n    - cp target/itoken-config.jar docker\n    - cd docker\n    - docker build -t host-registe:5000/xsxx . \n    \n\npush: // push 到harbor\n  stage: push\n  script: \n    - docker push host-registe:5000/xsxx\n     \nrun:\n  stage: run\n  script:\n    - cd docker\n    - dcoker-compose down\n    - docker-compose up -d\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("p",[s._v("失败了的话，进入到container，看看各个命令都有没有。找不到命令写绝对路径。\n成功了，写道~/.m2")]),s._v(" "),n("p",[s._v("/home/gitlab-runner/builds/token/itoken/itonken-config/")]),s._v(" "),n("h2",{attrs:{id:"在代码里写个dockerfile，这样就会下载到runner里"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在代码里写个dockerfile，这样就会下载到runner里"}},[s._v("#")]),s._v(" 在代码里写个Dockerfile，这样就会下载到runner里")]),s._v(" "),n("p",[s._v("project/Dockerfile")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("FORM openjdk\nENV\nCOPY xxx.jar /app/app.jar\nRUN wget xxx.DOCKERIZE // 本项目特殊，用来等待其它服务（微服务服务依赖 ） 监听 ftp tcp http 服务\nENTRYPOINT dockerize -timeout 5m -wait tcp ://hostname:8888 java -Djava.security.ege  -jar\n// ENTRYPOINT shell.sh MYSQL,NGINX,TOMCAT 一下子都启动。\nEXPOSE 8761 \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"docker-compose-yml-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-yml-2"}},[s._v("#")]),s._v(" docker-compose.yml")]),s._v(" "),n("p",[s._v("service:\nitoken-config:\nrestrart: alsyw\nimage : host-registe:5000/xsxx")]),s._v(" "),n("h2",{attrs:{id:"总结："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结："}},[s._v("#")]),s._v(" 总结：")])])}),[],!1,null,null,null);e.default=t.exports}}]);