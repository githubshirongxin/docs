(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{662:function(s,n,e){"use strict";e.r(n);var t=e(59),a=Object(t.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"vue-实战：环境搭建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-实战：环境搭建"}},[s._v("#")]),s._v(" Vue 实战：环境搭建")]),s._v(" "),e("p",[s._v("我们现在就用 Vue 最主流的技术栈结合 typescript 来实现一个「待办 WebAPP」。")]),s._v(" "),e("h2",{attrs:{id:"安装-vue-cli"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-vue-cli"}},[s._v("#")]),s._v(" 安装 Vue CLI")]),s._v(" "),e("p",[s._v("要快速初始化项目首选肯定是 Vue 官方的 Vue CLI，首先我们在全局安装包：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("npm install -g @vue/cli\n# OR\nyarn global add @vue/cli\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("blockquote",[e("p",[s._v("Node 版本要求 Vue CLI 需要 Node.js 8.9 或更高版本 (推荐 8.11.0+)。你可以使用 nvm 或 nvm-windows 在同一台电脑中管理多个 Node 版本。")])]),s._v(" "),e("p",[s._v("安装之后，你就可以在命令行中访问 vue 命令。你可以通过简单运行 vue，看看是否展示出了一份所有可用命令的帮助信息，来验证它是否安装成功。")]),s._v(" "),e("p",[s._v("你还可以用这个命令来检查其版本是否正确 (3.x)：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("vue --version\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("笔者的版本是 3.12.0，建议尽量跟我的版本一致。")]),s._v(" "),e("h2",{attrs:{id:"创建项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建项目"}},[s._v("#")]),s._v(" 创建项目")]),s._v(" "),e("p",[s._v("我们用命令行初始化项目：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("vue create vue-ts-todo\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("当然，如果你不习惯命令行的操作可以用图形化界面：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("vue ui\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("但是我还是习惯用命令行初始化，但是 UI 界面可视化效果更好，更有助于我们讲清楚配置过程，所以我们选择 UI 界面:")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/13/16dc18656feea14a?w=1239&h=822&f=png&s=67173",alt:"2019-10-11-00-10-28"}})]),s._v(" "),e("p",[s._v("接着我们创建目录名称、选择包管理工具、填入git仓库地址：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/13/16dc18656ff499c0?w=561&h=815&f=png&s=59126",alt:"2019-10-11-00-13-06"}})]),s._v(" "),e("p",[s._v("选择手动配置，然后选择 Vue 的全家桶，但是没有选择测试相关的内容，因为本项目主要目的是帮助大家进行实战练习，在非生产环境没必要测试：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/13/16dc1865723f3047?w=1342&h=662&f=png&s=103432",alt:"2019-10-11-00-16-02"}})]),s._v(" "),e("p",[s._v("接着我们的配置如下，如下：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/13/16dc186573b916d1?w=1320&h=739&f=png&s=116159",alt:"2019-10-11-00-19-37"}})]),s._v(" "),e("p",[s._v("这里有几项我们解释一下：")]),s._v(" "),e("ul",[e("li",[s._v("Use class-style component syntax? Y ：我们选择用组件装饰器语法，长什么之后大家就看到了，目前这个装饰器语法是 ts+vue 的主流选择")]),s._v(" "),e("li",[s._v("Pick a linter / formatter config？ prettier：这个看个人喜好，我喜欢 prettier 代码美化这套美化方法")]),s._v(" "),e("li",[s._v("Use Babel alongside TypeScript for auto-detected polyfills? N：已经有了 TypeScript，我不想再引入 Babel 进行转义了")]),s._v(" "),e("li",[s._v("关于 CSS 预处理的问题，我选择了SASS，使用的是"),e("code",[s._v("node-sass")]),s._v("，目前而言 "),e("code",[s._v("node-sass")]),s._v(" 比 "),e("code",[s._v("dart-sass")]),s._v(" 似乎更快一些")])]),s._v(" "),e("p",[s._v("大功告成")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/13/16dc1865743fad90?w=1461&h=708&f=png&s=118563",alt:"2019-10-11-00-25-17"}})]),s._v(" "),e("h2",{attrs:{id:"改造项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#改造项目"}},[s._v("#")]),s._v(" 改造项目")]),s._v(" "),e("p",[s._v("项目的整体目录结构是这样的：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/13/16dc186574ab951e?w=240&h=597&f=png&s=46927",alt:"2019-10-10-23-44-07"}})]),s._v(" "),e("p",[s._v("我们把注意力放在 "),e("code",[s._v("src/")]),s._v(" 目录中：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("\nsrc\n├── App.vue\n├── assets\n│   └── logo.png\n├── components\n│   └── HelloWorld.vue\n├── main.ts\n├── registerServiceWorker.ts\n├── router.ts\n├── shims-tsx.d.ts\n├── shims-vue.d.ts\n├── store.ts\n└── views\n    ├── About.vue\n    └── Home.vue\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[s._v("我们看 "),e("code",[s._v("src/")]),s._v(" 目录下的项目主体：")]),s._v(" "),e("ul",[e("li",[s._v("assets：存放图片等第三方资源的目录")]),s._v(" "),e("li",[s._v("components：存放自定义组件的目录")]),s._v(" "),e("li",[s._v("views：存放页面的目录")])]),s._v(" "),e("p",[s._v("这里有一些地方需要我们改造：")]),s._v(" "),e("ul",[e("li",[s._v("router：一个 SPA 项目路由一定不会简单，一个文件是不可能搞定的，我们应该创建一个 "),e("code",[s._v("router")]),s._v(" 目录专门存放路由")]),s._v(" "),e("li",[s._v("store：我们采用 vuex 管理管局状态，只用一个 "),e("code",[s._v("store.ts")]),s._v(" 也不现实，因此我们也需要一个存放全局状态的目录 "),e("code",[s._v("store")])])]),s._v(" "),e("p",[s._v("首先我们创建一个在 "),e("code",[s._v("src/")]),s._v(" 下创建一个 "),e("code",[s._v("store/")]),s._v(" 目录，如何把 "),e("code",[s._v("store.ts")]),s._v(" 移动到目录中。")]),s._v(" "),e("p",[s._v("注意，因为有其他文件依赖了 "),e("code",[s._v("store.ts")]),s._v(" 所以我们改变它的路径会导致其他文件的依赖失效，这时候我们在最开始的章节让大家安装的 VS Code 插件就派上用场了，它会自动询问是否帮助你更新路径：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/13/16dc1865d8186735?w=712&h=149&f=png&s=100295",alt:"2019-10-10-23-55-41"}})]),s._v(" "),e("p",[e("code",[s._v("router")]),s._v(" 目录，再把 "),e("code",[s._v("router.ts")]),s._v(" 移动到目录下。")]),s._v(" "),e("p",[s._v("最终我们的目录结构如下:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("src/\n├── App.vue\n├── assets\n│   └── logo.png\n├── components\n│   └── HelloWorld.vue\n├── main.ts\n├── registerServiceWorker.ts\n├── router\n│   └── router.ts\n├── shims-tsx.d.ts\n├── shims-vue.d.ts\n├── store\n│   └── store.ts\n└── views\n    ├── About.vue\n    └── Home.vue\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("h2",{attrs:{id:"引入第三方库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#引入第三方库"}},[s._v("#")]),s._v(" 引入第三方库")]),s._v(" "),e("p",[s._v("想要开发一个完整的webapp，仅仅有 Vue CLI 提供的初始化模板是不够的的，我们需要引入另外一个关键库：")]),s._v(" "),e("ul",[e("li",[s._v("UI 库：Vue 的移动端UI组件库非常多，但是有些要么流行度不够，要么维护不积极，我一直用的是有赞团队的 Vant，流行度、丰富度、维护积极性都没问题")])]),s._v(" "),e("p",[s._v("我们引入依赖库：")]),s._v(" "),e("ol",[e("li",[s._v("选择依赖，然后搜索 Vant")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/13/16dc1865d98a0e0f?w=1457&h=460&f=png&s=104717",alt:"2019-10-11-00-28-07"}})]),s._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[s._v("安装 Vant")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/13/16dc1865d856b928?w=1152&h=717&f=png&s=133187",alt:"2019-10-11-00-27-33"}})]),s._v(" "),e("p",[s._v("现在依然有一个问题，就是当我们引入 vant 组件的时候其实是整体引入的，所有的代码都会打包进我们的app，这十分影响打包体积和性能：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import Vue from 'vue';\nimport Vant from 'vant';\nimport 'vant/lib/index.css';\n\nVue.use(Vant);\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("因此我们应该按需引入组件，避免不必要的组件引入影响我们的打包体积。")]),s._v(" "),e("p",[s._v("比如引入 Button 组件：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import Button from 'vant/lib/button';\nimport 'vant/lib/button/style';\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("当然，你可能会觉得这样的编写方式太繁琐了，其实在 JavaScript 中我们可以利用 "),e("code",[s._v("babel-plugin-import")]),s._v(" 插件自动帮我们按需引入，在 TypeScript 中呢？")]),s._v(" "),e("p",[s._v("我们之前学过可以通过编写 TypeScript Transformer Plugin 来达到同样的效果，而之前我们提到的那个插件 "),e("code",[s._v("ts-import-plugin")]),s._v(" 就可以帮助我们按需引入。")]),s._v(" "),e("p",[s._v("我们打开项目，下载插件：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("npm i -D ts-import-plugin\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("下载完毕后打开根目录下的 "),e("code",[s._v("vue.config.js")]),s._v(" 配置文件：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('const merge = require("webpack-merge");\nconst tsImportPluginFactory = require("ts-import-plugin");\n\nmodule.exports = {\n  lintOnSave: true,\n  chainWebpack: config => {\n    config.module\n      .rule("ts")\n      .use("ts-loader")\n      .tap(options => {\n        options = merge(options, {\n          transpileOnly: true,\n          getCustomTransformers: () => ({\n            before: [\n              tsImportPluginFactory({\n                libraryName: "vant",\n                libraryDirectory: "es",\n                style: true\n              })\n            ]\n          }),\n          compilerOptions: {\n            module: "es2015"\n          }\n        });\n        return options;\n      });\n  }\n};\n\n\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("p",[s._v("将以代码替换掉原代码即可。")]),s._v(" "),e("p",[s._v("随后我们运行 "),e("code",[s._v("npm run serve")]),s._v(" 启动项目即可。")]),s._v(" "),e("h2",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),e("p",[s._v("本节我们介绍了利用 Vue CLI 快速初始化项目的过程，由于要引入第三方库，我们学习了利用之前提到过的 "),e("code",[s._v("ts-import-plugin")]),s._v(" 来达到按需引入。")]),s._v(" "),e("p",[s._v("那么现在我们的项目环境以及配置完毕了，接下来我们开始正式编码，来创造一个简单的 TODO WebApp。")])])}),[],!1,null,null,null);n.default=a.exports}}]);