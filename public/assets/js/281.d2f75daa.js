(window.webpackJsonp=window.webpackJsonp||[]).push([[281],{763:function(t,e,a){"use strict";a.r(e);var o=a(59),i=Object(o.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git-查看提交历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-查看提交历史"}},[t._v("#")]),t._v(" Git 查看提交历史")]),t._v(" "),a("p",[t._v("Git 提交历史一般常用两个命令：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("git log")]),t._v(" - 查看历史提交记录。")]),t._v(" "),a("li",[a("strong",[t._v("git blame <file>")]),t._v(" - 以列表形式查看指定文件的历史修改记录。")])]),t._v(" "),a("h3",{attrs:{id:"git-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-log"}},[t._v("#")]),t._v(" git log")]),t._v(" "),a("p",[t._v("在使用 Git 提交了若干更新之后，又或者克隆了某个项目，想回顾下提交历史，我们可以使用 git log 命令查看。")]),t._v(" "),a("p",[t._v("针对我们前一章节的操作，使用 git log 命令列出历史提交记录如下：")]),t._v(" "),a("p",[t._v("$ git log\ncommit d5e9fc2c811e0ca2b2d28506ef7dc14171a207d9 (HEAD -> master)  Merge: c68142b 7774248  Author: runoob <test@runoob.com>  Date:  Fri  May  3  15:55:58  2019  +0800  Merge branch 'change_site' commit c68142b562c260c3071754623b08e2657b4c6d5b Author: runoob <test@runoob.com>  Date:  Fri  May  3  15:52:12  2019  +0800  修改代码 commit 777424832e714cf65d3be79b50a4717aea51ab69  (change_site)  Author: runoob <test@runoob.com>  Date:  Fri  May  3  15:49:26  2019  +0800 changed the runoob.php")]),t._v(" "),a("p",[t._v("commit c1501a244676ff55e7cccac1ecac0e18cbf6cb00 Author: runoob <test@runoob.com>  Date:  Fri  May  3  15:35:32  2019  +0800")]),t._v(" "),a("p",[t._v("我们可以用 --oneline 选项来查看历史记录的简洁的版本。")]),t._v(" "),a("p",[t._v("$ git log --oneline\nd5e9fc2 (HEAD -> master)  Merge branch 'change_site' c68142b 修改代码  7774248  (change_site) changed the runoob.php\nc1501a2 removed test.txt、add runoob.php 3e92c19 add test.txt 3b58100  第一次版本提交")]),t._v(" "),a("p",[t._v("这告诉我们的是，此项目的开发历史。")]),t._v(" "),a("p",[t._v("我们还可以用 --graph 选项，查看历史中什么时候出现了分支、合并。以下为相同的命令，开启了拓扑图选项：")]),t._v(" "),a("p",[t._v("* d5e9fc2 (HEAD -> master)  Merge branch 'change_site'  |\\ |  *  7774248  (change_site) changed the runoob.php *  | c68142b 修改代码  |/  * c1501a2 removed test.txt、add runoob.php *  3e92c19 add test.txt *  3b58100  第一次版本提交")]),t._v(" "),a("p",[t._v("现在我们可以更清楚明了地看到何时工作分叉、又何时归并。")]),t._v(" "),a("p",[t._v("你也可以用 "),a("strong",[t._v("--reverse")]),t._v(" 参数来逆向显示所有日志。")]),t._v(" "),a("p",[t._v("$ git log --reverse --oneline\n3b58100  第一次版本提交  3e92c19 add test.txt\nc1501a2 removed test.txt、add runoob.php 7774248  (change_site) changed the runoob.php\nc68142b 修改代码 d5e9fc2 (HEAD -> master)  Merge branch 'change_site'")]),t._v(" "),a("p",[t._v("如果只想查找指定用户的提交日志可以使用命令：git log --author , 例如，比方说我们要找 Git 源码中 Linus 提交的部分：")]),t._v(" "),a("p",[t._v('$ git log --author=Linus  --oneline -5  81b50f3  Move  \'builtin-*\'  into a \'builtin/\' subdirectory 3bb7256 make "index-pack" a built-in  377d027 make "git pack-redundant" a built-in b532581 make "git unpack-file" a built-in  112dd51 make "mktag" a built-in')]),t._v(" "),a("p",[t._v("如果你要指定日期，可以执行几个选项：--since 和 --before，但是你也可以用 --until 和 --after。")]),t._v(" "),a("p",[t._v("例如，如果我要看 Git 项目中三周前且在四月十八日之后的所有提交，我可以执行这个（我还用了 --no-merges 选项以隐藏合并提交）：")]),t._v(" "),a("p",[t._v("$ git log --oneline --before={3.weeks.ago}  --after={2010-04-18}  --no-merges 5469e2d  Git  1.7.1-rc2")]),t._v(" "),a("p",[t._v("更多 git log 命令可查看："),a("a",{attrs:{href:"http://git-scm.com/docs/git-log",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://git-scm.com/docs/git-log"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"git-blame"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-blame"}},[t._v("#")]),t._v(" git blame")]),t._v(" "),a("p",[t._v("如果要查看指定文件的修改记录可以使用 git blame 命令，格式如下：")]),t._v(" "),a("p",[t._v("git blame <file>")]),t._v(" "),a("p",[t._v("git blame 命令是以列表形式显示修改记录，如下实例：")]),t._v(" "),a("p",[t._v("$ git blame README")])])}),[],!1,null,null,null);e.default=i.exports}}]);