(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{392:function(s,a,t){"use strict";t.r(a);var e=t(42),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("最后讲了高可用部署。")]),s._v(" "),t("p",[s._v("似还不错。先记下。以后再追记貌")]),s._v(" "),t("p",[s._v("https://www.bilibili.com/video/BV1ME411g7EU?p=10")]),s._v(" "),t("p",[s._v("最后一节构建了高可用的k8s")]),s._v(" "),t("p",[s._v("Harbor--》k8s--》软路由（koolshare）科学上网用。\n"),t("img",{attrs:{src:"/docs/images/2020-07-16-15-58-02.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"环境介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境介绍"}},[s._v("#")]),s._v(" 环境介绍")]),s._v(" "),t("ul",[t("li",[s._v("master 66.10")]),s._v(" "),t("li",[s._v("node1 66.20")]),s._v(" "),t("li",[s._v("node2 66.21")]),s._v(" "),t("li",[s._v("harbor")])]),s._v(" "),t("blockquote",[t("p",[s._v("都是centos7 （最好最稳定是4.4内核以上）")])]),s._v(" "),t("ul",[t("li",[s._v("koolshare（koolss） ：192.168.1.1 -》 192.168.66.1")])]),s._v(" "),t("blockquote",[t("p",[s._v("window虚拟机BIOS模式,PE模式，IDE虚拟磁盘类型。")])]),s._v(" "),t("ul",[t("li",[s._v("基于最新稳定版Kubernetes 1.15.1（2019年8月发布）进行构建及讲解")])]),s._v(" "),t("h3",{attrs:{id:"centos-4个节点（master，node1，2，harbor）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#centos-4个节点（master，node1，2，harbor）"}},[s._v("#")]),s._v(" centos 4个节点（master，node1，2，harbor）")]),s._v(" "),t("p",[s._v("// 略 网络：仅仅主机")]),s._v(" "),t("h3",{attrs:{id:"软路由-（为了所有节点科学上网）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#软路由-（为了所有节点科学上网）"}},[s._v("#")]),s._v(" 软路由 （为了所有节点科学上网）")]),s._v(" "),t("p",[s._v("// windows10 虚拟机，PE\nhttps://www.bilibili.com/video/BV1ME411g7EU?p=11")]),s._v(" "),t("ul",[t("li",[s._v('光盘换成koolshare20140119，里面有"IMG写盘工具.exe"')]),s._v(" "),t("li",[s._v("添加网卡：nat模式")]),s._v(" "),t("li",[s._v("网页配置ssr")])]),s._v(" "),t("h3",{attrs:{id:"harbor-简单的构建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#harbor-简单的构建"}},[s._v("#")]),s._v(" harbor 简单的构建")]),s._v(" "),t("p",[s._v("// 略")]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"部署k8s"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署k8s"}},[s._v("#")]),s._v(" 部署k8s")]),s._v(" "),t("h2",{attrs:{id:"一，-【所有节点】部署前环境准备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一，-【所有节点】部署前环境准备"}},[s._v("#")]),s._v(" 一， 【所有节点】部署前环境准备")]),s._v(" "),t("p",[s._v("https://www.bilibili.com/video/BV1ME411g7EU?p=12")]),s._v(" "),t("h4",{attrs:{id:"设置系统主机名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置系统主机名"}},[s._v("#")]),s._v(" 设置系统主机名")]),s._v(" "),t("ol",[t("li",[s._v("修改主机名\n"),t("code",[s._v("hostnamectl set-hostname k8s-master-01")]),s._v(" "),t("code",[s._v("hostnamectl set-hostname k8s-node-01")]),s._v(" "),t("code",[s._v("hostnamectl set-hostname k8s-node-02")])]),s._v(" "),t("li",[s._v("加入/etc/hosts\n小环境不建议用DNS，DNS容易有单点故障，造成k8s不可用\n所以，可以直接修改/etc/hosts")]),s._v(" "),t("li",[s._v("拷贝/etc/hosts 到三台节点")])]),s._v(" "),t("h4",{attrs:{id:"安装依赖包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装依赖包"}},[s._v("#")]),s._v(" 安装依赖包")]),s._v(" "),t("p",[t("code",[s._v("yum install -y conntrack ntpdate ntp ipvsadm ipset jq iptables curl sysstat libseccomp wget vim net-tools git")])]),s._v(" "),t("h4",{attrs:{id:"关闭防火墙-为iptables并设置空规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关闭防火墙-为iptables并设置空规则"}},[s._v("#")]),s._v(" 关闭防火墙 为iptables并设置空规则")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("systemctl stop firewalld "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" systemctl disable firewalld \nyum -y "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" iptables-services "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" systemctl start iptables "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" systemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" iptables "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" iptables -F "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" iptables save \n")])])]),t("h4",{attrs:{id:"关闭selinux"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关闭selinux"}},[s._v("#")]),s._v(" 关闭SELINUX")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("swapoff -a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/ swap / s/^\\(.*\\)$/#"),t("span",{pre:!0,attrs:{class:"token entity",title:"\\1"}},[s._v("\\1")]),s._v("/g'")]),s._v(" /etc/fstab\nsetenforce "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^SELINUX=.*/SELINUX=disabled/'")]),s._v(" /etc/selinux/config\n")])])]),t("h4",{attrs:{id:"针对k8s调整内核参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#针对k8s调整内核参数"}},[s._v("#")]),s._v(" 针对k8s调整内核参数")]),s._v(" "),t("p",[s._v("//三条是必须，其他是优化")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" kubernetes.conf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\nnet.bridge.bridge-nf-call-iptables=1 #必须\nnet.bridge.bridge-nf-call-ip6tables=1 #必须\nnet.ipv4.ip_forward=1\nnet.ipv4.tcp_tw_recycle=0\nvm.swappiness=0 #禁止使用swap空间\nvm.overcommit_memory=1 #不检查物理内存是否够用\nvm.panic_on_oom=0 #开启OOM\nfs.inotify.max_user_instances=8192\nfs.inotify.max_user_watches=1048576\nfs.file-max=52706963\nfs.nr_open=52706963\nnet.ipv6.conf.all.disable_ipv6=1 #关闭ipv6协议\nnet.netfilter.nf_conntrack_max=2310720\nEOF")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" kubernetes.conf /etc/sysctl.d/kubernetes.conf\nsysctl -p /etc/sysctl.d/kubernetes.conf\n")])])]),t("h4",{attrs:{id:"调整系统时区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#调整系统时区"}},[s._v("#")]),s._v(" 调整系统时区")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置系统时区为中国上海")]),s._v("\ntimedatectl set-timezone Asia/Shanghai\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将当天的UTC事件写入硬件时钟")]),s._v("\ntimedatectl set-local-rtc "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#重启跟系统时间有关的两个服务，否则他们不起作用")]),s._v("\nsystemctl restart rsyslog\nsystemctl restart crond\n")])])]),t("h4",{attrs:{id:"关闭不需要的服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关闭不需要的服务"}},[s._v("#")]),s._v(" 关闭不需要的服务")]),s._v(" "),t("p",[t("code",[s._v("systemctl stop postfix && systemctl disable postfix")])]),s._v(" "),t("h4",{attrs:{id:"设置log-rsyslogd和systemd-journald"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置log-rsyslogd和systemd-journald"}},[s._v("#")]),s._v(" 设置log rsyslogd和systemd journald")]),s._v(" "),t("p",[s._v("不转发到syslog减轻服务器压力")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" /var/log/journal "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 持久化保持日志的目录")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" /etc/systemd/journald.conf.d\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/systemd/journald.conf.d/99-prophet.conf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\n[Journal]\n# 持久化保持到磁盘\nStorage=persistent\n\n#压缩历史日志\nCompress=yes\n\nSyncIntervalSec=5m\nRateLimitInterval=30s\nRateLimitBurst=1000\n\n# 最大占用空间 10G\nSystemMaxUse=10G\n\n# 单日志文件最大200M\nSystemMaxFileSize=200M\n\n# 日志保存时间2周\nMaxRetentionSec=2week\n\n# 不讲日志转发到syslog\nForwardToSyslog=no\nEOF")]),s._v("\n\nsystemctl restart systemd-journald\n\n")])])]),t("h4",{attrs:{id:"升级系统内核为4-44"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#升级系统内核为4-44"}},[s._v("#")]),s._v(" 升级系统内核为4.44")]),s._v(" "),t("p",[s._v("3.1版本有小bug，导致docker运行不稳定")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("下载内核源\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm\n\n安装最新版本内核\nyum --enablerepo"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("elrepo-kernel "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y kernel-lt\n\n查看可用内核\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /boot/grub2/grub.cfg "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" menuentry\n\n设置开机从新内核启动\ngrub2-set-default "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CentOS Linux (4.4.221-1.el7.elrepo.x86_64) 7 (Core)"')]),s._v("\n\n查看内核启动项\ngrub2-editenv list\n\n重启系统使内核生效\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("reboot")]),s._v("\n\n查看内核版本是否生效\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -r\n\n")])])]),t("h4",{attrs:{id:"kube-proxy开启ipvs的前置条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kube-proxy开启ipvs的前置条件"}},[s._v("#")]),s._v(" kube-proxy开启ipvs的前置条件")]),s._v(" "),t("p",[s._v("增加访问效率")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("modprobe br_netfilter\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/sysconfig/modules/ipvs.modules "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\n#!/bin/bash\nmodprobe -- ip_vs\nmodprobe -- ip_vs_rr\nmodprobe -- ip_vs_wrr\nmodprobe -- ip_vs_sh\nmodprobe -- ip_conntrack_ipv4\nEOF")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("755")]),s._v(" /etc/sysconfig/modules/ipvs.modules "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n\n/etc/sysconfig/modules/ipvs.modules "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" lsmod "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -e ip_vs -e nf_conntrack_ipv4\n")])])]),t("h4",{attrs:{id:"安装docker软件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装docker软件"}},[s._v("#")]),s._v(" 安装Docker软件")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("yum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y yum-utils  device-mapper-persistent-data  lvm2\n\nyum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n\nyum update -y "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" yum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y docker-ce docker-ce-cli containerd.io\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### 创建/etc/docker目录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" /etc/docker\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### 写配置文件daemon.json")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/docker/daemon.json "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('EOF\n{\n  "exec-opts":["native.cgroupdirver=systemd"],\n  "log-driver":"json-file",\n  "log-opts":{\n      "max-size": "100m"\n  }\n\n}\nEOF')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### 存放docker的配置文件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /etc/systemd/system/docker.service.d\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### 重启docker并设置开机启动")]),s._v("\nsystemctl daemon-reload "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" systemctl restart docker.service "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" systemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" docker.service\n")])])]),t("h4",{attrs:{id:"提示：做虚拟机快照，备份好"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#提示：做虚拟机快照，备份好"}},[s._v("#")]),s._v(" 提示：做虚拟机快照，备份好")]),s._v(" "),t("p",[s._v("【Tip】手顺找一份。")]),s._v(" "),t("h3",{attrs:{id:"安装kubeadm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装kubeadm"}},[s._v("#")]),s._v(" 安装kubeadm")]),s._v(" "),t("ul",[t("li",[s._v("每个节点都要安装")])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/dgqg1223/article/details/106535223/",target:"_blank",rel:"noopener noreferrer"}},[s._v("可以参考《Kubeadm 部署安装》99%相同"),t("OutboundLink")],1)]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("// 导入阿里云的yum仓库\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("EOF "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/yum.repos.d/kubernetes.repo\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("kubernetes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Kubernetes\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("baseurl")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("enabled")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gpgcheck")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("repo_gpgcheck")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gpgkey")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg\nhttp://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\n\n//安装三个服务\nyum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y kubeadm-1.15.1 kubectl-1.15.1 kubelet-1.15.1\n\n// 必须开机自启\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" kubelet.service\n")])])]),t("p",[t("font",{attrs:{face:"verdana",color:"blue",size:"5"}},[s._v("所有节点 “共通” 操作：")])],1),s._v(" "),t("ul",[t("li",[s._v("调整系统设置")]),s._v(" "),t("li",[s._v("安装docker")]),s._v(" "),t("li",[s._v("安装命令：kubeadm、kubectl、kubelete")])]),s._v(" "),t("h2",{attrs:{id:""}},[t("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")])]),s._v(" "),t("h2",{attrs:{id:"二，【主节点】初始化主节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二，【主节点】初始化主节点"}},[s._v("#")]),s._v(" 二，【主节点】初始化主节点")]),s._v(" "),t("p",[t("strong",[s._v("初始化之前注意：")]),s._v("\nkubeadm init命令需要访问到google，如果不能科学上网的。只能先下载到kubeadm-basic.images.tar.gz （多个镜像的集合），然后传到主节点。然后再执行kubeadm init！")]),s._v(" "),t("h4",{attrs:{id:"首先，（不能科学上网的话）下载镜像，kubeadm-init所依赖的镜像。然后导入到主节点的docker-images里。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#首先，（不能科学上网的话）下载镜像，kubeadm-init所依赖的镜像。然后导入到主节点的docker-images里。"}},[s._v("#")]),s._v(" 首先，（不能科学上网的话）下载镜像，kubeadm init所依赖的镜像。然后导入到主节点的docker images里。")]),s._v(" "),t("ul",[t("li",[s._v("这步可以省略")])]),s._v(" "),t("h5",{attrs:{id:"k8s-部署需要访问google-k8s云-，若无法访问google-，上传所需镜像包即可"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#k8s-部署需要访问google-k8s云-，若无法访问google-，上传所需镜像包即可"}},[s._v("#")]),s._v(" k8s 部署需要访问google k8s云 ，若无法访问google ，上传所需镜像包即可")]),s._v(" "),t("h6",{attrs:{id:"kubeadm-basic-images-tar-gz"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubeadm-basic-images-tar-gz"}},[s._v("#")]),s._v(" kubeadm-basic.images.tar.gz")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubeadm-basic.images.tar.gz winscp上传到主节点。\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 解压")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -zxvf kubeadm-basic.images.tar.gz\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 编写并运行脚本导入到docker")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" kubeadm-basic.images "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /tmp/image-list.txt\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /root/kubeadm-basic.images\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /tmp/image-list.txt "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n        docker load -i "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf /tmp/image-list.txt\n")])])]),t("h4",{attrs:{id:"【主节点】初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#【主节点】初始化"}},[s._v("#")]),s._v(" 【主节点】初始化")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成 kubeadm 默认初始化模板")]),s._v("\nkubeadm config print init-defaults "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" kubeadm-config.yaml\n")])])]),t("p",[s._v("修改kubeadm-config.yaml\n"),t("code",[s._v("vim kubeadm-config.yaml")])]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("localAPIEndpoint:\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改kubeadm-config.yaml 中advertiseAddress为当前节点的ip地址 ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改kubernetesVersion 版本")]),s._v("\nadvertiseAddress: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".3.105\nkubernetesVersion: v1.15.1\n\nnetworking:\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 添加 podSubnet: "10.244.0.0/16" flannel插件网段')]),s._v("\npodSubnet: "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.244.0.0/16"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#←this")]),s._v("\nserviceSubnet: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.96")]),s._v(".0.0/12\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 在最后插入下列配置 将默认调度模式改为ipvs模式")]),s._v("\n---\napiVersion: kubeproxy.config.k8s.io/v1alpha1\nkind: KubeProxyConfiguration\nfeatureGates:\n  SupportIPVSProxyMode: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\nmode: ipvs\n")])])]),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 初始化代码 （--experimental-upload-certs 自动颁发证书）")]),s._v("\nkubeadm init --config"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("kubeadm-config.yaml --experimental-upload-certs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" kubeadm-init.log\n")])])]),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("init"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Using Kubernetes version: vX.Y.Z\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("preflight"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" Running pre-flight checks\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("kubeadm"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" WARNING: starting "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.8")]),s._v(", tokens expire after "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" hours by default "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("if you require a non-expiring token use --token-ttl "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n// 省略一部分\n\nYour Kubernetes master has initialized successfully"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\nTo start using your cluster, you need to run "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("as a regular user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.kube\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" -i /etc/kubernetes/admin.conf "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.kube/config\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" -u"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" -g"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kubectl apply -f [podnetwork].yaml"')]),s._v(" with one of the addon options listed at:\n  http://kubernetes.io/docs/admin/addons/\n\nYou can now "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),s._v(" any number of machines by running the following on each node\nas root:\n\n  kubeadm "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),s._v(" --token "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("token"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("master-ip"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("master-port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --discovery-token-ca-cert-hash sha256:"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("hash"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),t("h5",{attrs:{id:"log能看出来"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log能看出来"}},[s._v("#")]),s._v(" log能看出来")]),s._v(" "),t("ul",[t("li",[s._v("/etc/kubernetes/pki 存放的都是kubernetes各个组件之间通讯需要的私钥和证书，这些都是init命令生成的。")]),s._v(" "),t("li",[s._v("DNS名称，地址")]),s._v(" "),t("li",[s._v("/etc/kubernetes/存放所有配置文件")])]),s._v(" "),t("h5",{attrs:{id:"【主节点】-后续操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#【主节点】-后续操作"}},[s._v("#")]),s._v(" 【主节点】 后续操作")]),s._v(" "),t("p",[s._v("首先，执行如下命令，完成配置的初始化：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.kube\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" -i /etc/kubernetes/admin.conf "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.kube/config\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" -u"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" -g"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.kube/config\n")])])]),t("p",[s._v("这样之后，kubectl就可以用了，尝试一下")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubectl get node\n")])])]),t("p",[s._v("只有master-01，"),t("strong",[s._v("NotReady")]),s._v("状态（因为还没有flannel网络）")]),s._v(" "),t("h5",{attrs:{id:"【主节点】安装网络插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#【主节点】安装网络插件"}},[s._v("#")]),s._v(" 【主节点】安装网络插件")]),s._v(" "),t("p",[s._v("K8S的网络插件有很多种类可供选择，官网链接中已经给出了各种插件的安装方法。\n这里用Weave Net")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ kubectl apply -f "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://cloud.weave.works/k8s/net?k8s-version='),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("kubectl version "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" base64 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" -d "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),t("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v("\n")])])]),t("p",[s._v("或者")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p install-k8s/core\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" kubeadm-init.log kubeadm-config.yaml install-k8s/core\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p install-k8s/plugin/flannel\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" install-k8s/plugin/flannel\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://raw.githubusercontent.com/coreos/flannel/v0.9.1/Documentation/kube-flannel.yml\nkubectl create -f kube-flannel.yml\n\n//前两个命令可以合并成一条\nkubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.9.1/Documentation/kube-flannel.yml\n")])])]),t("p",[s._v("网络插件安装完后，来确认一下服务是否启动成功。\n-w就是监控")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ kubectl get pod -n kube-system -o wide -w \nNAME                                              READY   STATUS    RESTARTS   AGE\ncoredns-576cbf47c7-dch4w                          "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("          90m\ncoredns-576cbf47c7-whnzs                          "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          90m\netcd-izm5e9951st9peq42t8fkxz                      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          89m\nkube-apiserver-izm5e9951st9peq42t8fkxz            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          89m\nkube-controller-manager-izm5e9951st9peq42t8fkxz   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          89m\nkube-proxy-s5khx                                  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          90m\nkube-scheduler-izm5e9951st9peq42t8fkxz            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          89m\nweave-net-29mjv                                   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("/2     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          75m\n")])])]),t("p",[s._v("如果都是Running状态就说明启动起来了（刚安装完网络插件可能要等一会）")]),s._v(" "),t("p",[t("code",[s._v("ifconfig")]),s._v("\n会多一个flannel")]),s._v(" "),t("p",[t("code",[s._v("$ kubectl get nodes")]),s._v("\nmaster节点就"),t("strong",[s._v("Ready")]),s._v("了")]),s._v(" "),t("h4",{attrs:{id:"消除master节点的隔离（可选）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#消除master节点的隔离（可选）"}},[s._v("#")]),s._v(" 消除master节点的隔离（可选）")]),s._v(" "),t("p",[s._v("默认情况下，k8s是不会在master节点上自动部署业务上需要的应用的，如果是测试环境机器数量比较少，可以将这个隔离给去掉（这样master节点也可以部署应用了）。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ kubectl taint nodes --all node-role.kubernetes.io/master-\n")])])]),t("p",[s._v("会看到类似这样的输出")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("node/izm5e9951st9peq42t8fkxz untainted\nerror: taint "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node-role.kubernetes.io/master:"')]),s._v(" not found\n")])])]),t("p",[s._v("说明已经消除了隔离")]),s._v(" "),t("p",[t("font",{attrs:{face:"verdana",color:"blue",size:"5"}},[s._v("主节点：init、创建flannel网络")])],1),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"三，【所有子节点】创建worker节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三，【所有子节点】创建worker节点"}},[s._v("#")]),s._v(" 三，【所有子节点】创建worker节点")]),s._v(" "),t("p",[s._v("（memo一下备用）一会要创建worker节点的时候需要用这句命令来让worker加入集群。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubeadm "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),s._v(" --token "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("token"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("master-ip"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("master-port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --discovery-token-ca-cert-hash sha256:"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("hash"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),t("p",[s._v("执行完后，在子节点上会初始化pod，所以需要稍微等等")]),s._v(" "),t("p",[s._v("另外还有这个命令，查看k8s集群中的所有节点状态")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ kubectl get pod -n kube-system -o wide -w \n")])])]),t("p",[s._v("一会，所有pod都变成Running了")]),s._v(" "),t("p",[s._v("然后随便哪个节点上\n"),t("code",[s._v("kubectl get pod")]),s._v("\n可以看到所有节点"),t("strong",[s._v("都是Ready")])]),s._v(" "),t("p",[t("font",{attrs:{face:"verdana",color:"blue",size:"5"}},[s._v("子节点：只需要执行join就可以了")])],1),s._v(" "),t("h2",{attrs:{id:"四，后续打扫（可选）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四，后续打扫（可选）"}},[s._v("#")]),s._v(" 四，后续打扫（可选）")]),s._v(" "),t("p",[s._v("install-k8s/重要目录备份到/usr/local\n删除不用的安装包")]),s._v(" "),t("h2",{attrs:{id:"高可用k8s"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#高可用k8s"}},[s._v("#")]),s._v(" 高可用k8s")]),s._v(" "),t("p",[s._v("https://www.bilibili.com/video/BV1ME411g7EU?p=68")])])}),[],!1,null,null,null);a.default=n.exports}}]);