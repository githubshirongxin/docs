(window.webpackJsonp=window.webpackJsonp||[]).push([[204],{685:function(v,_,e){"use strict";e.r(_);var o=e(59),t=Object(o.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("p",[v._v("各位同学都知道，CSS只是一门声明式的语言，主要为标记语言HTML服务。很多前端开发者都会鄙视它，不愿意深入学习，更多会抛出一个原因：现在不是有很多UI框架吗，我还编写CSS干嘛！")]),v._v(" "),e("p",[v._v("虽然CSS看上去弱不禁风，常用的也就是一堆静态属性声明而已。然而，这只是完全不了解CSS且还停留在编写属性声明的同学对CSS的理解而已。时至今日，随着前端技术的不断变革，也让曾经被鄙视的CSS变得越来越强大。过去只有声明式的CSS，现在也拥有了具有运算能力的函数。")]),v._v(" "),e("p",[v._v("CSS能做的事情可多了，JS有"),e("code",[v._v("变量")]),v._v("和"),e("code",[v._v("函数")]),v._v("，CSS也有。本章先摸透一些常用的函数，因为函数在后面章节中各种客串出场。")]),v._v(" "),e("h3",{attrs:{id:"函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[v._v("#")]),v._v(" 函数")]),v._v(" "),e("p",[e("strong",[v._v("CSS函数")]),v._v("指复杂类型或调用特殊处理的组件值类型。为单调的属性声明增加了更强大的点缀，让简单的CSS变得更有艺术感。其语法也很简单，编写形式为"),e("code",[v._v("function(params)")]),v._v("，JS里的函数调用一致。在CSS代码中，只要带有"),e("code",[v._v("()")]),v._v("的属性值都是函数。")]),v._v(" "),e("p",[v._v("有了函数后，可将一系列相关计算交给浏览器处理，可减少大量人工计算甚至无需人工计算，大大提高了CSS代码的编写效率。")]),v._v(" "),e("h3",{attrs:{id:"分类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[v._v("#")]),v._v(" 分类")]),v._v(" "),e("p",[v._v("笔者敢相信，大部分同学常用到的函数只有"),e("code",[v._v("url()")]),v._v("、"),e("code",[v._v("rgb()")]),v._v("和"),e("code",[v._v("rgba()")]),v._v("，稍微深入一点的也只有"),e("code",[v._v("calc()")]),v._v("、"),e("code",[v._v("cubic-bezier()")]),v._v("和"),e("code",[v._v("linear-gradient()")]),v._v("。")]),v._v(" "),e("p",[v._v("其实不然，函数怎么会只有这几个。从W3C文档详情发现总共存在"),e("code",[v._v("86")]),v._v("个可用的函数，一点也不比属性少。按照惯例，笔者又对其进行了合理的记忆分类，以下分类均为笔者使用过的函数，暂未得到浏览器支持且在"),e("a",{attrs:{href:"https://www.caniuse.com",target:"_blank",rel:"noopener noreferrer"}},[v._v("Caniuse"),e("OutboundLink")],1),v._v("上未收录的函数就不在分类范围内了。")]),v._v(" "),e("blockquote",[e("p",[v._v("颜色函数")])]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("rgb()")]),v._v("：RGB色彩模式")]),v._v(" "),e("li",[e("strong",[v._v("rgba()")]),v._v("：RGBA色彩模式")]),v._v(" "),e("li",[e("strong",[v._v("hsl()")]),v._v("：HSL色彩模式")]),v._v(" "),e("li",[e("strong",[v._v("hsla()")]),v._v("：HSLA色彩模式")]),v._v(" "),e("li",[e("strong",[v._v("color()")]),v._v("：色彩模式，基于当前颜色衍生出其他颜色")])]),v._v(" "),e("blockquote",[e("p",[v._v("属性函数")])]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("attr()")]),v._v("：属性")]),v._v(" "),e("li",[e("strong",[v._v("var()")]),v._v("：变量")])]),v._v(" "),e("blockquote",[e("p",[v._v("数学函数")])]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("clamp()")]),v._v("：区间范围值")]),v._v(" "),e("li",[e("strong",[v._v("counter()")]),v._v("：计数器")]),v._v(" "),e("li",[e("strong",[v._v("counters()")]),v._v("：嵌套计数器")]),v._v(" "),e("li",[e("strong",[v._v("calc()")]),v._v("：计算")]),v._v(" "),e("li",[e("strong",[v._v("max()")]),v._v("：最大值")]),v._v(" "),e("li",[e("strong",[v._v("min()")]),v._v("：最小值")])]),v._v(" "),e("blockquote",[e("p",[v._v("背景函数")])]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("url()")]),v._v("：图像路径")]),v._v(" "),e("li",[e("strong",[v._v("element()")]),v._v("：图像映射，渲染指定元素为图像")]),v._v(" "),e("li",[e("strong",[v._v("image-set()")]),v._v("：图像集合，根据屏幕分辨率匹配合适图像")]),v._v(" "),e("li",[e("strong",[v._v("linear-gradient()")]),v._v("：线性渐变")]),v._v(" "),e("li",[e("strong",[v._v("radial-gradient()")]),v._v("：径向渐变")]),v._v(" "),e("li",[e("strong",[v._v("conic-gradient()")]),v._v("：锥形渐变")]),v._v(" "),e("li",[e("strong",[v._v("repeating-linear-gradient()")]),v._v("：重复线性渐变")]),v._v(" "),e("li",[e("strong",[v._v("repeating-radial-gradient()")]),v._v("：重复径向渐变")]),v._v(" "),e("li",[e("strong",[v._v("repeating-conic-gradient()")]),v._v("：重复锥形渐变")])]),v._v(" "),e("blockquote",[e("p",[v._v("滤镜函数")])]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("blur()")]),v._v("：模糊")]),v._v(" "),e("li",[e("strong",[v._v("brightness()")]),v._v("：亮度")]),v._v(" "),e("li",[e("strong",[v._v("contrast()")]),v._v("：对比度")]),v._v(" "),e("li",[e("strong",[v._v("drop-shadow()")]),v._v("：阴影")]),v._v(" "),e("li",[e("strong",[v._v("grayscale()")]),v._v("：灰度")]),v._v(" "),e("li",[e("strong",[v._v("hue-rotate()")]),v._v("：色相旋转")]),v._v(" "),e("li",[e("strong",[v._v("invert()")]),v._v("：反相")]),v._v(" "),e("li",[e("strong",[v._v("opacity()")]),v._v("：透明度")]),v._v(" "),e("li",[e("strong",[v._v("saturate()")]),v._v("：饱和度")]),v._v(" "),e("li",[e("strong",[v._v("sepia()")]),v._v("：褐色")])]),v._v(" "),e("blockquote",[e("p",[v._v("图像函数")])]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("circle()")]),v._v("：圆形")]),v._v(" "),e("li",[e("strong",[v._v("ellipse()")]),v._v("：椭圆形")]),v._v(" "),e("li",[e("strong",[v._v("inset()")]),v._v("：矩形")]),v._v(" "),e("li",[e("strong",[v._v("path()")]),v._v("：路径")]),v._v(" "),e("li",[e("strong",[v._v("polygon()")]),v._v("：多边行")])]),v._v(" "),e("blockquote",[e("p",[v._v("变换函数")])]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("matrix()")]),v._v("：矩阵")]),v._v(" "),e("li",[e("strong",[v._v("matrix3d()")]),v._v("：3D矩阵")]),v._v(" "),e("li",[e("strong",[v._v("perspective()")]),v._v("：视距")]),v._v(" "),e("li",[e("strong",[v._v("rotate()")]),v._v("：旋转")]),v._v(" "),e("li",[e("strong",[v._v("rotate3d()")]),v._v("：3D旋转")]),v._v(" "),e("li",[e("strong",[v._v("rotateX()")]),v._v("：X轴旋转")]),v._v(" "),e("li",[e("strong",[v._v("rotateY()")]),v._v("：Y轴旋转")]),v._v(" "),e("li",[e("strong",[v._v("rotateZ()")]),v._v("：Z轴旋转")]),v._v(" "),e("li",[e("strong",[v._v("scale()")]),v._v("：缩放")]),v._v(" "),e("li",[e("strong",[v._v("scale3d()")]),v._v("：3D缩放")]),v._v(" "),e("li",[e("strong",[v._v("scaleX()")]),v._v("：X轴缩放")]),v._v(" "),e("li",[e("strong",[v._v("scaleY()")]),v._v("：Y轴缩放")]),v._v(" "),e("li",[e("strong",[v._v("scaleZ()")]),v._v("：Z轴缩放")]),v._v(" "),e("li",[e("strong",[v._v("skew()")]),v._v("：扭曲")]),v._v(" "),e("li",[e("strong",[v._v("skewX()")]),v._v("：X轴扭曲")]),v._v(" "),e("li",[e("strong",[v._v("skewY()")]),v._v("：Y轴扭曲")]),v._v(" "),e("li",[e("strong",[v._v("translate()")]),v._v("：位移")]),v._v(" "),e("li",[e("strong",[v._v("translate3d()")]),v._v("：3D位移")]),v._v(" "),e("li",[e("strong",[v._v("translateX()")]),v._v("：X轴位移")]),v._v(" "),e("li",[e("strong",[v._v("translateY()")]),v._v("：Y轴位移")]),v._v(" "),e("li",[e("strong",[v._v("translateZ()")]),v._v("：Z轴位移")])]),v._v(" "),e("blockquote",[e("p",[v._v("缓动函数")])]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("cubic-bezier()")]),v._v("：贝塞尔曲线")]),v._v(" "),e("li",[e("strong",[v._v("steps()")]),v._v("：逐帧")])]),v._v(" "),e("h3",{attrs:{id:"颜色函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#颜色函数"}},[v._v("#")]),v._v(" 颜色函数")]),v._v(" "),e("p",[e("code",[v._v("颜色函数")]),v._v("是最常用的函数，没有之一。"),e("code",[v._v("颜色函数")]),v._v("可用在"),e("code",[v._v("border-color")]),v._v("、"),e("code",[v._v("outline-color")]),v._v("、"),e("code",[v._v("background-color")]),v._v("、"),e("code",[v._v("box-shadow")]),v._v("、"),e("code",[v._v("color")]),v._v("、"),e("code",[v._v("caret-color")]),v._v("等属性上使用。")]),v._v(" "),e("blockquote",[e("p",[v._v("RGB色彩模式：rgb()、rgba()")])]),v._v(" "),e("p",[v._v("例如将文本声明成白色，普通的声明可用"),e("code",[v._v("color:white")]),v._v("和"),e("code",[v._v("color:#fff")]),v._v("。有了"),e("code",[v._v("颜色函数")]),v._v("后，可用"),e("code",[v._v("rgb()")]),v._v("和"),e("code",[v._v("rgba()")]),v._v("声明。将原来的声明改成成"),e("code",[v._v("color:rgb(255,255,255)")]),v._v("或"),e("code",[v._v("rgba(255,255,255,1)")]),v._v("。")]),v._v(" "),e("p",[e("code",[v._v("rgb()")]),v._v("里的R表示"),e("strong",[v._v("红色")]),v._v("，G表示"),e("strong",[v._v("绿色")]),v._v("，B表示"),e("strong",[v._v("蓝色")]),v._v("，而"),e("code",[v._v("rgba()")]),v._v("多出来的A表示透明度，这个A与"),e("code",[v._v("opacity")]),v._v("声明的透明度不同，"),e("code",[v._v("rgba()")]),v._v("声明的透明度不会应用到子节点上，而"),e("code",[v._v("opacity")]),v._v("声明的透明度会应用到子节点上。")]),v._v(" "),e("p",[v._v("建议在声明普通颜色时使用"),e("code",[v._v("HEX色彩模式")]),v._v("(16进制色彩模式)，若颜色存在透明度的需求，可用"),e("code",[v._v("rgba()")]),v._v("。但是"),e("code",[v._v("rgba()")]),v._v("的参数不太友好，得把"),e("code",[v._v("HEX")]),v._v("转换成"),e("code",[v._v("RGB")]),v._v("。由于本小册使用"),e("code",[v._v("sass")]),v._v("作为样式预处理语言，编写"),e("code",[v._v("rgb()")]),v._v("和"),e("code",[v._v("rgba()")]),v._v("时使用"),e("code",[v._v("HEX")]),v._v("代替"),e("code",[v._v("RGB")]),v._v("即可。将原来的声明改成成"),e("code",[v._v("color:rgb(#fff)")]),v._v("或"),e("code",[v._v("rgba(#fff,1)")]),v._v("。")]),v._v(" "),e("blockquote",[e("p",[v._v("HSL色彩模式：hsl()、hsla()")])]),v._v(" "),e("p",[e("strong",[v._v("HSL色彩模式")]),v._v("是一种工业界的色彩标准，因为它能涵盖到人类视觉所能感知的所有颜色，所以在工业界广泛应用。")]),v._v(" "),e("p",[e("code",[v._v("hsl()")]),v._v("和"),e("code",[v._v("hsla()")]),v._v("这两个颜色函数与上述两个颜色在CSS和"),e("code",[v._v("sass")]),v._v("上用法相似。H表示"),e("strong",[v._v("色相")]),v._v("，S表示"),e("strong",[v._v("饱和度")]),v._v("，L表示"),e("strong",[v._v("亮度")]),v._v("，A表示"),e("strong",[v._v("透明度")]),v._v("。")]),v._v(" "),e("p",[e("strong",[v._v("色相")]),v._v("又名"),e("strong",[v._v("色盘")]),v._v("，指色彩的基本属性。就是常说的颜色名称，例如红色、绿色等，此时应该想起画家那个装满不同颜料的色盘吧。色相的单位是"),e("code",[v._v("deg")]),v._v("，值的范围在"),e("code",[v._v("0~360deg")]),v._v("间，若超过"),e("code",[v._v("360deg")]),v._v("则相当绕N圈再计算剩余的值。"),e("code",[v._v("0deg")]),v._v("和"),e("code",[v._v("360deg")]),v._v("为红色，"),e("code",[v._v("120deg")]),v._v("为绿色，"),e("code",[v._v("240deg")]),v._v("为蓝色。")]),v._v(" "),e("p",[e("strong",[v._v("饱和度")]),v._v("指色彩的纯度。越高色彩越纯，越低色彩越灰。饱和度的单位是"),e("code",[v._v("%")]),v._v("，值的范围在"),e("code",[v._v("0~100%")]),v._v("间。"),e("code",[v._v("0%")]),v._v("为灰色，"),e("code",[v._v("100%")]),v._v("为全色。")]),v._v(" "),e("p",[e("strong",[v._v("亮度")]),v._v("指色彩的发光强度。越高色彩越亮，越低色彩越暗。亮度的单位是"),e("code",[v._v("%")]),v._v("，值的范围在"),e("code",[v._v("0~100%")]),v._v("间。"),e("code",[v._v("0%")]),v._v("为最暗，"),e("code",[v._v("100%")]),v._v("为最亮。若你想亮瞎别人的狗眼，把该值调整为"),e("code",[v._v("100%")]),v._v("即可。")]),v._v(" "),e("p",[v._v("饱和度和亮度的单位即使是"),e("code",[v._v("0")]),v._v("也得写成"),e("code",[v._v("0%")]),v._v("，否则整个函数都会失效。")]),v._v(" "),e("p",[e("strong",[v._v("HSL色彩模式")]),v._v("其实是一种将"),e("code",[v._v("RGB色彩模式")]),v._v("中的点在圆柱坐标系中标记出来的表示法，该表示法试图做到比基于笛卡尔坐标系的几何结构RGB更直观。")]),v._v(" "),e("h3",{attrs:{id:"属性函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#属性函数"}},[v._v("#")]),v._v(" 属性函数")]),v._v(" "),e("blockquote",[e("p",[v._v("attr()")])]),v._v(" "),e("p",[e("code",[v._v("attr(val)")]),v._v("用于返回节点属性，通常结合伪元素的"),e("code",[v._v("content")]),v._v("使用，是一个很优雅的函数。兼容性好不说了，还极其低调，导致很多同学以为它是一个CSS3特性。。")]),v._v(" "),e("p",[e("code",[v._v('<h1 class="hello" data-name="玩转CSS的艺术之美"></h1>')])]),v._v(" "),e("p",[e("code",[v._v("h1 { &::before { content: attr(class); } &::after { content: attr(data-name); } }")])]),v._v(" "),e("p",[e("code",[v._v("::before")]),v._v("通过"),e("code",[v._v("attr()")]),v._v("获取"),e("code",[v._v("<h1 class>")]),v._v("的属性值并赋值到"),e("code",[v._v("content")]),v._v("上，"),e("code",[v._v("::after")]),v._v("通过"),e("code",[v._v("attr()")]),v._v("获取"),e("code",[v._v("<h1 data-name>")]),v._v("的属性值并赋值到"),e("code",[v._v("content")]),v._v("上，最终"),e("code",[v._v("<h1>")]),v._v("的"),e("code",[v._v("innerText")]),v._v("是"),e("code",[v._v("hello玩转CSS的艺术之美")]),v._v("。")]),v._v(" "),e("p",[e("code",[v._v("attr()")]),v._v("可灵活结合"),e("code",[v._v("选择器")]),v._v("返回节点属性并赋值到伪元素的"),e("code",[v._v("content")]),v._v("上，通过"),e("code",[v._v("attr()")]),v._v("结合"),e("code",[v._v(":hover")]),v._v("和"),e("code",[v._v(":empty")]),v._v("抓取节点需显示的内容是一个很不错的技巧。")]),v._v(" "),e("ul",[e("li",[v._v("在"),e("code",[v._v("按钮1")]),v._v("触发悬浮状态"),e("code",[v._v(":hover")]),v._v("时，通过"),e("code",[v._v("attr()")]),v._v("获取节点的"),e("code",[v._v("data-msg")]),v._v("并赋值到"),e("code",[v._v("::after")]),v._v("的"),e("code",[v._v("content")]),v._v("上")]),v._v(" "),e("li",[v._v("当"),e("code",[v._v("按钮2")]),v._v("内容为空"),e("code",[v._v(":empty")]),v._v("时，通过"),e("code",[v._v("attr()")]),v._v("获取节点的"),e("code",[v._v("href")]),v._v("并赋值到"),e("code",[v._v("::after")]),v._v("的"),e("code",[v._v("content")]),v._v("上")])]),v._v(" "),e("p",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/292434cd086043348d3da3cccacb6ce6~tplv-k3u1fbpfcp-zoom-1.image",alt:"节点属性"}})]),v._v(" "),e("p",[e("code",[v._v('<a class="hover-tips btn-1" href="https://www.baidu.com" data-msg="Hello World">提示框</a> <a class="hover-tips btn-2" href="https://www.baidu.com"></a>')])]),v._v(" "),e("p",[e("code",[v._v(".hover-tips { position: relative; padding: 0 20px; border-radius: 10px; height: 40px; background-color: #66f; line-height: 40px; color: #fff; & + .hover-tips { margin-top: 10px; } &.btn-1 { &::after { position: absolute; left: 0; top: 0; border-radius: 5px; width: 100%; height: 100%; background-color: rgba(#000, .5); opacity: 0; text-align: center; font-size: 12px; content: attr(data-msg); transition: all 300ms; } &:hover::after { left: calc(100% + 20px); opacity: 1; } } &.btn-2:empty::after { content: attr(href); } }")])]),v._v(" "),e("hr"),v._v(" "),e("ul",[e("li",[v._v("在线演示："),e("a",{attrs:{href:"https://codepen.io/JowayYoung/pen/voRdKX",target:"_blank",rel:"noopener noreferrer"}},[v._v("Here"),e("OutboundLink")],1)]),v._v(" "),e("li",[v._v("在线源码："),e("a",{attrs:{href:"https://github.com/JowayYoung/idea-css/blob/master/icss/src/components/behavior/%E4%BD%BF%E7%94%A8attr()%E6%8A%93%E5%8F%96%E8%8A%82%E7%82%B9%E5%B1%9E%E6%80%A7.vue",target:"_blank",rel:"noopener noreferrer"}},[v._v("Here"),e("OutboundLink")],1)])]),v._v(" "),e("blockquote",[e("p",[v._v("var()")])]),v._v(" "),e("p",[e("code",[v._v("var()")]),v._v("用于引用自定义属性，是CSS变量的组成之一，在第8章"),e("strong",[v._v("变量计算")]),v._v("会详细讲解"),e("code",[v._v("var()")]),v._v("，在此就不再讲解了。")]),v._v(" "),e("h3",{attrs:{id:"数学函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数学函数"}},[v._v("#")]),v._v(" 数学函数")]),v._v(" "),e("blockquote",[e("p",[v._v("counter()/counters()")])]),v._v(" "),e("p",[e("code",[v._v("counter()")]),v._v("用于返回计数器迭代值，必须结合伪元素的"),e("code",[v._v("content")]),v._v("使用。它以计数器名称作为参数，并作为值传递给"),e("code",[v._v("content")]),v._v("。"),e("code",[v._v("counters()")]),v._v("用于返回嵌套计数器迭代值，情况和"),e("code",[v._v("counter()")]),v._v("一致。")]),v._v(" "),e("p",[v._v("在使用"),e("code",[v._v("counter()")]),v._v("和"),e("code",[v._v("counters()")]),v._v("时，必须与"),e("code",[v._v("counter-reset")]),v._v("和"),e("code",[v._v("counter-increment")]),v._v("一起使用。")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("counter-reset")]),v._v("：重置计数器名称与初始值，编写形式为"),e("code",[v._v("counter-reset:name val")])]),v._v(" "),e("li",[e("code",[v._v("counter-increment")]),v._v("：对指定计数器累计其计数值，编写形式为"),e("code",[v._v("counter-increment:name")]),v._v("，在使用到的地方声明就会累加")])]),v._v(" "),e("p",[v._v("对于一些迭代需求通常都会使用HTML模板，例如Vue模板、Pug模板等，所以"),e("code",[v._v("counter()")]),v._v("和"),e("code",[v._v("counters()")]),v._v("使用场景不多，笔者也很少发掘它的用处。以下就使用"),e("code",[v._v("counter()")]),v._v("巧妙搭配完成一个显示权重的迭代计数器。")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f8a2eef220814ebc9655d75de7213d9c~tplv-k3u1fbpfcp-zoom-1.image",alt:"迭代计数器"}})]),v._v(" "),e("p",[e("code",[v._v('<div class="iterative-counter"> <ul> <li> <input id="angular" type="checkbox"> <label for="angular">Angular</label> </li> <li> <input id="react" type="checkbox"> <label for="react">React</label> </li> <li> <input id="vue" type="checkbox"> <label for="vue">Vue</label> </li> </ul> <p class="count" data-unit="个">框架：</p> <p class="weight" data-unit="%">权重：</p> </div>')])]),v._v(" "),e("p",[e("code",[v._v('.iterative-counter { ul { counter-reset: index 0 count 0 weight 0; } li { display: flex; position: relative; align-items: center; counter-increment: index 1; &::before { content: counter(index)"、"; } & + li { margin-top: 10px; } } input { overflow: hidden; position: absolute; width: 0; height: 0; opacity: 0; &:checked + label::before { color: #3c9; content: "\\2713"; } } label { display: flex; align-items: center; height: 20px; &::before { margin-right: 5px; border: 1px solid #3c9; width: 20px; height: 20px; cursor: pointer; line-height: 20px; text-align: center; color: transparent; content: ""; transition: all 300ms; } } p { margin-top: 10px; &.count::after { content: counter(count) attr(data-unit); } &.weight::after { content: counter(weight) attr(data-unit); } } } #angular:checked { counter-increment: count 1 weight 20; } #react:checked { counter-increment: count 1 weight 50; } #vue:checked { counter-increment: count 1 weight 30; }')])]),v._v(" "),e("hr"),v._v(" "),e("ul",[e("li",[v._v("在线演示："),e("a",{attrs:{href:"https://codepen.io/JowayYoung/pen/rXqRPo",target:"_blank",rel:"noopener noreferrer"}},[v._v("Here"),e("OutboundLink")],1)]),v._v(" "),e("li",[v._v("在线源码："),e("a",{attrs:{href:"https://github.com/JowayYoung/idea-css/blob/master/icss/src/components/component/%E8%BF%AD%E4%BB%A3%E8%AE%A1%E6%95%B0%E5%99%A8.vue",target:"_blank",rel:"noopener noreferrer"}},[v._v("Here"),e("OutboundLink")],1)])]),v._v(" "),e("blockquote",[e("p",[v._v("calc()")])]),v._v(" "),e("p",[e("code",[v._v("calc(exp)")]),v._v("用于动态计算单位，"),e("code",[v._v("数值")]),v._v("、"),e("code",[v._v("长度")]),v._v("、"),e("code",[v._v("角度")]),v._v("、"),e("code",[v._v("时间")]),v._v("和"),e("code",[v._v("百分比")]),v._v("都能作为参数。由于执行"),e("code",[v._v("数学表达式")]),v._v("后返回运算后的计算值，所以可减少大量人工计算甚至无需人工计算，是笔者认为最有用的函数，没有之一。")]),v._v(" "),e("p",[e("code",[v._v("calc()")]),v._v("饥不择食，所有计量单位都能作为参数参加整个动态计算。")]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("数值")]),v._v("："),e("code",[v._v("整数")]),v._v("、"),e("code",[v._v("浮点数")])]),v._v(" "),e("li",[e("strong",[v._v("长度")]),v._v("："),e("code",[v._v("px")]),v._v("、"),e("code",[v._v("em")]),v._v("、"),e("code",[v._v("rem")]),v._v("、"),e("code",[v._v("vw")]),v._v("、"),e("code",[v._v("vh")]),v._v("等(详情可回看第5章"),e("strong",[v._v("样式计算")]),v._v(")")]),v._v(" "),e("li",[e("strong",[v._v("角度")]),v._v("："),e("code",[v._v("deg")]),v._v("、"),e("code",[v._v("turn")])]),v._v(" "),e("li",[e("strong",[v._v("时间")]),v._v("："),e("code",[v._v("s")]),v._v("、"),e("code",[v._v("ms")])]),v._v(" "),e("li",[e("strong",[v._v("百分比")]),v._v("："),e("code",[v._v("%")])])]),v._v(" "),e("p",[e("code",[v._v("calc()")]),v._v("虽然好用，但是新手难免会遇到一些坑，谨记以下特点，相信就能玩转"),e("code",[v._v("calc()")]),v._v("了。")]),v._v(" "),e("ul",[e("li",[v._v("四则运算：只能使用"),e("code",[v._v("+")]),v._v("、"),e("code",[v._v("-")]),v._v("、"),e("code",[v._v("*")]),v._v("、"),e("code",[v._v("/")]),v._v("作为运算符号")]),v._v(" "),e("li",[v._v("运算顺序：遵循加减乘除运算顺序，可用"),e("code",[v._v("()")]),v._v("提升运算等级")]),v._v(" "),e("li",[v._v("符号连接：每个运算符号必须使用"),e("code",[v._v("空格")]),v._v("间隔起来")]),v._v(" "),e("li",[v._v("混合计算：可混合不同计量单位动态计算")])]),v._v(" "),e("p",[v._v("第三点尤为重要，若未能遵守，浏览器直接忽略该属性。")]),v._v(" "),e("p",[v._v("还记得第5章"),e("strong",[v._v("样式计算")]),v._v("的一行CSS代码让页面自适应吗？"),e("code",[v._v("font-size:calc(100vw / 7.5)")]),v._v("，其实就是根据设计图与浏览器视窗的比例动态计算"),e("code",[v._v("<html>")]),v._v("的"),e("code",[v._v("font-size")]),v._v("："),e("code",[v._v("100/750 = x/100vw")]),v._v("。")]),v._v(" "),e("p",[v._v("在SPA里有遇过因为有滚动条或没滚动条而导致页面路由在跳转过程中发生向左或向右的抖动吗？这让强迫症患者很不舒服，此时可用"),e("code",[v._v("calc()")]),v._v("巧妙解决该问题。")]),v._v(" "),e("p",[e("code",[v._v(".elem { padding-right: calc(100vw - 100%); }")])]),v._v(" "),e("p",[e("code",[v._v("100vw")]),v._v("是视窗宽度，"),e("code",[v._v("100%")]),v._v("内容宽度，那么"),e("code",[v._v("100vw \\- 100%")]),v._v("就是滚动条宽度了，声明"),e("code",[v._v("padding-right")]),v._v("用于保留滚动条出现的位置，这样滚动条出不出现都不会让页面抖动了。")]),v._v(" "),e("p",[v._v("上述两个示例都是很常用的场景，"),e("code",[v._v("calc()")]),v._v("需结合变量才好玩，后续章节都会有"),e("code",[v._v("calc()")]),v._v("乱入，各位同学记得注意喔。")]),v._v(" "),e("blockquote",[e("p",[v._v("clamp()/max()/min()")])]),v._v(" "),e("p",[e("code",[v._v("clamp()/max()/min()")]),v._v("都和"),e("code",[v._v("calc()")]),v._v("类似，所有计量单位都能作为参数参加整个动态计算。这三个函数和"),e("code",[v._v("calc()")]),v._v("可互相嵌套使用的。")]),v._v(" "),e("p",[e("code",[v._v(".elem { width: calc(min(1200px, 100%) / 5); }")])]),v._v(" "),e("p",[e("code",[v._v("max(...val)")]),v._v("用于返回最大值，"),e("code",[v._v("min(...val)")]),v._v("用于返回最小值，支持一个或多个值或数学表达式。虽然"),e("code",[v._v("max()")]),v._v("名称是最大值，但实质上是用来限制最大值的；"),e("code",[v._v("min()")]),v._v("名称是最小值，但实质上是用来限制最小值的。")]),v._v(" "),e("p",[v._v("在响应式开发中，通常会声明内容宽度"),e("code",[v._v("100%")]),v._v("自适应且最大值不超过"),e("code",[v._v("1200px")]),v._v("。")]),v._v(" "),e("p",[e("code",[v._v(".elem { width: 100%; max-width: 1200px; }")])]),v._v(" "),e("p",[v._v("若用"),e("code",[v._v("min()")]),v._v("表示，只需一行声明即可。")]),v._v(" "),e("p",[e("code",[v._v(".elem { width: min(1200px, 100%); }")])]),v._v(" "),e("p",[e("code",[v._v("clamp(min, val, max)")]),v._v("用于返回区间范围值。"),e("code",[v._v("val")]),v._v("在"),e("code",[v._v("min~max")]),v._v("间则返回"),e("code",[v._v("val")]),v._v("，"),e("code",[v._v("val")]),v._v("小于"),e("code",[v._v("min")]),v._v("则返回"),e("code",[v._v("min")]),v._v("，"),e("code",[v._v("val")]),v._v("大于"),e("code",[v._v("max")]),v._v("则返回"),e("code",[v._v("max")]),v._v("，妥妥的响应式函数样子。")]),v._v(" "),e("p",[e("code",[v._v("clamp(min, val, max)")]),v._v("等价于"),e("code",[v._v("max(min, min(val, max))")]),v._v("。"),e("code",[v._v("clamp()")]),v._v("可用于响应式开发中，很好地履行了响应式的义务，让组件属性在特定条件下使用特定的值。")]),v._v(" "),e("p",[e("code",[v._v(".elem { width: clamp(100px, 25vw, 300px); }")])]),v._v(" "),e("p",[v._v("节点宽度声明在"),e("code",[v._v("100~300px")]),v._v("间，节点随着视窗宽度变化而变化。若视窗宽度大于"),e("code",[v._v("300px")]),v._v("则节点宽度一直保持"),e("code",[v._v("300px")]),v._v("，若视窗宽度在"),e("code",[v._v("100~300px")]),v._v("间则节点宽度为"),e("code",[v._v("25vw")]),v._v("转化后的"),e("code",[v._v("px值")]),v._v("，若视窗宽度小于"),e("code",[v._v("100px")]),v._v("则节点宽度一直保持"),e("code",[v._v("100px")]),v._v("。")]),v._v(" "),e("h3",{attrs:{id:"图形函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#图形函数"}},[v._v("#")]),v._v(" 图形函数")]),v._v(" "),e("p",[e("code",[v._v("clip-path")]),v._v("用于创建一个只有节点的部分区域可显示的剪切区域。裁剪完成后，内部区域显示，外部区域隐藏。一般应用在"),e("code",[v._v("SVG")]),v._v("上，但是也可当作裁剪效果用在节点上。当节点使用"),e("code",[v._v("clip-path")]),v._v("声明裁剪路径时，可用这5个图形函数裁剪区域了，除了"),e("code",[v._v("path()")]),v._v("其他4个函数的兼容性还行。")]),v._v(" "),e("p",[v._v("以下使用"),e("code",[v._v("circle()")]),v._v("、"),e("code",[v._v("ellipse()")]),v._v("和"),e("code",[v._v("polygon()")]),v._v("描绘一些常见的图像。")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/734080acde84497f80ac2cb5d29b0970~tplv-k3u1fbpfcp-zoom-1.image",alt:"各种图形"}})]),v._v(" "),e("p",[e("code",[v._v('<ul class="figure-box" style="--count: 12"> <li class="star" style="--index: 0"></li> <li class="ellipse" style="--index: 1"></li> <li class="circle" style="--index: 2"></li> <li class="triangle" style="--index: 3"></li> <li class="rhombus" style="--index: 4"></li> <li class="trapezoid" style="--index: 5"></li> <li class="parallelogram" style="--index: 6"></li> <li class="pentagon" style="--index: 7"></li> <li class="left-arrow" style="--index: 8"></li> <li class="right-arrow" style="--index: 9"></li> <li class="close" style="--index: 10"></li> <li class="message" style="--index: 11"></li> </ul>')])]),v._v(" "),e("p",[e("code",[v._v(".figure-box { display: flex; flex-wrap: wrap; justify-content: center; max-width: 720px; li { --Θ: calc(var(--index) / var(--count) * 1turn); margin: 10px; width: 100px; height: 100px; background-color: #3c9; filter: hue-rotate(var(--Θ)); &.star { clip-path: polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%); } &.ellipse { clip-path: ellipse(40% 50% at 50% 50%); } &.circle { clip-path: circle(50% at 50% 50%); } &.triangle { clip-path: polygon(50% 0%, 0% 100%, 100% 100%); } &.rhombus { clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%); } &.trapezoid { clip-path: polygon(20% 0%, 80% 0%, 100% 100%, 0% 100%); } &.parallelogram { clip-path: polygon(25% 0%, 100% 0%, 75% 100%, 0% 100%); } &.pentagon { clip-path: polygon(50% 0%, 100% 38%, 82% 100%, 18% 100%, 0% 38%); } &.left-arrow { clip-path: polygon(40% 0%, 40% 20%, 100% 20%, 100% 80%, 40% 80%, 40% 100%, 0% 50%); } &.right-arrow { clip-path: polygon(0% 20%, 60% 20%, 60% 0%, 100% 50%, 60% 100%, 60% 80%, 0% 80%); } &.close { clip-path: polygon(20% 0%, 0% 20%, 30% 50%, 0% 80%, 20% 100%, 50% 70%, 80% 100%, 100% 80%, 70% 50%, 100% 20%, 80% 0%, 50% 30%); } &.message { clip-path: polygon(0% 0%, 100% 0%, 100% 75%, 75% 75%, 75% 100%, 50% 75%, 0% 75%); } } }")])]),v._v(" "),e("p",[v._v("整体来说很简单，在特定坐标上标记连线的点即可。推荐一个裁剪路径的网站"),e("a",{attrs:{href:"https://bennettfeely.com/clippy",target:"_blank",rel:"noopener noreferrer"}},[v._v("Clippy"),e("OutboundLink")],1),v._v("，轻松绘制出各种由线条组成的裁剪区域。"),e("code",[v._v("clip-path")]),v._v("有一个明显的限制，就是只能裁剪折线形成的图形，不能裁剪曲线形成的图形。")]),v._v(" "),e("hr"),v._v(" "),e("ul",[e("li",[v._v("在线演示："),e("a",{attrs:{href:"https://codepen.io/JowayYoung/pen/vYNXvXq",target:"_blank",rel:"noopener noreferrer"}},[v._v("Here"),e("OutboundLink")],1)]),v._v(" "),e("li",[v._v("在线源码："),e("a",{attrs:{href:"https://github.com/JowayYoung/idea-css/blob/master/icss/src/components/figure/%E4%BD%BF%E7%94%A8clip-path%E6%8F%8F%E7%BB%98%E5%90%84%E7%A7%8D%E5%9B%BE%E5%BD%A2.vue",target:"_blank",rel:"noopener noreferrer"}},[v._v("Here"),e("OutboundLink")],1)])]),v._v(" "),e("h3",{attrs:{id:"其他函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他函数"}},[v._v("#")]),v._v(" 其他函数")]),v._v(" "),e("p",[v._v("由于后续章节的每一章都单独挂钩"),e("code",[v._v("背景函数")]),v._v("、"),e("code",[v._v("滤镜函数")]),v._v("、"),e("code",[v._v("变换函数")]),v._v("和"),e("code",[v._v("缓动函数")]),v._v("，所以本节就不再讲解这四个函数了。后续章节都会对这些函数进行一些详细的讲解。")])])}),[],!1,null,null,null);_.default=t.exports}}]);