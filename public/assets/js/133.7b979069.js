(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{615:function(n,a,s){"use strict";s.r(a);var e=s(59),t=Object(e.a)({},(function(){var n=this,a=n.$createElement,s=n._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"动效开发-1：让它动起来"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动效开发-1：让它动起来"}},[n._v("#")]),n._v(" 动效开发 1：让它动起来")]),n._v(" "),s("p",[n._v("在现实生活中，人们的大脑习惯了被动态的东西所吸引，适当的动画效果可以为网页添加有价值的交互和反馈，提升用户的情感体验。")]),n._v(" "),s("blockquote",[s("p",[n._v("情感设计的主要目标是促进人与人之间的沟通，即便媒介是网页。一旦我们在这方面做得到位，电脑本身将回归背后，而网页的个性化将因此得到凸显。"),s("br"),n._v("\n—— Aarron Walter，"),s("a",{attrs:{href:"https://abookapart.com/products/designing-for-emotion",target:"_blank",rel:"noopener noreferrer"}},[s("em",[n._v("Designing For Emotion")]),s("OutboundLink")],1),n._v(" 一书的作者")])]),n._v(" "),s("p",[n._v("动画效果是情感设计的重要手段，从本小节开始，我们将为大家介绍「H5 开发」的第四个重要的能力 —— 「动画效果开发」，简称「动效开发」，即综合利用 JavaScript、CSS(3)、SVG、Canvas 等多种 Web 技术手段开发出动人的网页动态效果。")]),n._v(" "),s("p",[n._v("回想下我们第 1 小节提及的 「H5 开发」三角形能力模型，「动效开发」处在三角形的上部，毫无疑问这项能力越强，在此岗位中的竞争力越大。")]),n._v(" "),s("p",[n._v("动效开发 —— 先「动」而后「效」，为网页添加动态元素的方法有很多：")]),n._v(" "),s("ul",[s("li",[n._v("GIF、Flash —— 廉颇老矣，尚能饭否？")]),n._v(" "),s("li",[n._v("视频 —— 可远观而不可亵玩焉")]),n._v(" "),s("li",[n._v("CSS3 结合 JavaScript —— 当红小生")])]),n._v(" "),s("p",[n._v("我们将把重心放在 CSS3 动画上面，因为 CSS3 在现如今的网页动效开发中占据着最为重要的一席，作为老大哥 CSS 的补充，它像是专门为「H5 开发」量身定制的动效武器。")]),n._v(" "),s("p",[n._v("拿起这件武器准备杀出一条血路之前，得先找到它的扳机在哪里。")]),n._v(" "),s("h2",{attrs:{id:"css3-transition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css3-transition"}},[n._v("#")]),n._v(" CSS3 Transition")]),n._v(" "),s("p",[n._v("在 CSS3 的世界里，让网页元素动起来的第一个方法是利用 "),s("code",[n._v("transition")]),n._v("，基于 "),s("code",[n._v("transition")]),n._v(" 可以让元素的某个 CSS 属性从指定的开始状态过渡到特定的结束状态。我们将元素「从指定的开始状态过渡到特定的结束状态」这个过程简称为「状态变换」，注意这里的"),s("strong",[n._v("过渡")]),n._v("，事实上 "),s("code",[n._v("transition")]),n._v(" 便像是页面元素「状态变换」的润滑剂，如果没有 "),s("code",[n._v("transition")]),n._v("，元素「状态变换」的过程将会显得生硬而突兀（如下图中左边的小圆球，"),s("a",{attrs:{href:"https://codepen.io/mamboer/full/pLvLyv/",target:"_blank",rel:"noopener noreferrer"}},[n._v("查看 DEMO"),s("OutboundLink")],1),n._v("）。")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/3/10/1620f2835b9b7448?w=950&h=220&f=gif&s=97142",alt:"transition"}})]),n._v(" "),s("p",[s("code",[n._v("transition")]),n._v(" 可作用于普通的 CSS 属性（如 "),s("code",[n._v("background")]),n._v(" 、"),s("code",[n._v("opacity")]),n._v(" …），也可以作用于 CSS3 出现时新引入的 "),s("code",[n._v("transform")]),n._v(" 属性，而利用后者可以实现 3D 的过渡效果。"),s("code",[n._v("transform")]),n._v(" 属性就像是 CSS3 这个动效武器子弹里的火药，大家可以通过 "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/",target:"_blank",rel:"noopener noreferrer"}},[n._v("MDN"),s("OutboundLink")],1),n._v(" 的 "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/transform",target:"_blank",rel:"noopener noreferrer"}},[n._v("《transform》"),s("OutboundLink")],1),n._v(" 一文进行进一步地了解学习，务必做到深谙其门道，避免一知半解。")]),n._v(" "),s("h3",{attrs:{id:"一个-3d-过渡动效例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一个-3d-过渡动效例子"}},[n._v("#")]),n._v(" 一个 3D 过渡动效例子")]),n._v(" "),s("p",[n._v("如前面所说，利用 "),s("code",[n._v("transition")]),n._v(" 结合 "),s("code",[n._v("transform")]),n._v(" 可实现元素的 3D 过渡动效，所以我们这个例子的目标是：利用 "),s("code",[n._v("transform")]),n._v(" 属性画一个立方体，然后利用 "),s("code",[n._v("transition")]),n._v(" 实现立方体的翻转效果。大家不妨打开 "),s("a",{attrs:{href:"https://codepen.io/",target:"_blank",rel:"noopener noreferrer"}},[n._v("CodePen"),s("OutboundLink")],1),n._v(" 按照以下步骤亲自动手试试，或者直接 "),s("a",{attrs:{href:"https://codepen.io/mamboer/full/XEJqPy",target:"_blank",rel:"noopener noreferrer"}},[n._v("查看 DEMO"),s("OutboundLink")],1),n._v(" 体会最终的结果。")]),n._v(" "),s("h4",{attrs:{id:"步骤-1-准备立方体的-html-代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#步骤-1-准备立方体的-html-代码"}},[n._v("#")]),n._v(" 步骤 1 - 准备立方体的 HTML 代码")]),n._v(" "),s("p",[n._v("一个立方体（"),s("code",[n._v(".cube")]),n._v("）的 6 个面（"),s("code",[n._v(".cube-face")]),n._v("）。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('<div class="demo">\n  <div class="cube show-default">\n    <div class="cube-face is-front"><img src="https://rawcdn.githack.com/o2team/misc/gh-pages/o2/img/mms/s1/1.jpg" alt="pic1"/></div>\n    <div class="cube-face is-back"><img src="https://rawcdn.githack.com/o2team/misc/gh-pages/o2/img/mms/s1/2.jpg" alt="pic2"/></div>\n    <div class="cube-face is-right"><img src="https://rawcdn.githack.com/o2team/misc/gh-pages/o2/img/mms/s1/3.jpg" alt="pic3"/></div>\n    <div class="cube-face is-left"><img src="https://rawcdn.githack.com/o2team/misc/gh-pages/o2/img/mms/s1/4.jpg" alt="pic4"/></div>\n    <div class="cube-face is-top"><img src="https://rawcdn.githack.com/o2team/misc/gh-pages/o2/img/mms/s1/5.jpg" alt="pic5"/></div>\n    <div class="cube-face is-bottom"><img src="https://rawcdn.githack.com/o2team/misc/gh-pages/o2/img/mms/s1/6.jpg" alt="pic6"/></div>\n  </div>\n</div>\n\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br")])]),s("h4",{attrs:{id:"步骤-2-利用-css-3-将-6-个面组装成立体形状的立方体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#步骤-2-利用-css-3-将-6-个面组装成立体形状的立方体"}},[n._v("#")]),n._v(" 步骤 2 - 利用 CSS(3) 将 6 个面组装成立体形状的立方体")]),n._v(" "),s("blockquote",[s("p",[n._v("这里使用了 SCSS 样式预处理语言，如果你正在 CodePen 上跟着做，注意将样式预处理器（CSS Preprocessor）配置成为 SCSS。")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// demo styles\n$cube-size: 300px;\n$cube-radius: $cube-size / 2;\n.demo {\n  width: $cube-size;\n  height: $cube-size;\n  perspective: 1000px;\n  position: relative;\n  margin: 30px auto;\n}\n.cube {\n  width: 100%;\n  height: 100%;\n  transform-style: preserve-3d;\n  position: absolute;\n  &-face {\n    border: 2px solid #000;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    overflow: hidden;\n    opacity: 0.6;\n    backface-visibility: visible;\n    &.is-front  {\n      transform: translateZ( $cube-radius );\n    }\n    &.is-back   {\n      transform: rotateX( -180deg ) translateZ( $cube-radius );\n    }\n    &.is-right {\n      transform: rotateY( 90deg ) translateZ( $cube-radius );\n    }\n    &.is-left {\n      transform: rotateY( -90deg ) translateZ( $cube-radius );\n    }\n    &.is-top {\n      transform: rotateX( 90deg ) translateZ( $cube-radius );\n    }\n    &.is-bottom {\n      transform: rotateX( -90deg ) translateZ( $cube-radius );\n    }\n  }\n  img {\n    width: 100%;\n  }\n}\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br")])]),s("p",[n._v("至此，我们得到一个正面朝着我们的边长为 "),s("code",[n._v("300px")]),n._v(" 的立方体，为了让它在网页上呈现 3D 的视觉效果，我们写了以下几行关键的代码：")]),n._v(" "),s("ol",[s("li",[n._v("利用 3D 旋转 "),s("code",[n._v("rotateX")]),n._v(" 或 "),s("code",[n._v("rotateY")]),n._v("，以及 Z 轴位移 "),s("code",[n._v("translateZ")]),n._v(" 来衔接拼装立方体的每一个面")]),n._v(" "),s("li",[n._v("设置每一个面的背面可见性："),s("code",[n._v("backface-visibility: visible")]),n._v("，注意这里前一行代码 "),s("code",[n._v("opacity: 0.6")]),n._v(" 是辅助性的，而 "),s("code",[n._v("backface-visibility")]),n._v(" 属性的默认值其实即 "),s("code",[n._v("visible")]),n._v("，这里写出来便于大家理解代码。")]),n._v(" "),s("li",[n._v("在立方体的父级元素上设置透视距离："),s("code",[n._v("perspective: 1000px")])]),n._v(" "),s("li",[n._v("在立方体上设置变形方式："),s("code",[n._v("transform-style: preserve-3d")])])]),n._v(" "),s("p",[n._v("以上关键代码的关键 CSS 属性，在小册后面的「聊一聊 3D」小节中会有进一步的解读，这里就不多说了。读者也可自行在 "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/",target:"_blank",rel:"noopener noreferrer"}},[n._v("MDN"),s("OutboundLink")],1),n._v(" 上搜到具体的说明资料，建议结合资料和本例子亲自把玩体会。")]),n._v(" "),s("h4",{attrs:{id:"步骤-3-让立方体显得更立体点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#步骤-3-让立方体显得更立体点"}},[n._v("#")]),n._v(" 步骤 3 - 让立方体显得更立体点")]),n._v(" "),s("p",[n._v("为了让立方体默认看起来更立体点（不是单纯地正面对着我们），可以利用 "),s("code",[n._v("rotate")]),n._v(" 将立方体在 X 和 Y 轴上各旋转 "),s("code",[n._v("15deg")]),n._v("，让它正面斜对着我们。")]),n._v(" "),s("p",[s("strong",[n._v("注意")]),n._v("：以下代码需要合并到前面步骤 2 里的代码中去。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v(".cube {\n  ...\n  &.show-default {\n    transform: translateZ( - $cube-radius ) rotateY( -15deg ) rotateX(-15deg);\n  }\n  &.show-left {\n    transform: translateZ( - $cube-radius ) rotateY( 90deg );\n  }\n  &-face {\n    ...\n    opacity: 0.9;\n    ...\n  }\n  ...\n}  \n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br")])]),s("p",[n._v("我们给立方体新增了两个表示状态的类 "),s("code",[n._v("show-default")]),n._v(" 和 "),s("code",[n._v("show-left")]),n._v("，分别表示它「默认的展示状态 - 正面斜对着我们」和「左面正对着我们」，读者可以依样画葫芦添加另外几个面对着我们的样式代码。")]),n._v(" "),s("h4",{attrs:{id:"步骤-4-设置立方体的-transition-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#步骤-4-设置立方体的-transition-属性"}},[n._v("#")]),n._v(" 步骤 4 - 设置立方体的 "),s("code",[n._v("transition")]),n._v(" 属性")]),n._v(" "),s("p",[n._v("最后一步就是给立方体添加 "),s("code",[n._v("transition")]),n._v(" 属性，让它的状态变换拥有过渡动画效果。")]),n._v(" "),s("p",[n._v("通过查阅 "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions",target:"_blank",rel:"noopener noreferrer"}},[n._v("MDN"),s("OutboundLink")],1),n._v(" 资料可得 "),s("code",[n._v("transition")]),n._v(" 的用法为：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v(".transition-target {\n  transition: <property> <duration> <timing-function> <delay>;\n}\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br")])]),s("p",[n._v("我们为立方体加上相应的代码：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v(".cube {\n  ...\n  // <property> = transform\n  // <timing-function> = ease\n  // <duration> = 1s\n  // <delay> = 0\n  transition: transform ease 1s;\n  ...\n}\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br")])]),s("p",[n._v("此时如果我们将立方体 "),s("code",[n._v("div")]),n._v(" 容器的 "),s("code",[n._v("show-default")]),n._v(" 类名替换成 "),s("code",[n._v("show-left")]),n._v("，就可以看到它左面旋转至我们眼前的 3D 效果啦。")]),n._v(" "),s("p",[n._v("案例最终的效果如下图所示：")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/3/10/1620fe3acf281813?w=950&h=376&f=gif&s=2510549",alt:"3D transition"}})]),n._v(" "),s("h3",{attrs:{id:"transition-动画的局限性和适用性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transition-动画的局限性和适用性"}},[n._v("#")]),n._v(" Transition 动画的局限性和适用性")]),n._v(" "),s("p",[s("code",[n._v("transition")]),n._v(" 实现的动画有下面这些特点：")]),n._v(" "),s("ol",[s("li",[n._v("支持有限的 CSS 属性")])]),n._v(" "),s("p",[n._v("可通过"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_animated_properties",target:"_blank",rel:"noopener noreferrer"}},[n._v("《CSS animated properties》"),s("OutboundLink")],1),n._v("一文查看支持过渡动效的 CSS 属性。")]),n._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[n._v("隐式过渡（implicit transitions）")])]),n._v(" "),s("p",[s("code",[n._v("transition")]),n._v(" 的过渡动画是隐式的（如下图所示，图片来源于 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions",target:"_blank",rel:"noopener noreferrer"}},[n._v("MDN"),s("OutboundLink")],1),n._v("），即除了动画的开始状态和结束状态我们可以自定义之外，「状态变换」的具体过程由浏览器自动执行，中途无法进行人为干预。当然，我们还可以为浏览器执行动画时指定动画的具体时长（"),s("code",[n._v("duration")]),n._v("），以及时间轴函数（"),s("code",[n._v("timing function")]),n._v("）。")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/3/12/1621877fdfc0d719?w=706&h=204&f=png&s=18685",alt:"隐式过渡"}})]),n._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[n._v("一次性、不可暂停或反转")])]),n._v(" "),s("p",[s("code",[n._v("transition")]),n._v(" 只支持两个状态之间的变换过渡，不支持多个状态的连续变换过渡，并且状态的变换是一次性的（无法循环）， 不可暂停，且不可反转（从状态 A 过渡到 B 后不能立即又过渡回 A）。")]),n._v(" "),s("p",[n._v("所以，在实际应用中我们常常利用 "),s("code",[n._v("transition")]),n._v(" 来做那些轻量的、修饰性的动效，用于增强用户在网页上操作时得到的反馈。例如：")]),n._v(" "),s("ul",[s("li",[n._v("元素「hover」 或「点击」后的反馈")]),n._v(" "),s("li",[n._v("弹窗「打开」或「关闭」时的效果")]),n._v(" "),s("li",[n._v("…")])]),n._v(" "),s("h3",{attrs:{id:"扩展阅读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展阅读"}},[n._v("#")]),n._v(" 扩展阅读")]),n._v(" "),s("ol",[s("li",[n._v("通过 Mozilla 的 "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/",target:"_blank",rel:"noopener noreferrer"}},[n._v("MDN"),s("OutboundLink")],1),n._v(" 文档来了解 "),s("code",[n._v("transition")]),n._v(" 的详细说明及使用示例：")])]),n._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions",target:"_blank",rel:"noopener noreferrer"}},[n._v("《Using CSS transitions》"),s("OutboundLink")],1)])]),n._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[n._v("结合 CodePen 代码示例了解 "),s("code",[n._v("transition")]),n._v(" 和 "),s("code",[n._v("transform")]),n._v(" 的相关属性:")])]),n._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://robots.thoughtbot.com/transitions-and-transforms",target:"_blank",rel:"noopener noreferrer"}},[n._v("《CSS Transitions and Transforms for Beginners》"),s("OutboundLink")],1)])]),n._v(" "),s("h2",{attrs:{id:"css3-animation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css3-animation"}},[n._v("#")]),n._v(" CSS3 Animation")]),n._v(" "),s("p",[n._v("如果我们想让元素的动效支持多个状态之间的连续过渡变换、支持循环，甚至支持暂停或反转，我们该怎么办？答案就是："),s("code",[n._v("animation")]),n._v(" – 利用 CSS3 让网页元素动起来的第二个方法。")]),n._v(" "),s("p",[n._v("学习 "),s("code",[n._v("animation")]),n._v(" 动画需首先掌握两个关键的基本知识点：")]),n._v(" "),s("ul",[s("li",[n._v("关键帧（"),s("code",[n._v("@keyframes")]),n._v("）")]),n._v(" "),s("li",[s("code",[n._v("animation")]),n._v(" 属性")])]),n._v(" "),s("h3",{attrs:{id:"关键帧（-keyframes）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关键帧（-keyframes）"}},[n._v("#")]),n._v(" 关键帧（"),s("code",[n._v("@keyframes")]),n._v("）")]),n._v(" "),s("p",[s("code",[n._v("@keyframes")]),n._v(" 用来定义动画的具体内容，它包括以下内容：")]),n._v(" "),s("ul",[s("li",[n._v("动画叫什么名字？")]),n._v(" "),s("li",[n._v("动画开始、中间及结束状态有哪些？（可以理解成每个状态对应一个关键帧）")]),n._v(" "),s("li",[n._v("每个状态出现在动画过程中的哪个时间点？")])]),n._v(" "),s("p",[n._v("我们来瞅一个 "),s("code",[n._v("@keyframes")]),n._v(" 的实际例子，来源于有名的 "),s("code",[n._v("animation")]),n._v(" 动画库 "),s("a",{attrs:{href:"https://daneden.github.io/animate.css/",target:"_blank",rel:"noopener noreferrer"}},[n._v("Animate.css"),s("OutboundLink")],1),n._v("，其中的「"),s("a",{attrs:{href:"https://github.com/daneden/animate.css/blob/master/source/bouncing_entrances/bounceIn.css",target:"_blank",rel:"noopener noreferrer"}},[n._v("bounceIn"),s("OutboundLink")],1),n._v("」动效的关键帧代码如下：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("@keyframes bounceIn {\n  from,\n  20%,\n  40%,\n  60%,\n  80%,\n  to {\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n  }\n\n  0% {\n    opacity: 0;\n    transform: scale3d(0.3, 0.3, 0.3);\n  }\n\n  20% {\n    transform: scale3d(1.1, 1.1, 1.1);\n  }\n\n  40% {\n    transform: scale3d(0.9, 0.9, 0.9);\n  }\n\n  60% {\n    opacity: 1;\n    transform: scale3d(1.03, 1.03, 1.03);\n  }\n\n  80% {\n    transform: scale3d(0.97, 0.97, 0.97);\n  }\n\n  to {\n    opacity: 1;\n    transform: scale3d(1, 1, 1);\n  }\n}\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br")])]),s("p",[n._v("显然，这段关键帧的代码做了以下事情：")]),n._v(" "),s("ul",[s("li",[n._v("定义了动画的名称为「bounceIn」")]),n._v(" "),s("li",[n._v("将动画过程划分成了 6 个状态（6 个关键帧）")]),n._v(" "),s("li",[n._v("除了开始和结束这两个时间位置外，另外 4 个关键帧的时间位置分别为：20%、40%、60% 和 80%")])]),n._v(" "),s("h3",{attrs:{id:"animation-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#animation-属性"}},[n._v("#")]),n._v(" "),s("code",[n._v("animation")]),n._v(" 属性")]),n._v(" "),s("p",[n._v("细心的读者会发现上面示例中的 "),s("code",[n._v("animation-timing-function")]),n._v(" 相关代码，其实是 "),s("code",[n._v("animation")]),n._v(" 属性相关的知识点，除了关键帧之外，谙熟 "),s("code",[n._v("animation")]),n._v(" 属性（及其“子”属性）的具体含义及用法，也是学习 "),s("code",[n._v("animation")]),n._v(" 动效的基本要求。")]),n._v(" "),s("p",[s("code",[n._v("@keyframes")]),n._v(" 用来定义一个动画的具体状态内容，而 "),s("code",[n._v("animation")]),n._v(" 属性用来定义一个元素执行某个动画时的相关动画设定，包括：")]),n._v(" "),s("ul",[s("li",[n._v("指定元素用什么动画？（"),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-name",target:"_blank",rel:"noopener noreferrer"}},[n._v("animation-name"),s("OutboundLink")],1),n._v("）")]),n._v(" "),s("li",[n._v("动画的持续时间是多少？（"),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-duration",target:"_blank",rel:"noopener noreferrer"}},[n._v("animation-duration"),s("OutboundLink")],1),n._v("）")]),n._v(" "),s("li",[n._v("浏览器用什么样的时间轴函数来执行该动画？（"),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-timing-function",target:"_blank",rel:"noopener noreferrer"}},[n._v("animation-timing-function"),s("OutboundLink")],1),n._v("）")]),n._v(" "),s("li",[n._v("是否需要延时执行该动画？("),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-delay",target:"_blank",rel:"noopener noreferrer"}},[n._v("animation-delay"),s("OutboundLink")],1),n._v(")")]),n._v(" "),s("li",[n._v("动画循环执行的次数是多少？（"),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-iteration-count",target:"_blank",rel:"noopener noreferrer"}},[n._v("animation-iteration-count"),s("OutboundLink")],1),n._v("）")]),n._v(" "),s("li",[n._v("动画执行的方向是什么？（"),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-direction",target:"_blank",rel:"noopener noreferrer"}},[n._v("animation-direction"),s("OutboundLink")],1),n._v("）")]),n._v(" "),s("li",[n._v("动画填充模式是什么？（"),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-fill-mode",target:"_blank",rel:"noopener noreferrer"}},[n._v("animation-fill-mode"),s("OutboundLink")],1),n._v("）")]),n._v(" "),s("li",[n._v("动画执行状态是运行还是暂停？（"),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/animation-play-state",target:"_blank",rel:"noopener noreferrer"}},[n._v("animation-play-state"),s("OutboundLink")],1),n._v("）")])]),n._v(" "),s("p",[n._v("对于 "),s("code",[n._v("animation")]),n._v(" 相关属性的介绍和使用示例，可以在 "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/",target:"_blank",rel:"noopener noreferrer"}},[n._v("MDN"),s("OutboundLink")],1),n._v(" 找到十分详尽的资料，这里就不搬运了，读者可以点击括号内的链接进行逐一学习。")]),n._v(" "),s("p",[n._v("值得一提的是，"),s("code",[n._v("animation")]),n._v(" 动画的延时可以设置为负值（"),s("a",{attrs:{href:"https://codepen.io/mamboer/pen/ZxGdpE",target:"_blank",rel:"noopener noreferrer"}},[n._v("试试看"),s("OutboundLink")],1),n._v("），善用负值的 "),s("code",[n._v("animation-delay")]),n._v(" 有时候可以用最少的代码实现出乎意料的动效。")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/3/12/1621a4bc7d9c9595?w=950&h=350&f=gif&s=575776",alt:"负值animation-delay"}})]),n._v(" "),s("p",[n._v("上图的案例（"),s("a",{attrs:{href:"https://codepen.io/mamboer/full/xWGvqj",target:"_blank",rel:"noopener noreferrer"}},[n._v("查看 DEMO"),s("OutboundLink")],1),n._v("）来源于"),s("a",{attrs:{href:"https://css-tricks.com/css-animation-tricks/",target:"_blank",rel:"noopener noreferrer"}},[n._v("《CSS Animation Tricks: State Jumping, Negative Delays, Animating Origin, and More》"),s("OutboundLink")],1),n._v(" 一文，利用负值 "),s("code",[n._v("animation-delay")]),n._v(" 复用同一个动画轻松实现。相同的效果如果用 GIF 或 "),s("code",[n._v("transition")]),n._v(" 来实现的话，恐怕会复杂很多。")]),n._v(" "),s("h3",{attrs:{id:"例子-让立方体自己转起来"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#例子-让立方体自己转起来"}},[n._v("#")]),n._v(" 例子 - 让立方体自己转起来")]),n._v(" "),s("p",[n._v("为了更好地体会 "),s("code",[n._v("transition")]),n._v(" 和 "),s("code",[n._v("animation")]),n._v(" 两者做动效的异同之处，我们接下来试着利用 "),s("code",[n._v("animation")]),n._v(" 改写前面 "),s("code",[n._v("transition")]),n._v(" 做的立方体例子，让它自己转动起来。")]),n._v(" "),s("h4",{attrs:{id:"步骤-1-利用-keyframes-定义转动的动画"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#步骤-1-利用-keyframes-定义转动的动画"}},[n._v("#")]),n._v(" 步骤 1 - 利用 "),s("code",[n._v("@keyframes")]),n._v(" 定义转动的动画")]),n._v(" "),s("p",[n._v("定义一个名为「autoRotate」的关键帧动画，并将 "),s("code",[n._v("transition")]),n._v(" 版本例子中显示立方体每一面的代码搬到 "),s("code",[n._v("@keyframes")]),n._v(" 中去。 立方体有 6 个面，所以我们把整个动画划分为 6 个关键帧，如下所示：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("@keyframes autoRotate {\n  // show-front\n  0%, 100% {\n    transform: translateZ( - $cube-radius );\n  }\n  // show-back\n  16.5% {\n    transform: translateZ( - $cube-radius ) rotateX( -180deg );\n  }\n  // show-left\n  33% {\n    transform: translateZ( - $cube-radius ) rotateY( 90deg );\n  }\n  // show-right\n  49.5% {\n    transform: translateZ( - $cube-radius ) rotateY( -90deg );\n  }\n  // show-top\n  66% {\n    transform: translateZ( - $cube-radius ) rotateX( -90deg );\n  }\n  // show-bottom \n  82.5% {\n    transform: translateZ( - $cube-radius ) rotateX( 90deg );\n  }\n}\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br")])]),s("h4",{attrs:{id:"步骤2-将-transition-属性替换成-animation-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#步骤2-将-transition-属性替换成-animation-属性"}},[n._v("#")]),n._v(" 步骤2 - 将 "),s("code",[n._v("transition")]),n._v(" 属性替换成 "),s("code",[n._v("animation")]),n._v(" 属性")]),n._v(" "),s("p",[n._v("利用 "),s("code",[n._v("animation")]),n._v(" 属性，在立方体上应用我们前面定义的「autoRotate」动画，并做以下设定：")]),n._v(" "),s("ul",[s("li",[n._v("时间轴函数（"),s("code",[n._v("animation-timing-function")]),n._v("）为 "),s("code",[n._v("ease")])]),n._v(" "),s("li",[n._v("持续时间（"),s("code",[n._v("animation-duration")]),n._v("）为 18 秒")]),n._v(" "),s("li",[n._v("执行次数（"),s("code",[n._v("animation-iteration-count")]),n._v("）为 "),s("code",[n._v("infinite")]),n._v("，即无限次")]),n._v(" "),s("li",[n._v("执行方向（"),s("code",[n._v("animation-direction")]),n._v("）为 "),s("code",[n._v("alternate")]),n._v("，即正、反向交替执行")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// transition: transform ease 1s;\nanimation: autoRotate ease 18s alternate infinite;\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br")])]),s("p",[n._v("以上两个简单的步骤完成了 "),s("code",[n._v("animation")]),n._v(" 替代 "),s("code",[n._v("transition")]),n._v(" 实现更丰富的动效，读者可以通过 "),s("a",{attrs:{href:"https://codepen.io/mamboer/pen/bvVbxv",target:"_blank",rel:"noopener noreferrer"}},[n._v("查看完整示例代码"),s("OutboundLink")],1),n._v(" 并修改 "),s("code",[n._v("animation")]),n._v(" 属性的其他设定（如 "),s("code",[n._v("animation-play-state")]),n._v(" 等）来加深体会。")]),n._v(" "),s("h3",{attrs:{id:"扩展阅读-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展阅读-2"}},[n._v("#")]),n._v(" 扩展阅读")]),n._v(" "),s("ol",[s("li",[n._v("结合 CodePen 案例学习 "),s("code",[n._v("animation")]),n._v(" 的每一个属性："),s("a",{attrs:{href:"https://robots.thoughtbot.com/css-animation-for-beginners",target:"_blank",rel:"noopener noreferrer"}},[n._v("CSS Animation for Beginners"),s("OutboundLink")],1)]),n._v(" "),s("li",[n._v("学习 "),s("code",[n._v("animation")]),n._v(" 动画的小奇巧："),s("a",{attrs:{href:"https://css-tricks.com/css-animation-tricks/",target:"_blank",rel:"noopener noreferrer"}},[n._v("CSS Animation Tricks: State Jumping, Negative Delays, Animating Origin, and More"),s("OutboundLink")],1)])]),n._v(" "),s("h2",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[n._v("#")]),n._v(" 小结")]),n._v(" "),s("p",[n._v("动效开发以「动」为始，本小节结合示例介绍了利用 CSS3 让网页元素动起来的两种方法——"),s("code",[n._v("transition")]),n._v(" 和 "),s("code",[n._v("animation")]),n._v("，通过对比和结合来加深读者对这两种方法制作动效的理解与体会。")])])}),[],!1,null,null,null);a.default=t.exports}}]);