(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{642:function(s,n,t){"use strict";t.r(n);var e=t(59),a=Object(e.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"typescript-与-react-实战-组件篇下"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#typescript-与-react-实战-组件篇下"}},[s._v("#")]),s._v(" TypeScript 与 React 实战(组件篇下)")]),s._v(" "),t("p",[s._v("上一节我们讲到用 class 一处编写能两处复用的方式虽然非常实用，但是我们不得不用一些 Hack 手段来避免后续的报错，有没有更优雅、更严谨的解决方案？")]),s._v(" "),t("blockquote",[t("p",[s._v("虽然 class 的写法需要一些 Hack 手段，但是笔者很多时候还是用了 class，因为确实很猛糙快。")])]),s._v(" "),t("h2",{attrs:{id:"利用高级类型解决默认属性报错"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#利用高级类型解决默认属性报错"}},[s._v("#")]),s._v(" 利用高级类型解决默认属性报错")]),s._v(" "),t("p",[s._v("我们现在需要先声明"),t("code",[s._v("defaultProps")]),s._v("的值:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const todoInputDefaultProps = {\n    inputSetting: {\n        maxlength: 20,\n        placeholder: '请输入todo',\n    }\n}\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("接着定义组件的"),t("code",[s._v("props")]),s._v("类型")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("type Props = {\n    handleSubmit: (value: string) => void\n    children: React.ReactNode\n} & Partial<typeof todoInputDefaultProps>\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("code",[s._v("Partial")]),s._v("的作用我们之前在高级类型的章节提到过，就是将类型的属性全部变成可选的,也就是下面这种情况：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{\n    inputSetting?: {\n        maxlength: number;\n        placeholder: string;\n    } | undefined;\n}\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("那么现在我们使用Props是不是就没有问题了？")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("export class TodoInput extends React.Component<Props, State> {\n\n    public static defaultProps = todoInputDefaultProps\n\n...\n\n    public render() {\n        const { itemText } = this.state\n        const { updateValue, handleSubmit } = this\n        const { inputSetting } = this.props\n\n        return (\n            <form onSubmit={handleSubmit} >\n                <input maxLength={inputSetting.maxlength} type='text' value={itemText} onChange={updateValue} />\n                <button type='submit' >添加todo</button>\n            </form>\n        )\n    }\n\n...\n}\n\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br")])]),t("p",[s._v("我们看到依旧会报错：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/11/16dbb13b3680b13a?w=480&h=193&f=png&s=35518",alt:"2019-07-05-11-56-45"}})]),s._v(" "),t("p",[s._v("其实这个时候我们需要一个函数，将 "),t("code",[s._v("defaultProps")]),s._v(" 中已经声明值的属性从『可选类型』转化为『非可选类型』。")]),s._v(" "),t("p",[s._v("我们先看这么一个函数:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const createPropsGetter = <DP extends object>(defaultProps: DP) => {\n    return <P extends Partial<DP>>(props: P) => {\n        type PropsExcludingDefaults = Omit<P, keyof DP>\n        type RecomposedProps = DP & PropsExcludingDefaults\n\n        return (props as any) as RecomposedProps\n    }\n}\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("这个函数接受一个 "),t("code",[s._v("defaultProps")]),s._v(" 对象，"),t("code",[s._v("<DP extends object>")]),s._v(" 这里是泛型约束，代表 "),t("code",[s._v("DP")]),s._v(" 这个泛型是个对象，然后返回一个匿名函数。")]),s._v(" "),t("p",[s._v("再看这个匿名函数，此函数也有一个泛型 "),t("code",[s._v("P")]),s._v(",这个泛型 "),t("code",[s._v("P")]),s._v(" 也被约束过,即 "),t("code",[s._v("<P extends Partial<DP>>")]),s._v("，意思就是这个泛型必须包含可选的 "),t("code",[s._v("DP")]),s._v(" 类型（实际上这个泛型P就是组件传入的 Props 类型）。")]),s._v(" "),t("p",[s._v("接着我们看类型别名 "),t("code",[s._v("PropsExcludingDefaults")]),s._v("，看这个名字你也能猜出来，它的作用其实是剔除 "),t("code",[s._v("Props")]),s._v(" 类型中关于 "),t("code",[s._v("defaultProps")]),s._v(" 的部分，很多人可能不清楚 "),t("code",[s._v("Omit")]),s._v(" 这个高级类型的用法，其实就是一个语法糖：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("type Omit<P, keyof DP> = Pick<P, Exclude<keyof P, keyof DP>>\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("而类型别名 "),t("code",[s._v("RecomposedProps")]),s._v(" 则是将默认属性的类型 "),t("code",[s._v("DP")]),s._v(" 与剔除了默认属性的 "),t("code",[s._v("Props")]),s._v(" 类型结合在一起。")]),s._v(" "),t("p",[s._v("其实这个函数只做了一件事，把可选的 "),t("code",[s._v("defaultProps")]),s._v(" 的类型剔除后，加入必选的 "),t("code",[s._v("defaultProps")]),s._v(" 的类型，从而形成一个新的 "),t("code",[s._v("Props")]),s._v(" 类型，这个 "),t("code",[s._v("Props")]),s._v(" 类型中的 "),t("code",[s._v("defaultProps")]),s._v(" 相关属性就变成了必选的。")]),s._v(" "),t("blockquote",[t("p",[s._v("这个函数可能对于初学者理解上有一定难度，但是这些内容的确我们已经在高级类型那一个章节都见过了，这算是一次综合应用。")])]),s._v(" "),t("p",[s._v("完整代码如下：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import * as React from 'react'\n\ninterface State {\n    itemText: string\n}\n\ntype Props = {\n    handleSubmit: (value: string) => void\n    children: React.ReactNode\n} & Partial<typeof todoInputDefaultProps>\n\nconst todoInputDefaultProps = {\n    inputSetting: {\n        maxlength: 20,\n        placeholder: '请输入todo',\n    }\n}\n\nexport const createPropsGetter = <DP extends object>(defaultProps: DP) => {\n    return <P extends Partial<DP>>(props: P) => {\n        type PropsExcludingDefaults = Omit<P, keyof DP>\n        type RecomposedProps = DP & PropsExcludingDefaults\n\n        return (props as any) as RecomposedProps\n    }\n}\n\nconst getProps = createPropsGetter(todoInputDefaultProps)\n\nexport class TodoInput extends React.Component<Props, State> {\n\n    public static defaultProps = todoInputDefaultProps\n\n    constructor(props: Props) {\n        super(props)\n        this.state = {\n            itemText: ''\n        }\n    }\n\n    public render() {\n        const { itemText } = this.state\n        const { updateValue, handleSubmit } = this\n        const { inputSetting } = getProps(this.props)\n\n        return (\n            <form onSubmit={handleSubmit} >\n                <input maxLength={inputSetting.maxlength} type='text' value={itemText} onChange={updateValue} />\n                <button type='submit' >添加todo</button>\n            </form>\n        )\n    }\n\n    private updateValue(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({ itemText: e.target.value })\n    }\n\n    private handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault()\n        if (!this.state.itemText.trim()) {\n            return\n        }\n\n        this.props.handleSubmit(this.state.itemText)\n        this.setState({itemText: ''})\n    }\n\n}\n\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br")])]),t("h2",{attrs:{id:"高阶组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#高阶组件"}},[s._v("#")]),s._v(" 高阶组件")]),s._v(" "),t("p",[s._v("关于在 TypeScript 如何使用 HOC 一直是一个难点，我们在这里就介绍一种比较常规的方法。")]),s._v(" "),t("p",[s._v("我们继续来看 "),t("code",[s._v("TodoInput")]),s._v(" 这个组件，其中我们一直在用 "),t("code",[s._v("inputSetting")]),s._v(" 来自定义 "),t("code",[s._v("input")]),s._v(" 的属性，现在我们需要用一个 HOC 来包装 "),t("code",[s._v("TodoInput")]),s._v(" ，其作用就是用高阶组件向 "),t("code",[s._v("TodoInput")]),s._v(" 注入 props。")]),s._v(" "),t("p",[s._v("我们的高阶函数如下:")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import * as hoistNonReactStatics from 'hoist-non-react-statics'\nimport * as React from 'react'\n\ntype InjectedProps = Partial<typeof hocProps>\n\nconst hocProps = {\n    inputSetting: {\n        maxlength: 30,\n        placeholder: '请输入待办事项',\n    }\n}\n\nexport const withTodoInput = <P extends InjectedProps>(\n  UnwrappedComponent: React.ComponentType<P>,\n) => {\n  type Props = Omit<P, keyof InjectedProps>\n\n  class WithToggleable extends React.Component<Props> {\n\n    public static readonly UnwrappedComponent = UnwrappedComponent\n\n    public render() {\n\n      return (\n        <UnwrappedComponent\n        inputSetting={hocProps}\n        {...this.props as P}\n        />\n      );\n    }\n  }\n\n  return hoistNonReactStatics(WithToggleable, UnwrappedComponent)\n}\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br")])]),t("p",[s._v("如果你搞懂了上一小节的内容，这里应该没有什么难度。")]),s._v(" "),t("p",[s._v("这里我们的 P 表示传递到 HOC 的组件的 props，"),t("code",[s._v("React.ComponentType<P>")]),s._v(" 是 "),t("code",[s._v("React.FunctionComponent<P> | React.ClassComponent<P>")]),s._v(" 的别名，表示传递到HOC的组件可以是类组件或者是函数组件。")]),s._v(" "),t("p",[s._v("其余的地方 "),t("code",[s._v("Omit")]),s._v(" "),t("code",[s._v("as P")]),s._v(" 等都是讲过的内容，读者可以自行理解，我们不再像上一小节那样一行行解释了。")]),s._v(" "),t("p",[s._v("只需要这样使用：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const HOC = withTodoInput<Props>(TodoInput)\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),t("p",[s._v("我们通过两个章节学习了 React 与组件相关的用法，虽然这两节信息量很大，但是如果你理解了，以后的学习就会很简单，因为这里的确用了一部分高级类型，高级类型的运用与理解算是 TypeScript 学习的第一道坎。")])])}),[],!1,null,null,null);n.default=a.exports}}]);