(window.webpackJsonp=window.webpackJsonp||[]).push([[172],{655:function(e,s,t){"use strict";t.r(s);var n=t(59),a=Object(n.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"实战-编写-javascript-库编写声明文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实战-编写-javascript-库编写声明文件"}},[e._v("#")]),e._v(" 实战:编写 JavaScript 库编写声明文件")]),e._v(" "),t("p",[e._v("本节我们正式开始声明文件的编写实战,因此我们得找一个没有 "),t("code",[e._v("d.ts")]),e._v(" 声明的开源库,比较常用但是却用纯 js 编写的库我想到了 "),t("code",[e._v("events")]),e._v(",这个库就是 Node.js 中 "),t("code",[e._v("events")]),e._v(" 模块的浏览器和 node 通用版,具体的 API 可见 "),t("a",{attrs:{href:"https://nodejs.org/api/events.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("EventEmitter"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h2",{attrs:{id:"搭建环节"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搭建环节"}},[e._v("#")]),e._v(" 搭建环节")]),e._v(" "),t("p",[e._v("我们先把库从 github 上克隆下来")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git clone https://github.com/Gozala/events.git && events && npm i\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("h2",{attrs:{id:"如何入手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何入手"}},[e._v("#")]),e._v(" 如何入手")]),e._v(" "),t("p",[e._v("在根目录下新建一个文件 "),t("code",[e._v("index.d.ts")]),e._v("，我们的声明文件就在这里编写。")]),e._v(" "),t("p",[e._v("为 js 库编写 "),t("code",[e._v("d.ts")]),e._v(" 需要我们从两方面入手，一个就是官方的 API 文档，另一个就是库的源码。")]),e._v(" "),t("p",[t("code",[e._v("events")]),e._v("库的API与 Node.js 10.1 的API是一样的,所以我们可以结合Node 10.x的"),t("a",{attrs:{href:"https://nodejs.org/docs/latest-v10.x/api/events.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("文档"),t("OutboundLink")],1),e._v("编码.")]),e._v(" "),t("p",[e._v("不管是从文档 api 的使用方式还是项目本身的源码都表明，我们主要在使用 "),t("code",[e._v("events")]),e._v(" 库暴露出来的一个类 "),t("code",[e._v("EventEmitter")]),e._v(".")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var EventEmitter = require('events')\n\nvar ee = new EventEmitter()\nee.on('message', function (text) {\n  console.log(text)\n})\nee.emit('message', 'hello world')\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("p",[e._v("因此我们要先声明一个类并导出:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("export class EventEmitter {\n\n}\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("p",[e._v("然后我们继续读官方文档，看看这个类暴露出了哪些方法或者属性:")]),e._v(" "),t("h2",{attrs:{id:"静态属性-方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态属性-方法"}},[e._v("#")]),e._v(" 静态属性/方法")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/11/16dbb158f633ffc4?w=665&h=623&f=png&s=87918",alt:"events的文档"}})]),e._v(" "),t("p",[e._v("我们先从最简单的入手，通过文档我们发现这个类暴露出了一个 "),t("code",[e._v("EventEmitter.defaultMaxListeners")]),e._v(" 静态属性，通常情况下我们的事件最多注册10个监听器，但是我们可以通过改变 "),t("code",[e._v("EventEmitter.defaultMaxListeners")]),e._v(" 来修改这个默认值，很显然这是个 "),t("code",[e._v("number")]),e._v(" 类型的静态属性。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("export class EventEmitter {\n  static defaultMaxListeners: number;\n\n}\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("p",[e._v("除此之外，该类还有一个被"),t("strong",[e._v("废弃")]),e._v("的静态方法就是 "),t("code",[e._v("EventEmitter.listenerCount(emitter, type)")]),e._v("，返回指定事件的监听器数量，虽然已经被废弃了，但是官方依然没有删除此方法，因此我们也需要为他编写类型:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("export class EventEmitter {\n  static defaultMaxListeners: number;\n  static listenerCount(emitter: EventEmitter, type: string | number): number;\n}\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("h2",{attrs:{id:"实例属性-方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例属性-方法"}},[e._v("#")]),e._v(" 实例属性/方法")]),e._v(" "),t("p",[e._v("我们发现这个类暴露出来的实例方法多达15个，这个时候不要着急去编码，我们得先观察一下这些方法是不是有一些共同的类型，我们先定义出来，否则会重复写很多类型，这也是大家之后编写 "),t("code",[e._v("d.ts")]),e._v(" 文件要注意的地方之一。")]),e._v(" "),t("p",[e._v("共同类型一: "),t("code",[e._v("type")]),e._v("，指事件的名称，注意这里 "),t("code",[e._v("events")]),e._v(" 库的表示事件名称的参数名称与node官方不一样，在node官方文档中是 "),t("code",[e._v("eventName")]),e._v("，大家知道 "),t("code",[e._v("events")]),e._v(" 库中的 "),t("code",[e._v("type")]),e._v(" 其实就是官方文档的 "),t("code",[e._v("eventName")]),e._v(" 就行了，都是指"),t("strong",[e._v("事件名称")]),e._v("。")]),e._v(" "),t("p",[e._v("这个 "),t("code",[e._v("type")]),e._v(" 的类型既可以是 "),t("code",[e._v("string")]),e._v(" 又可以是 "),t("code",[e._v("symbol")]),e._v("。")]),e._v(" "),t("p",[e._v("共同类型二: "),t("code",[e._v("listener")]),e._v("，指事件回调函数，往往作为某事件触发的回调函数:")]),e._v(" "),t("p",[e._v("我们可以先把这两个需要反复使用的类型声明出来:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("\ntype Type = string | symbol\ntype Listener = (...args: any[]) => void;\n\nexport class EventEmitter {\n  static defaultMaxListeners: number;\n  static listenerCount(emitter: EventEmitter, type: Type): number;\n}\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br")])]),t("p",[e._v("接下来的情况就简单多了，我们根据文档把实例方法的类型定义出来即可:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("export type Listener = (...args: any[]) => void;\nexport type Type = string | symbol\n\nexport class EventEmitter {\n  static listenerCount(emitter: EventEmitter, type: Type): number;\n  static defaultMaxListeners: number;\n\n  eventNames(): Array<Type>;\n  setMaxListeners(n: number): this;\n  getMaxListeners(): number;\n  emit(type: Type, ...args: any[]): boolean;\n  addListener(type: Type, listener: Listener): this;\n  on(type: Type, listener: Listener): this;\n  once(type: Type, listener: Listener): this;\n  prependOnceListener(type: Type, listener: Listener): this;\n  removeListener(type: Type, listener: Listener): this;\n  off(type: Type, listener: Listener): this;\n  removeAllListeners(type?: Type): this;\n  listeners(type: Type): Listener[];\n  listenerCount(type: Type): number;\n  prependListener(type: Type, listener: Listener): this;\n  rawListeners(type: Type): Listener[];\n}\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br")])]),t("h2",{attrs:{id:"使用体验"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用体验"}},[e._v("#")]),e._v(" 使用体验")]),e._v(" "),t("p",[e._v("我已经把定义好的 "),t("code",[e._v("d.ts")]),e._v(" 连同 "),t("code",[e._v("events")]),e._v(" 发不到了 npm 上,npm 名称为 "),t("code",[e._v("xiaomuzhu-events")]),e._v("。")]),e._v(" "),t("p",[e._v("我们新建一个TS项目,然后下载 "),t("code",[e._v("xiaomuzhu-events")]),e._v(" 包:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm i -S xiaomuzhu-events\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("然后开始正常编码,使用过程很流畅,有完整的类型提示和报错")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/11/16dbb158f703344e?w=600&h=491&f=png&s=63619",alt:"类型提示"}})]),e._v(" "),t("p",[e._v("至此我们的声明文件编写就完毕了。")]),e._v(" "),t("h2",{attrs:{id:"小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[e._v("#")]),e._v(" 小结")]),e._v(" "),t("p",[t("code",[e._v("events")]),e._v(" 库相对比较简单，我们也算是抛砖引玉，如果想进一步学习如何编写声明文件，可以移步"),t("a",{attrs:{href:"https://github.com/DefinitelyTyped/DefinitelyTyped",target:"_blank",rel:"noopener noreferrer"}},[e._v("DefinitelyTyped"),t("OutboundLink")],1),e._v("，那里有非常多的案例值得学习。")])])}),[],!1,null,null,null);s.default=a.exports}}]);