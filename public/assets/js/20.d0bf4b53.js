(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{374:function(s,e,a){"use strict";a.r(e);var v=a(42),r=Object(v.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("【转载】公众号: 小哈学Java，专注分享Java领域干货文章分享")]),s._v(" "),a("p",[s._v("小哈今天给大家分享的主题是，如何通过 Docker 快速搭建各种测试环境，本文列举的，也是小哈在工作中经常用到的，其中包括 Mysql, Redis, Elasticsearch, MongoDB 安装步骤, 通过几行命令秒秒钟就能轻松搞定。")]),s._v(" "),a("p",[s._v("友情提示：搭建之前，你需要先安装 Docker 哟，本文基于您已经安装好 Docker 的基础上！")]),s._v(" "),a("p",[s._v("废话少说，正文开始！")]),s._v(" "),a("p",[s._v("目录")]),s._v(" "),a("p",[s._v("一、镜像加速")]),s._v(" "),a("p",[s._v("二、快速安装&搭建 Mysql 环境")]),s._v(" "),a("p",[s._v("三、快速安装&搭建 Redis 环境")]),s._v(" "),a("p",[s._v("四、快速安装&搭建 MongDB 环境")]),s._v(" "),a("p",[s._v("五、快速安装&搭建 Elasticsearch 环境")]),s._v(" "),a("p",[s._v("六、总结")]),s._v(" "),a("p",[s._v("一、镜像加速")]),s._v(" "),a("p",[s._v("Docker 默认是从官方镜像地址 Docker Hub 下下载镜像，由于服务器在国外的缘故，导致经常下载速度非常慢。为了提升镜像的下载速度，我们可以手动配置国内镜像加速器，让下载速度飚起来。")]),s._v(" "),a("p",[s._v("国内的镜像加速器选项较多，如：阿里云，DaoCloud 等。")]),s._v(" "),a("p",[s._v("本文主要说说如何配置阿里云的镜像加速器。")]),s._v(" "),a("p",[s._v("2.1 登录阿里云获取加速信息")]),s._v(" "),a("p",[s._v("首先你需要注册一个阿里云账号，没有的话，通过下面的连接跳转注册：")]),s._v(" "),a("p",[s._v("https://dev.aliyun.com/")]),s._v(" "),a("p",[s._v("跳转镜像加速页 https://cr.console.aliyun.com/，获取加速配置信息：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/18287449-2629ce90d57c7b29.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}}),s._v("\n2.2 配置 Docker")]),s._v(" "),a("p",[s._v("2.2.1 确定 Docker Client 版本")]),s._v(" "),a("p",[s._v("在配置之前，首先需要确定 Docker Client 的版本，推荐是 1.10.0+:\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/18287449-3146e7d88b45ac8d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),s._v(" "),a("p",[s._v("2.2.2 配置镜像加速器")]),s._v(" "),a("p",[s._v("PS: 这里以 CentOS 系统为例，如果你是别的系统，可以参考阿里云配置加速器官方文档。")]),s._v(" "),a("p",[s._v("通过修改 daemon 配置文件 /etc/docker/daemon.json 来使用加速器：")]),s._v(" "),a("p",[s._v("执行下面命令：")]),s._v(" "),a("p",[s._v("sudo mkdir -p /etc/docker")]),s._v(" "),a("p",[s._v("sudo tee /etc/docker/daemon.json <<-'EOF'")]),s._v(" "),a("p",[s._v("{")]),s._v(" "),a("p",[s._v('"registry-mirrors": ["https://bjtzu1jb.mirror.aliyuncs.com"]')]),s._v(" "),a("p",[s._v("}")]),s._v(" "),a("p",[s._v("EOF")]),s._v(" "),a("p",[s._v("sudo systemctl daemon-reload")]),s._v(" "),a("p",[s._v("sudo systemctl restart docker")]),s._v(" "),a("p",[s._v("2.3 验证一下速度")]),s._v(" "),a("p",[s._v("以下载 mongodb 为例，看下速度：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/18287449-1bf7001d7553f58e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}}),s._v("\n配置了加速器过后，速度终于飚起来了。")]),s._v(" "),a("p",[s._v("二、快速安装&搭建 Mysql 环境\n本节中，我们将学习如何通过 Docker 快速安装与搭建 Mysql 环境。")]),s._v(" "),a("p",[s._v("2.1 下载 Mysql 镜像\n这里以 Mysql 5.7 为例：")]),s._v(" "),a("p",[s._v("docker pull mysql:5.7")]),s._v(" "),a("p",[s._v("下载完成后，通过 docker images 检查一下镜像是否下载成功:\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/18287449-bc03bf54390e6ab5.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),s._v(" "),a("p",[s._v("2.2 先以最简单方式启动\n先以简单的方式启动：")]),s._v(" "),a("p",[s._v("docker run -d \\")]),s._v(" "),a("p",[s._v("--name mysql \\")]),s._v(" "),a("p",[s._v("-p 3306:3306 \\")]),s._v(" "),a("p",[s._v("-e MYSQL_ROOT_PASSWORD=123456 \\")]),s._v(" "),a("p",[s._v("mysql:5.7")]),s._v(" "),a("p",[s._v("-d：以后台的方式运行；")]),s._v(" "),a("p",[s._v("--name mysql：指定容器的名称为 mysql;")]),s._v(" "),a("p",[s._v("-p 3306:3306 将容器的 3306 端口挂载到宿主机的 3306 端口上；")]),s._v(" "),a("p",[s._v("-e MYSQL_ROOT_PASSWORD=123456：指定 root 的密码为 123456")]),s._v(" "),a("p",[s._v("命令执行完成后，你也可以通过 docker ps命令来确认下容器是否启动成功。若成功，我们需要将容器中的目录文件复制到宿主机中，分别包括：")]),s._v(" "),a("p",[s._v("mysql 配置文件；")]),s._v(" "),a("p",[s._v("数据存储目录，以便挂载(PS: 若不挂载到宿主机，每次启动容器数据都会丢失)")]),s._v(" "),a("h1",{attrs:{id:"将容器中的-mysql-配置文件复制到宿主机中指定路径下，路径你可以根据需要，自行修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将容器中的-mysql-配置文件复制到宿主机中指定路径下，路径你可以根据需要，自行修改"}},[s._v("#")]),s._v(" 将容器中的 mysql 配置文件复制到宿主机中指定路径下，路径你可以根据需要，自行修改")]),s._v(" "),a("p",[s._v("docker cp mysql:/etc/mysql/mysql.conf.d/mysqld.cnf /usr/local/docker/mysql/config")]),s._v(" "),a("h1",{attrs:{id:"将容器中的-mysql-存储目录复制到宿主机中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将容器中的-mysql-存储目录复制到宿主机中"}},[s._v("#")]),s._v(" 将容器中的 mysql 存储目录复制到宿主机中")]),s._v(" "),a("p",[s._v("docker cp mysql:/var/lib/mysql/ /usr/local/docker/mysql/data")]),s._v(" "),a("p",[s._v("完成这一切后，让我们将刚刚运行的容器删除掉。")]),s._v(" "),a("p",[s._v("docker rm -f mysql")]),s._v(" "),a("p",[s._v("PS: mysql 是我们运行容器时，指定的名称，当然，你也可以先执行 docker ps, 通过容器 ID 来删除。")]),s._v(" "),a("p",[s._v("2.3 正式运行 Mysql 容器\n接下来，正式运行 Mysql 容器：")]),s._v(" "),a("p",[s._v("docker run -d--name mysql-p3306:3306-v /usr/local/docker/mysql/config/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf-v /usr/local/docker/mysql/data/mysql:/var/lib/mysql-eMYSQL_ROOT_PASSWORD=123456\\mysql:5.7")]),s._v(" "),a("p",[s._v("其他不变，额外添加了两个挂载子命令：")]),s._v(" "),a("p",[s._v("-v /usr/local/docker/mysql/config/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf: 将容器中 /etc/mysql/mysql.conf.d/mysqld.cnf 配置文件挂载到宿主机的 /usr/local/docker/mysql/config/mysqld.cnf 文件上；")]),s._v(" "),a("p",[s._v("-v /usr/local/docker/mysql/data:/var/lib/mysql: 将容器中 /var/lib/mysql 数据目录挂载到宿主机的 /usr/local/docker/mysql/data 目录下；")]),s._v(" "),a("p",[s._v("执行命令完成后，查看下容器是否启动：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/18287449-22d3c9513f9f882a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}}),s._v("\n可以看到，容器运行成功")]),s._v(" "),a("p",[s._v("2.4 通过 Mysql 客户端连接一下试试\n通过 MySQL 客户端连接刚刚创建的 mysql, 看看能否连接成功：\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/18287449-64a07b89f67f590a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),s._v(" "),a("p",[s._v("连接成功了！")]),s._v(" "),a("p",[s._v("三、快速安装&搭建 Redis 环境\n本节中，我们将学习如何利用 Docker 安装&搭建 Redis 环境。")]),s._v(" "),a("p",[s._v("3.1 下载 Redis 镜像\n首先拉取 Redis 镜像, 这里我选择的是 redis:latest ：")]),s._v(" "),a("p",[s._v("docker pull redis:latest")]),s._v(" "),a("p",[s._v("下载完成后，通过 docker images 确认镜像是否已经下载到本地：")]),s._v(" "),a("p",[s._v("3.2 运行 Redis 容器")]),s._v(" "),a("p",[s._v("docker run -p 6379:6379 --name redis -v /usr/local/docker/redis/redis.conf:/etc/redis/redis.conf -v /usr/local/docker/redis/data:/data -d redis:latest redis-server /etc/redis/redis.conf --appendonly yes")]),s._v(" "),a("p",[s._v("命令说明：")]),s._v(" "),a("p",[s._v("-p 6379:6379: 将容器的 6379 端口映射到宿主机的 6379 端口；")]),s._v(" "),a("p",[s._v("-v /usr/local/docker/redis/data:/data : 将容器中的 /data 数据存储目录, 挂载到宿主机中 /usr/local/docker/redis/data 目录下；")]),s._v(" "),a("p",[s._v("-v /usr/local/docker/redis/redis.conf:/etc/redis/redis.conf ： 将容器中 /etc/redis/redis.conf 配置文件，挂载到宿主机的 /usr/local/docker/redis/redis.conf 文件上；")]),s._v(" "),a("p",[s._v("redis-server --appendonly yes: 在容器执行 redis-server 启动命令，并打开 redis 持久化配置;")]),s._v(" "),a("p",[s._v("命令运行完成后，查看容器是否启动成功：docker ps")]),s._v(" "),a("p",[s._v("可以看到 redis 容器已经启动成功了！")]),s._v(" "),a("p",[s._v("3.3 连接刚刚创建好的容器\n执行如下命令，连接 redis：")]),s._v(" "),a("p",[s._v("docker run -it redis:latest redis-cli -h 172.17.0.1\nCould not connect to Redis at 172.17.0.1:6379: No route to host")]),s._v(" "),a("p",[s._v("3.4 ，之前的没成功。最后没有持久化地这么两句执行好用。\ndocker run --name rdb -p 6379:6379 redis")]),s._v(" "),a("p",[s._v("docker exec -it rdb redis-cli")]),s._v(" "),a("p",[s._v("四、快速安装&搭建 MongDB 环境\n本节中，我们将学习如何通过 Docker 快速安装与搭建 MongoDB 环境。")]),s._v(" "),a("p",[s._v("4.1 下载 MongoDB 镜像\n这里以 mongo 4 版本为例，下载镜像：")]),s._v(" "),a("p",[s._v("docker pull mongo:4")]),s._v(" "),a("p",[s._v("下载完成后，确认一下镜像是否下载成功:\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/18287449-e0945e67d7d768e2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),s._v(" "),a("p",[s._v("4.2 运行 MongoDB 镜像\n下载成功后，运行 mongoDB 镜像：")]),s._v(" "),a("p",[s._v("docker run -d --name mongo -v /usr/local/docker/mongo/configdb:/data/configdb -v   /usr/local/docker/mongo/data:/data/db  -p 27017:27017  mongo:4  --auth")]),s._v(" "),a("p",[s._v("-d: 以后台的方式运行；\n--name mongo: 指定容器名称为 mongo;\n-v /usr/local/docker/mongo/configdb:/data/configdb: 将容器中 /data/configdb 目录挂载到宿主机的 /usr/local/docker/mongo/configdb 目录下；")]),s._v(" "),a("p",[s._v("-v /usr/local/docker/mongo/data:/data/db: 将容器中 /data/db 数据目录挂载到宿主机的 /usr/local/docker/mongo/data 目录下；")]),s._v(" "),a("p",[s._v("-p 27017:27017: 将容器的 27017 端口映射到宿主机的 27017 端口；")]),s._v(" "),a("p",[s._v("执行命令完成后，查看下容器是否启动：\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/18287449-600c8490a4597c19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),s._v(" "),a("p",[s._v("4.3 添加管理员账号\n执行命令：\ndockerexec-it mongo mongo admin")]),s._v(" "),a("p",[s._v("然后，创建一个拥有最高权限 root 账号:")]),s._v(" "),a("p",[s._v("db.createUser({ user: 'admin', pwd: '123456', roles: [ { role: \"root\", db: \"admin\" } ] });")]),s._v(" "),a("p",[s._v("创建成功后，你会看到 Successfully added user:\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/18287449-cbcfea053bf306a7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),s._v(" "),a("p",[s._v("4.4 用新创建的 root 账户连接，测试一下\ndocker run -it --rm --link mongo:mongo mongo mongo -u admin -p123456--authenticationDatabase admin mongo/admin")]),s._v(" "),a("p",[s._v("连接成功后，我们可以执行相关 sql：")]),s._v(" "),a("p",[s._v("显示所有的数据库：")]),s._v(" "),a("p",[s._v("showdbs")]),s._v(" "),a("p",[s._v("使用某个数据库：")]),s._v(" "),a("p",[s._v("useadmin\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/18287449-9b59b7a2ac4cd073.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),s._v(" "),a("p",[s._v("输入命令 exit，退出连接！")]),s._v(" "),a("p",[s._v("五、快速安装&搭建 Elasticsearch 环境\n本节中，我们将学习如何通过 Docker 快速安装与搭建 Elasticsearch 环境。")]),s._v(" "),a("p",[s._v("5.1 下载 Elasticsearch 镜像\n这里以 Elasticsearch 6.5.0 为快速安装&搭建 Elasticsearch 环境例：\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/18287449-83c3a9736befa77d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}}),s._v("\ndocker pull elasticsearch:6.5.0")]),s._v(" "),a("p",[s._v("下载完成后，通过 docker images 检查一下镜像是否下载成功:")]),s._v(" "),a("p",[s._v("5.2 先简单运行 Elasticsearch 镜像\n下载成功后，简单运行 Elasticsearch 镜像：")]),s._v(" "),a("p",[s._v("docker run -d \\")]),s._v(" "),a("p",[s._v("--name es \\")]),s._v(" "),a("p",[s._v("-p 9200:9200 -p 9300:9300 \\")]),s._v(" "),a("p",[s._v('-e "discovery.type=single-node" -e ES_JAVA_OPTS="-Xms200m -Xmx200m" \\')]),s._v(" "),a("p",[s._v("elasticsearch:6.5.0")]),s._v(" "),a("p",[s._v("-d：以后台的方式运行；")]),s._v(" "),a("p",[s._v("--name es：指定容器的名称为 es;")]),s._v(" "),a("p",[s._v("-p 9200:9200 -p 9300:9300 将容器的 9200、9300 端口挂载到宿主机的 9200、9300 端口上；")]),s._v(" "),a("p",[s._v('-e "discovery.type=single-node" -e ES_JAVA_OPTS="-Xms200m -Xmx200m"：指定为单节点模式，JVM 内存占用 200m')]),s._v(" "),a("p",[s._v("命令执行完成后，你也可以通过 docker ps命令来确认下容器是否启动成功。\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/18287449-7c06d9e48d266064.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),s._v(" "),a("p",[s._v("可以看到 es 容器运行成功了，接下来，进入容器中：")]),s._v(" "),a("p",[s._v("docker exec -it es /bin/bash")]),s._v(" "),a("p",[s._v("安装 analysis-ik 中文分词插件：")]),s._v(" "),a("p",[s._v("./bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.5.0/elasticsearch-analysis-ik-6.5.0.zip")]),s._v(" "),a("p",[s._v("PS: es 从 v5.5.1 版本开始支持自带的 es 插件命令来安装，如果你安装的版本不是 6.5.0，需要将命令中的版本号修改一下，具体参考 https://github.com/medcl/elasticsearch-analysis-ik")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/18287449-5a3668f23a67889c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}}),s._v("\n安装成功后，退出容器：")]),s._v(" "),a("p",[s._v("exit")]),s._v(" "),a("p",[s._v("删除刚刚运行的容器：")]),s._v(" "),a("p",[s._v("docker rm -f es")]),s._v(" "),a("p",[s._v("PS: 当然了，你也可以通过容器的 ID 来删除。")]),s._v(" "),a("p",[s._v("5.3 复制相关文件")]),s._v(" "),a("h1",{attrs:{id:"复制-es-配置文件目录到宿主机指定目录，目标目录你可以根据需要，自行修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复制-es-配置文件目录到宿主机指定目录，目标目录你可以根据需要，自行修改"}},[s._v("#")]),s._v(" 复制 es 配置文件目录到宿主机指定目录，目标目录你可以根据需要，自行修改")]),s._v(" "),a("p",[s._v("docker cp es:/usr/share/elasticsearch/config /usr/local/docker/es")]),s._v(" "),a("h1",{attrs:{id:"复制-es-持久化数据目录到宿主机指定目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复制-es-持久化数据目录到宿主机指定目录"}},[s._v("#")]),s._v(" 复制 es 持久化数据目录到宿主机指定目录")]),s._v(" "),a("p",[s._v("docker cp es:/usr/share/elasticsearch/data /usr/local/docker/es")]),s._v(" "),a("h1",{attrs:{id:"复制-es-插件目录到宿主机指定目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复制-es-插件目录到宿主机指定目录"}},[s._v("#")]),s._v(" 复制 es 插件目录到宿主机指定目录")]),s._v(" "),a("p",[s._v("docker cp es:/usr/share/elasticsearch/plugins /usr/local/docker/es")]),s._v(" "),a("p",[s._v("5.4 修改 es 相关配置\n进入我们刚刚指定的 config 配置目录，修改 jvm.options 文件：")]),s._v(" "),a("p",[s._v("-Xms300m")]),s._v(" "),a("p",[s._v("-Xmx300m")]),s._v(" "),a("p",[s._v("PS: 因为小哈测试服务器就 2G 内存，这里我改成了 JVM 内存占用 300m, 如果你的内存够用，可不用改。")]),s._v(" "),a("p",[s._v("修改 elasticsearch.yml文件, 添加如下配置：")]),s._v(" "),a("p",[s._v("node.name: master")]),s._v(" "),a("p",[s._v("http.cors.enabled: true")]),s._v(" "),a("p",[s._v('http.cors.allow-origin: "*"')]),s._v(" "),a("p",[s._v("解释一下添加的配置，设置节点为 master 节点，并允许跨域访问，以便后面使用 head 插件图形化界面访问。")]),s._v(" "),a("p",[s._v("5.5 运行 Elasticsearch 容器\ndocker run -d \\")]),s._v(" "),a("p",[s._v("--name es \\")]),s._v(" "),a("p",[s._v("-p 9200:9200 -p 9300:9300 \\")]),s._v(" "),a("p",[s._v("-v /usr/local/docker/es/config:/usr/share/elasticsearch/config \\")]),s._v(" "),a("p",[s._v("-v /usr/local/docker/es/data:/usr/share/elasticsearch/data \\")]),s._v(" "),a("p",[s._v("-v /usr/local/docker/es/plugins:/usr/share/elasticsearch/plugins \\")]),s._v(" "),a("p",[s._v("elasticsearch:6.5.0")]),s._v(" "),a("p",[s._v("这次，我们额外添加了相关挂载命令：")]),s._v(" "),a("p",[s._v("-v /usr/local/docker/es/config:/usr/share/elasticsearch/config: 将容器中的 /usr/share/elasticsearch/config 配置目录挂载到宿主机的 /usr/local/docker/es/config 目录下；")]),s._v(" "),a("p",[s._v("-v /usr/local/docker/es/data:/usr/share/elasticsearch/data： 将容器中的 /usr/share/elasticsearch/data 数据目录挂载到宿主机的 /usr/local/docker/es/data 目录下；")]),s._v(" "),a("p",[s._v("-v /usr/local/docker/es/plugins:/usr/share/elasticsearch/plugins：将容器中的 /usr/share/elasticsearch/plugins 插件目录挂载到宿主机的 /usr/local/docker/es/plugins 目录下；")]),s._v(" "),a("p",[s._v("5.6 测试一下，瞅瞅 es 是否能够正常访问\n测试一下，看 es 是否启动成功：")]),s._v(" "),a("p",[s._v("curl http://localhost:9200\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/18287449-ee4f95121e375ed1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),s._v(" "),a("p",[s._v("OK, 到此 es 的单节点环境就搭建好了！")]),s._v(" "),a("p",[s._v("六、总结\n好了，到这里，小哈就已经把常用的测试环境搭建介绍完毕了。如果你还有啥疑问，不妨后台私信我！哈哈，祝您看完本文有所收获！")])])}),[],!1,null,null,null);e.default=r.exports}}]);