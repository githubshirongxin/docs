(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{564:function(s,e,t){"use strict";t.r(e);var n=t(59),a=Object(n.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1-services"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-services"}},[s._v("#")]),s._v(" 1. Services")]),s._v(" "),t("p",[s._v("通过部署，可以轻松创建一组可以动态缩放，更新和替换的副本容器。但是，很难为其他组件提供对这些容器的网络访问。服务提供了解决此问题的抽象层。客户端可以简单地访问服务，该服务可以动态代理到当前副本集的流量。在本课程中，我们将讨论服务，并演示如何创建一个公开部署的副本容器的服务。\n"),t("img",{attrs:{src:"/docs/images/2020-09-14-09-01-00.png",alt:""}}),s._v(" "),t("img",{attrs:{src:"/docs/images/2020-09-14-09-01-29.png",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"相关文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相关文件"}},[s._v("#")]),s._v(" 相关文件")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://kubernetes.io/docs/concepts/services-networking/service/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://kubernetes.io/docs/concepts/services-networking/service/"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://kubernetes.io/docs/tutorials/kubernetes-basics/expose/expose-intro/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://kubernetes.io/docs/tutorials/kubernetes-basics/expose/expose-intro/"),t("OutboundLink")],1)])]),s._v(" "),t("h3",{attrs:{id:"课程参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#课程参考"}},[s._v("#")]),s._v(" 课程参考")]),s._v(" "),t("p",[s._v("创建部署：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.7.9\n        ports:\n        - containerPort: 80\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("p",[s._v("使用服务公开部署的副本容器：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("apiVersion: v1\nkind: Service\nmetadata:\n  name: my-service\nspec:\n  type: ClusterIP\n  selector:\n    app: nginx\n  ports:\n  - protocol: TCP\n    port: 8080\n    targetPort: 80\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("您可以使用以下命令获取有关该服务的更多信息：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("kubectl get svc\nkubectl get endpoints my-service\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"疑问："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#疑问："}},[s._v("#")]),s._v(" 疑问：")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("1.1 Service和Deployment的区别？")]),s._v(" "),t("ul",[t("li",[s._v("depoyment负责保持一组Pod运行。")]),s._v(" "),t("li",[s._v("service负责启用对一组Pod的网络访问")]),s._v(" "),t("li",[s._v("depoyment就是用容器镜像创的实例，")]),s._v(" "),t("li",[s._v("service负责访问这些实例，可以将deployment的端口通过端口暴露给其它服务或外界网络。")])])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("1.2 【各种端口】port、targetPort是什么？")]),s._v(" "),t("p",[s._v("nodePort（外部用),port（内部用）,容器的端口（最终的流量端口）")])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("1.3 【各种IP】nodeIp,PodIp,ClusterIp什么区别？")]),s._v(" "),t("ul",[t("li",[s._v("Node IP：Node节点的IP地址，即物理网卡的IP地址。")]),s._v(" "),t("li",[s._v("Pod IP：Pod的IP地址，即docker容器的IP地址，此为虚拟IP地址。")]),s._v(" "),t("li",[s._v("Cluster IP：Service的IP地址，此为虚拟IP地址。")])])]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("1.4 【各种IP】PodIp用处？clusterIp用处？nodeIp用户？")]),s._v(" "),t("p",[s._v("Pod IP是每个Pod的IP地址，他是Docker Engine根据docker网桥的IP地址段进行分配的，通常是一个虚拟的二层网络")]),s._v(" "),t("ul",[t("li",[s._v("同Service下的pod可以直接根据PodIP相互通信")]),s._v(" "),t("li",[s._v("不同Service下的pod在集群间pod通信要借助于 cluster ip")]),s._v(" "),t("li",[s._v("pod和集群外通信，要借助于node ip")])])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("1.5 ClusterIp")]),s._v(" "),t("p",[s._v("Service的IP地址，此为虚拟IP地址。外部网络无法ping通，只有kubernetes集群内部访问使用。")]),s._v(" "),t("p",[s._v("在kubernetes查询Cluster IP\nkubectl -n 命名空间 get Service即可看到ClusterIP")]),s._v(" "),t("p",[s._v("Cluster IP是一个虚拟的IP，但更像是一个伪造的IP网络，原因有以下几点")]),s._v(" "),t("p",[s._v("Cluster IP仅仅作用于Kubernetes Service这个对象，并由Kubernetes管理和分配P地址\nCluster IP无法被ping，他没有一个“实体网络对象”来响应\nCluster IP只能结合Service Port组成一个具体的通信端口，单独的Cluster IP不具备通信的基础，并且他们属于Kubernetes集群这样一个封闭的空间。\n在不同Service下的pod节点在集群间相互访问可以通过Cluster IP")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/docs/images/2020-09-14-09-38-21.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"_2-networkpolicies"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-networkpolicies"}},[s._v("#")]),s._v(" 2. NetworkPolicies")])])}),[],!1,null,null,null);e.default=a.exports}}]);