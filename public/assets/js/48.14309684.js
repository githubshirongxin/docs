(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{532:function(s,e,a){"use strict";a.r(e);var n=a(59),r=Object(n.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("运维组用docker-compose为开源应用提供部署的脚本。\n开发组可以一毽部署开发调试环境或测试环境。\n这对开发组是不是很大的贡献呢。")]),s._v(" "),a("h1",{attrs:{id:"首先docker-compose部署vue前端应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#首先docker-compose部署vue前端应用"}},[s._v("#")]),s._v(" 首先docker-compose部署vue前端应用")]),s._v(" "),a("p",[s._v("先介绍介绍vue开发吧。")]),s._v(" "),a("h2",{attrs:{id:"vscode开发vue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vscode开发vue"}},[s._v("#")]),s._v(" Vscode开发vue")]),s._v(" "),a("p",[s._v("这个blog文章很好，我实际操作一下\nhttps://juejin.im/post/5e9c38856fb9a03c917fe509")]),s._v(" "),a("p",[s._v("我的该笔记的工作目录。surface：C:\\work\\prj\\vue\\firstVue")]),s._v(" "),a("ol",[a("li",[s._v("nodejs安装："),a("code",[s._v("Download the Windows Installer directly from the nodejs.org web site.")])]),s._v(" "),a("li",[s._v("安装cnpm: "),a("code",[s._v("npm install -g cnpm --registry=http://registry.npm.taobao.org")])]),s._v(" "),a("li",[s._v("安装vue-cil："),a("code",[s._v("npm install -g vue-cli")])]),s._v(" "),a("li",[s._v("创建一个空项目："),a("code",[s._v("vue init webpack firstVue")])]),s._v(" "),a("li",[s._v("要安装依赖包，\n"),a("ul",[a("li",[a("code",[s._v("首先cd到项目文件夹（firstVue文件夹）")])]),s._v(" "),a("li",[s._v("然后运行命令 "),a("code",[s._v("cnpm install")]),s._v(" ，等待安装。")]),s._v(" "),a("li",[s._v("会在我们的项目目录firstVue文件夹中多出一个node_modules文件夹，这里边就是我们项目需要的依赖包资源")])])]),s._v(" "),a("li",[s._v("运行项目 "),a("code",[s._v("npm run dev")]),s._v(' ,运行的就是package.json中scrips:{"dev":"node build/dev-server.js"}的简写')]),s._v(" "),a("li",[s._v("localhost:8080")]),s._v(" "),a("li",[s._v("vscode 安装")]),s._v(" "),a("li",[s._v("增加element UI\n"),a("ul",[a("li",[a("code",[s._v("首先cd到项目文件夹（firstVue文件夹）")])]),s._v(" "),a("li",[a("code",[s._v("cnpm i element-ui -S")])])])]),s._v(" "),a("li",[s._v("开发main.js")]),s._v(" "),a("li",[s._v("cnpm install")]),s._v(" "),a("li",[s._v("npm run dev")]),s._v(" "),a("li",[s._v("修改 App.vue")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    <router-view>的下一行追加\n    <el-button type=\"primary\">主要按钮</el-button>\n    <script> export default {\n      name:'app',\n      data() {\n         reurn {\n           num1:1\n         };\n      },\n      methods: {\n        handleChange(value) {\n           console.log(value);\n        }\n      }\n    }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("ol",{attrs:{start:"14"}},[a("li",[s._v("访问 http://localhost:8080不用刷新能看到效果。")]),s._v(" "),a("li",[s._v("用Dockerfile打包镜像")])]),s._v(" "),a("p",[s._v("C:\\work\\prj\\vue\\firstVue")]),s._v(" "),a("h2",{attrs:{id:"docker-发布vue应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-发布vue应用"}},[s._v("#")]),s._v(" Docker 发布vue应用")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/tornyLin/article/details/81479511?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker部署Vue.js应用"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("思路：nginx 发布vue  .https://github.com/rzhaolin/Docker-Vuejs")]),s._v(" "),a("ol",[a("li",[s._v("工程根目录下，先"),a("code",[s._v("node build/build.js")]),s._v(" 生成 "),a("code",[s._v("/dist")])]),s._v(" "),a("li",[s._v("工程根目录下，创建Dockefile，创建nginx.conf\n"),a("img",{attrs:{src:"/docs/images/2020-07-07-11-31-09.png",alt:""}})]),s._v(" "),a("li",[s._v("工程根目录下，Dockefile 仅仅拷贝了nginx.conf和/dist到镜像里")]),s._v(" "),a("li",[s._v("工程根目录下，"),a("code",[s._v("docker build .")]),s._v(" 生成镜像")]),s._v(" "),a("li",[s._v("方便管理，给镜像打tag，"),a("code",[s._v("docker tag ffdf55e238d4 vuejs-demo:v1.0.0")])]),s._v(" "),a("li",[s._v("生成容器："),a("code",[s._v("docker run --name=helloword -p 8080:1233 -d vuejs-demo:1.0.0")])]),s._v(" "),a("li",[s._v("发布完成，访问 http://localhost:8080")])]),s._v(" "),a("p",[s._v("在上面研究的过程中，有一些不理解的地方，都做了记录。\n以后查询起来方便些。")]),s._v(" "),a("h3",{attrs:{id:"fqa"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fqa"}},[s._v("#")]),s._v(" FQA")]),s._v(" "),a("ul",[a("li",[s._v("【Q1】【DOckerfile系列】Dockerfile多From 指令存在的意义")]),s._v(" "),a("li",[s._v("【A】\n"),a("ol",[a("li",[s._v("https://blog.csdn.net/Michaelwubo/article/details/91872076")]),s._v(" "),a("li",[s._v("共享层，节约空间，以最后的FROM为准，前面的FROM会被抛弃。")]),s._v(" "),a("li",[s._v("多阶构建（多FROM）的意义，就是最后一个FROM能从前面的FROM拷贝来中间结果直接用。")]),s._v(" "),a("li",[s._v("使用场景：编译环境和运行环境分离。因为带有编译的环境非常大，镜像就很大。\n而运行不需要这么大的基础镜像。只需要有个运行时环境就行。（Go运行时都不需要运行时）")])])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[s._v("【Q2】【DOckerfile系列】Dockerfile中 COPY --from的含义，与ADD的不同")]),s._v(" "),a("li",[s._v("【A】\nhttps://www.cnblogs.com/sparkdev/p/9573248.html\n"),a("ol",[a("li",[s._v("用于多阶构建时，从前面拷贝 --from=0 ，或者 --from=前面镜像的命名abc（前面： FROM XXX as abc）")]),s._v(" "),a("li",[s._v("还可以直接从已经存在的镜像中直接拷贝！（不用非得前置阶段中拷贝）\n"),a("code",[s._v("COPY --from=quay.io/coreos/etcd:v3.3.9 /usr/local/bin/etcd /usr/local/bin/")])])])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[s._v("【Q3】【Dockefile发布】发布vue应用，使用什么镜像当作基础镜像？")]),s._v(" "),a("li",[s._v("【A】\n"),a("ol",[a("li",[s._v("https://juejin.im/post/5ddcfae85188256eac43e707")]),s._v(" "),a("li",[s._v("多阶发布，编译和运行分离。既然是发布，那么编译就是中间产物。")]),s._v(" "),a("li",[s._v("一个Dockerfile，先FROM node:latest 编译好，再FROM nginx 把前置阶段的中间产物拷贝进来（COPY --from=build /app/dist /app）")]),s._v(" "),a("li",[a("img",{attrs:{src:"/docs/images/2020-07-07-13-39-18.png",alt:""}})])])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[s._v("【Q4】【Dockefile发布】如何发布springboot的应用呢？")]),s._v(" "),a("li",[s._v("【A】\n"),a("ol",[a("li",[s._v("编译在本地Docker外，编译出.jar文件")]),s._v(" "),a("li",[s._v("Dockerfile 镜像 FROM java:8\n2.1 /tmp(springboot默认是内嵌tomcat的工作目录，里面有jar)将jar拷贝到镜像\n2.2 指定入口，运行java "),a("code",[s._v('ENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]')])]),s._v(" "),a("li",[s._v("docker build -t  .")]),s._v(" "),a("li",[s._v("docker run -d -p 80:80 hellworld\nDockerfile:"),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 基础镜像使用java ,也可以使用openjdk:8\nFROM java:8\n# 作者\nMAINTAINER eangulee <eangulee@gmail.com>\n# VOLUME 指定了临时文件目录为/tmp。\n# 其效果是在主机 /var/lib/docker 目录下创建了一个临时文件，并链接到容器的/tmp\nVOLUME /tmp \n# 将jar包添加到容器中并更名为app.jar\nADD demo-0.0.1-SNAPSHOT.jar app.jar \n# 运行jar包,touch 就是为了更新app.jar的时间戳，有时静态文本需要更新时间才显示\nRUN bash -c \'touch /app.jar\'\nENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])])])]),s._v(" "),a("blockquote",[a("p",[s._v("[残课题]：数据库和redis怎么办？")])])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[s._v("【Q5】 【Dockefile发布】springboot+mysql用docker部署")]),s._v(" "),a("li",[s._v("【A】")]),s._v(" "),a("li",[a("strong",[s._v("方案1：两个独立的容器（个人认为不好）")]),s._v(" "),a("ol",[a("li",[s._v("springboot程序里配置文件写url:jdbc:mysql://localhost:3306?eriz?useUnicode")]),s._v(" "),a("li",[s._v("mysql作为一个容器启动"),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker volume create mysql_data 创建数据挂载点\ndocker run --name mysql -p 3306:3306 -v mysql_data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7\ndocker exec -it mysql bash  进入容器 /bin/bash\nmysql -uroot -p123456\nmysql授权：GRANT ALL PRIVILEGES ON *.* TO 'root'@'%'WITH GRANT OPTION;\n刷新：FLUSH PRIVILEGES;\n接下来使用navicat连接docker容器中的mysql,导入项目数据\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])])]),s._v(" "),a("li",[s._v("springboot本地编译出jar，然后用java:8启动容器")]),s._v(" "),a("li",[a("code",[s._v("docker run -it --net=host --name erizboot -p 8181:8181 erizboot")])])])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("strong",[s._v("方案2")]),s._v("：（"),a("strong",[s._v("--link，将两个容器相连")]),s._v("）（个人人比较好）\nhttps://zhuanlan.zhihu.com/p/102802904\n1. spring 项目yml文件：\n"),a("code",[s._v("server: port: 8080 spring: datasource: # MySQL 配置 driver-class-name: com.mysql.cj.jdbc.Driver url: jdbc:mysql://127.0.0.1:3306/db?characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai username: root password: 11111")]),s._v("\n注意：mysql的ip是127.0.0.1. 一会得该成mysql容器名。\n1. 运行mysql容器。略。同方案1\n2. 运行springboot ，"),a("code",[s._v("docker run -d --name yourproject --link mysql:mysql -p 8080:8080 yourproject")]),s._v("\n3. 修改springboot的，配置文件"),a("code",[s._v("url: jdbc:mysql://mysql:3306/db?characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai")]),s._v("\n4. 打包镜像springboot，运行springboot镜像。"),a("strong",[s._v("打包方式参考Q4")])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[s._v("【Q6】 【shell系列】"),a("code",[s._v('sh -c "touch /app.jar"')]),s._v(" 这是什么意思？")]),s._v(" "),a("li",[s._v("【A】\n"),a("ol",[a("li",[s._v("就是执行引号里的字符串当作sh命令来执行")])])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[s._v("【Q7】【docker-compose系列】 "),a("strong",[s._v("docker-compose")]),s._v(" 部署vue+springboot+mysql")]),s._v(" "),a("li",[s._v("【A】\n"),a("strong",[s._v("blog")]),s._v("：https://www.cnblogs.com/zhengqing/p/11865364.html\n"),a("strong",[s._v("源代码")]),s._v("：https://github.com/zhengqingya/xiao-xiao-su\n用docker-compose至少更专业，更方便些。\n很多技巧和使用Dockerfile是一样的。\n思路：\n"),a("ol",[a("li",[s._v("springboot和web分别有各自的Dockefile，可以不叫Dockerfile，在docker-compose.yml中指定该文件即可。")]),s._v(" "),a("li",[s._v("前端一个目录。后端一个目录。docker配置文件一个目录。")]),s._v(" "),a("li",[s._v("前端Dockerfile，多阶构建 node + nginx")]),s._v(" "),a("li",[s._v("后端springboot, 单阶构建 java:8")]),s._v(" "),a("li",[s._v("docker-compose中前后端为两个service，前端依赖于后端")]),s._v(" "),a("li",[s._v("后端映射volume，以便查看后端日志。")]),s._v(" "),a("li",[s._v("后端运行启动spring "),a("code",[s._v("mvn clean spring-boot:run -Dspring-boot.run.profiles=dev '-Dmaven.test.skip=true'")])]),s._v(" "),a("li",[s._v("通过docker-compose分别启动了前端和后端容器之后呢？\n【残留课题】：mysql没有说明如何启动！半拉柯基！！！！！！")])])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[s._v("【Q8】 springboot项目启动后为什么是后端接口：http://www.zhengqing520.com:9101/swagger-ui.html#？")]),s._v(" "),a("li",[s._v("【A】")])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[s._v("【Q9】 【docker-compose系列】docker-compose springboot mysql redis web应用部署")]),s._v(" "),a("li",[s._v("【A】")])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[s._v("【Q10】 docker-compose只能在本机发布，不能发不成多服务器。所以，docker-compose多用来开发测试比较多吧。")]),s._v(" "),a("li",[s._v("【A】（单台服务器，多个docker服务）用来快速验证原型！\n"),a("ul",[a("li",[s._v("运维组：针对springboot开发和测试。生成工程库。")]),s._v(" "),a("li",[s._v("开发组：使用脚本一键部署（在本地），不用安装多种环境。尽量裸机（至少有java，node）开发，裸机测试。")]),s._v(" "),a("li",[s._v("开发组：开发一段时间代码后，给运维组")]),s._v(" "),a("li",[s._v("运维组：把docker-compose以及jar拷贝到测试服务器。运行docker-compose。在单服务器部署")]),s._v(" "),a("li",[s._v("测试组：针对单服务器环境测试")])])])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[a("p",[s._v("【Q11】 docker-compose能够单机发布多个副本。")])]),s._v(" "),a("li",[a("p",[s._v("【A】\nhttps://www.cnblogs.com/JulianHuang/p/12568814.html\n利用docker-compose 启动nginx监听宿主80，转发给8080，然后利用docker内嵌dns\nnginx会转发给三个web应用")]),s._v(" "),a("p",[s._v("总之，"),a("font",{attrs:{color:"red"}},[s._v("docker-compose用于简单的单机验证，单机开发，从gitlab下载代码后快速在本机单机运行，模仿出多个服务器。总之，单机运行。")])],1)])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[s._v("【Q12】 用ceph搭建Harbor")]),s._v(" "),a("li",[s._v("未着手")])]),s._v(" "),a("h1",{attrs:{id:"docker-compose部署mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose部署mysql"}},[s._v("#")]),s._v(" Docker-compose部署mysql")]),s._v(" "),a("h2",{attrs:{id:"文章目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文章目录"}},[s._v("#")]),s._v(" 文章目录")]),s._v(" "),a("p",[s._v("docker实践之docker-compose部署mysql"),a("br"),s._v("\n1、安装部署docker"),a("br"),s._v("\n2、编写docker-compose文件"),a("br"),s._v("\n3、编写配置文件和初始化文件"),a("br"),s._v("\n4、启动数据库"),a("br"),s._v("\n5、检查初始化的数据"),a("br"),s._v("\n6、验证远程连接")]),s._v(" "),a("h2",{attrs:{id:"docker实践之docker-compose部署mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker实践之docker-compose部署mysql"}},[s._v("#")]),s._v(" docker实践之docker-compose部署mysql")]),s._v(" "),a("p",[s._v("前面用golang写了一个api server，但是要用到一些测试数据，又要方便给别人，想来用docker部署环境最简单了。只需要简单执行两个命令就可以搞定了。博主的环境是windows然后在windows里面部署一个centos7的虚拟机。在虚拟机里面安装部署了docker。")]),s._v(" "),a("h2",{attrs:{id:"_1、安装部署docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、安装部署docker"}},[s._v("#")]),s._v(" 1、安装部署docker")]),s._v(" "),a("p",[s._v("在linux下面只需简单的一个命令：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("yum install docker\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("其他的系统类似。")]),s._v(" "),a("h2",{attrs:{id:"_2、编写docker-compose文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、编写docker-compose文件"}},[s._v("#")]),s._v(" 2、编写docker-compose文件")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("version: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2'")]),s._v("\nservices:\n    mysql:\n        network_mode: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"host"')]),s._v("\n        environment:\n            MYSQL_ROOT_PASSWORD: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yourpassword"')]),s._v("\n            MYSQL_USER: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v("\n            MYSQL_PASS: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'yourpassword'")]),s._v("\n        image: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docker.io/mysql:latest"')]),s._v(" \n        restart: always\n        volumes:\n            - "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./db:/var/lib/mysql"')]),s._v("\n            - "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./conf/my.cnf:/etc/my.cnf"')]),s._v("\n            - "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./init:/docker-entrypoint-initdb.d/"')]),s._v("\n        ports:\n            - "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3306:33060"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[s._v("这里稍微解释一下，其中，network_mode为容器的网络模式，一般自己测试用host模式就可以了。MYSQL_ROOT_PASSWORD为数据库的密码，也就是root用户的密码。MYSQL_USER和MYSQL_PASS另外一个用户名和密码。image为你拉取镜像的地址和版本，当然也可以换成自己的镜像仓库，这里使用官方的。volumes里面的参数为映射本地和docker容器里面的文件夹和目录。./db 用来存放了数据库表文件，./conf/my.cnf存放自定义的配置文件，./init存放初始化的脚本。ports 为映射主机和容器的端口。写好docker-compose.yml后把相应的文件夹建好，当然也可以换成你自己的。下面的是博主的文件夹结构。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("root@localhost mysql # tree\n.\n├── conf\n│   └── my.cnf\n├── db\n├── docker-compose.yml\n└── init\n    └── init.sql\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h2",{attrs:{id:"_3、编写配置文件和初始化文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、编写配置文件和初始化文件"}},[s._v("#")]),s._v(" 3、编写配置文件和初始化文件")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("root@localhost conf # cat my.cnf \n[mysqld]\nuser=mysql\ndefault-storage-engine=INNODB\ncharacter-set-server=utf8\n[client]\ndefault-character-set=utf8\n[mysql]\ndefault-character-set=utf8\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("这里的配置文件只是一个简单的举例，大家需要根据自己的配置来更改。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('root@localhost init # cat init.sql \nuse mysql;\nALTER USER \'root\'@\'%\' IDENTIFIED WITH mysql_native_password BY \'yourpassword\';\ncreate database test;\nuse test;\ncreate table user\n(\n    id int auto_increment primary key,\n    username varchar(64) unique not null,\n    email varchar(120) unique not null,\n    password_hash varchar(128) not null,\n    avatar varchar(128) not null\n);\ninsert into user values(1, "zhangsan","test12345@qq.com","passwd","avaterpath");\ninsert into user values(2, "lisi","12345test@qq.com","passwd","avaterpath");\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY 'yourpassword';这一句比较重要，放开root登入权限，如果你要在其他的主机用root用户登入到数据库就需要写入这句话。其他的语句就是建表操作和插入数据的操作了。")]),s._v(" "),a("h2",{attrs:{id:"_4、启动数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、启动数据库"}},[s._v("#")]),s._v(" 4、启动数据库")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("root@localhost mysql # docker-compose pull\n\n.......下载镜像过程\n\nroot@localhost mysql # docker-compose up -d\n\nmysql_mysql_1_234be9b015e4 is up-to-date\nroot@localhost mysql # \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("此处需要在存放docker-compose.yml的文件夹进行操作。")]),s._v(" "),a("h2",{attrs:{id:"_5、检查初始化的数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、检查初始化的数据"}},[s._v("#")]),s._v(" 5、检查初始化的数据")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("root@localhost mysql # docker ps\nCONTAINER ID        IMAGE                    COMMAND                  CREATED             STATUS              PORTS               NAMES\ncffe8d56f222        docker.io/mysql:latest   \"docker-entrypoint...\"   21 minutes ago      Up 21 minutes                           mysql_mysql_1_234be9b015e4\nroot@localhost mysql # docker exec -it cffe8d56f222 bash\nroot@localhost:/# mysql -uroot -p\nEnter password: \nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 11\nServer version: 8.0.13 MySQL Community Server - GPL\n\nCopyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql> use test;\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n\nDatabase changed\nmysql> select * from user;\n+----+----------+------------------+---------------+------------+\n| id | username | email            | password_hash | avatar     |\n+----+----------+------------------+---------------+------------+\n|  1 | zhangsan | test12345@qq.com | passwd        | avaterpath |\n|  2 | lisi     | 12345test@qq.com | passwd        | avaterpath |\n+----+----------+------------------+---------------+------------+\n2 rows in set (0.00 sec)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br")])]),a("p",[s._v("可以看到数据存入到数据库当中去。")]),s._v(" "),a("h2",{attrs:{id:"_6、验证远程连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、验证远程连接"}},[s._v("#")]),s._v(" 6、验证远程连接")]),s._v(" "),a("p",[s._v("在windows宿主机上面也可以用Navicat连接上数据库。ip填虚拟机的ip，port填写3306，密码为docker-compose文件中的root密码。此处需要将宿主机（我是liunx虚拟机）的防火墙给关掉，要不然一直连接不上，或者你开启3306端口给外面访问也可以。")]),s._v(" "),a("p",[a("img",{attrs:{src:"//upload-images.jianshu.io/upload_images/15063621-d5bae6ca5a75b653?imageMogr2/auto-orient/strip%7CimageView2/2/w/760/format/webp",alt:""}})])])}),[],!1,null,null,null);e.default=r.exports}}]);