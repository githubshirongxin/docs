(window.webpackJsonp=window.webpackJsonp||[]).push([[188],{672:function(s,a,n){"use strict";n.r(a);var e=n(59),t=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"接口-interface"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#接口-interface"}},[s._v("#")]),s._v(" 接口(interface)")]),s._v(" "),n("p",[s._v("TypeScript 的核心原则之一是对值所具有的结构进行类型检查,它有时被称做“鸭式辨型法”或“结构性子类型化”。")]),s._v(" "),n("p",[s._v("在TypeScript里，接口的作用就是为这些类型命名和为你的代码或第三方代码定义契约。")]),s._v(" "),n("h2",{attrs:{id:"接口的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#接口的使用"}},[s._v("#")]),s._v(" 接口的使用")]),s._v(" "),n("p",[s._v("比如我们有一个函数，这个函数接受一个 "),n("code",[s._v("User")]),s._v(" 对象，然后返回这个 "),n("code",[s._v("User")]),s._v(" 对象的 "),n("code",[s._v("name")]),s._v(" 属性:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const getUserName = (user) => user.name\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("在我们自定义的 TypeScript 开发环境下这个是会报错的：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/11/16dbb114ddc7e1ec?w=519&h=104&f=png&s=21710",alt:"2019-06-25-03-05-40"}})]),s._v(" "),n("p",[s._v("我们必须用一种类型描述这个 "),n("code",[s._v("user")]),s._v(" 参数，但是这个类型又不属于上一节介绍到的各种基本类型。")]),s._v(" "),n("p",[s._v("这个时候我们需要 interface 来描述这个类型:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("interface User {\n    name: string\n    age: number\n    isMale: boolean\n}\n\nconst getUserName = (user: User) => user.name\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("这个接口 "),n("code",[s._v("User")]),s._v(" 描述了参数 "),n("code",[s._v("user")]),s._v(" 的结构，当然接口不回去检查属性的顺序，只要相应的属性存在并且类型也是对的就可以。")]),s._v(" "),n("h2",{attrs:{id:"可选属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#可选属性"}},[s._v("#")]),s._v(" 可选属性")]),s._v(" "),n("p",[s._v("那么还有一个问题，当这个 user 属性可能没有 "),n("code",[s._v("age")]),s._v(" 时怎么办？比如我们在前端处理表单的时候，年龄 "),n("code",[s._v("age")]),s._v(" 这个字段本身是可选的，我们应该如何用接口描述这种情况？")]),s._v(" "),n("p",[s._v("我们可以用可选属性描述这种情况:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("interface User {\n    name: string\n    age?: number\n    isMale: boolean\n}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("当我们看到代码提示的时候，这个 "),n("code",[s._v("age")]),s._v(" 属性既可能是number类型也可能是 "),n("code",[s._v("undefined")]),s._v(" 。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/11/16dbb114decc413e?w=864&h=126&f=png&s=25258",alt:"2019-06-25-03-13-26"}})]),s._v(" "),n("h2",{attrs:{id:"只读属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#只读属性"}},[s._v("#")]),s._v(" 只读属性")]),s._v(" "),n("p",[s._v("还有一个问题，当我们确定 "),n("code",[s._v("user")]),s._v(" 的性别之后就不允许就改了， "),n("code",[s._v("interface")]),s._v(" 可以保证这一点吗？")]),s._v(" "),n("p",[s._v("利用 "),n("code",[s._v("readonly")]),s._v(" 我们可以把一个属性变成只读性质，此后我们就无法对他进行修改")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("interface User {\n    name: string\n    age?: number\n    readonly isMale: boolean\n}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("一旦我们要修改只读属性，就会出现警告⚠️。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/11/16dbb114ded29ca2?w=807&h=175&f=png&s=40503",alt:"2019-06-25-03-32-31"}})]),s._v(" "),n("h2",{attrs:{id:"函数类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数类型"}},[s._v("#")]),s._v(" 函数类型")]),s._v(" "),n("p",[s._v("那么接下来，如果这个 "),n("code",[s._v("user")]),s._v(" 含有一个函数怎么办？")]),s._v(" "),n("p",[s._v("比如:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("user.say = function(words: string) {\n    return 'hello world'\n}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("我们应该如何描述这种情况？一种是直接在 interface 内部描述函数:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("interface User {\n    name: string\n    age?: number\n    readonly isMale: boolean\n    say: (words: string) => string\n}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("另一种方法，我们可以先用接口直接描述函数类型:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("interface Say {\n    (words: string) : string\n}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("然后在 "),n("code",[s._v("User")]),s._v(" 内使用")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("interface User {\n    name: string\n    age?: number\n    readonly isMale: boolean\n    say: Say\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h2",{attrs:{id:"属性检查"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#属性检查"}},[s._v("#")]),s._v(" 属性检查")]),s._v(" "),n("p",[s._v("假设我们有一个 "),n("code",[s._v("Config")]),s._v(" 接口如下")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("interface Config {\n    width?: number;\n}\n\nfunction  CalculateAreas （config: Config）: { area: number} {\n    let square = 100;\n    if (config.width) {\n        square = config.width * config.width;\n    }\n    return square;\n}\n\nlet mySquare = CalculateAreas({ widdth: 5 });\n\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("注意我们传入的参数是 "),n("code",[s._v("widdth")]),s._v("，并不是 "),n("code",[s._v("width")]),s._v("。")]),s._v(" "),n("p",[s._v("此时TypeScript会认为这段代码可能存在问题。对象字面量当被赋值给变量或作为参数传递的时候，会被特殊对待而且经过“额外属性检查”。 如果一个对象字面量存在任何“目标类型”不包含的属性时，你会得到一个错误。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// error: 'widdth' not expected in type 'Config'\nlet mySquare = CalculateAreas({ widdth: 5 });\n\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("目前官网推荐了三种主流的解决办法：")]),s._v(" "),n("p",[s._v("第一种使用类型断言：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("let mySquare = CalculateAreas({ widdth: 5 } as Config);\n\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("第二种添加字符串索引签名：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("interface Config {\n   width?: number;\n   [propName: string]: any;\n}\n\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("这样Config可以有任意数量的属性，并且只要不是width，那么就无所谓他们的类型是什么了。")]),s._v(" "),n("p",[s._v("第三种将字面量赋值给另外一个变量：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("let options = { widdth: 5 };\nlet mySquare = CalculateAreas(options);\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("除非有万不得已的情况，不建议采用上述方法。")]),s._v(" "),n("h2",{attrs:{id:"可索引类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#可索引类型"}},[s._v("#")]),s._v(" 可索引类型")]),s._v(" "),n("p",[s._v("我们再假设一个场景，如果 "),n("code",[s._v("User")]),s._v(" 还包含一个属性，这个属性是 "),n("code",[s._v("User")]),s._v(" 拥有的邮箱的集合，但是这个集合有多少成员不确定，应该如何描述？")]),s._v(" "),n("p",[s._v("比如小张的信息如下:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("{\n    name: 'xiaozhang',\n    age: 18,\n    isMale: false,\n    say: Function,\n    phone: {\n        NetEase: 'xiaozhang@163.com',\n        qq: '1845751425@qq.com',\n    }\n}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("而小明的信息如下:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("{\n    name: 'xiaoming',\n    age: 16,\n    isMale: true,\n    say: Function,\n    phone: {\n        NetEase: 'xiaoming@163.com',\n        qq: '784536325@qq.com',\n        sina: 'abc784536325@sina.com',\n    }\n}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("我们观察这两个人的信息，他们的 "),n("code",[s._v("phone")]),s._v(" 属性有共同之处，首先他们的 key 都是 string 类型的，其次 value 也是 string 类型，虽然数量不等。")]),s._v(" "),n("p",[s._v("这个时候我们可以用可索引类型表示，可索引类型具有一个索引签名，它描述了对象索引的类型，还有相应的索引返回值类型。")]),s._v(" "),n("blockquote",[n("p",[s._v("可索引类型会在后面的章节详细讲")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("interface Phone {\n    [name: string]: string\n}\n\ninterface User {\n    name: string\n    age?: number\n    readonly isMale: boolean\n    say: () => string\n    phone: Phone\n}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h2",{attrs:{id:"继承接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#继承接口"}},[s._v("#")]),s._v(" 继承接口")]),s._v(" "),n("p",[s._v("我们有一天又有一个新需求，就是需要重新创建一个新的VIP "),n("code",[s._v("User")]),s._v(" ，这个 "),n("code",[s._v("VIPUser")]),s._v(" 的属性与普通 "),n("code",[s._v("User")]),s._v(" 一致，只是多了一些额外的属性，这个时候需要重新写一个接口吗？")]),s._v(" "),n("p",[s._v("并不需要，我们可以用继承的方式，继承 "),n("code",[s._v("User")]),s._v(" 的接口。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("interface VIPUser extends User {\n    broadcast: () => void\n}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("你甚至可以继承多个接口:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("interface VIPUser extends User, SupperUser {\n    broadcast: () => void\n}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h2",{attrs:{id:"小结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),n("p",[s._v("我们通过本节的学习了解了接口（interface）的基本用法，我们甚至可以用修饰符来修饰接口成员字段的特性，比如可选属性、只读属性等等。")]),s._v(" "),n("p",[s._v("接口（interface）是一个非常强大的代码类型定义描述，是我们今后编码非常常用的一个功能，在今后的章节还会大量使用此特性。")])])}),[],!1,null,null,null);a.default=t.exports}}]);