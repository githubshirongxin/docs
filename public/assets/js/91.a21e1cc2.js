(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{574:function(n,s,e){"use strict";e.r(s);var a=e(59),t=Object(a.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"实战-4：全局提示组件-alert"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实战-4：全局提示组件-alert"}},[n._v("#")]),n._v(" 实战 4：全局提示组件——$Alert")]),n._v(" "),e("p",[n._v("有一种 Vue.js 组件，它不同于常规的组件，但组件结构本身很简单，比如下面的全局提示组件：")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/10/166fcc05107e987c?w=3187&h=2087&f=png&s=265274",alt:""}})]),n._v(" "),e("p",[n._v("实现这样一个组件并不难，只需要简单的几行 div 和 css，但使用者可能要这样来显示组件：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('<template>\n  <div>\n    <Alert v-if="show">这是一条提示信息</Alert>\n    <button @click="show = true">显示</button>\n  </div>\n</template>\n<script>\n  import Alert from \'../component/alert.vue\';\n\n  export default {\n    components: { Alert },\n    data () {\n      return {\n        show: false\n      }\n    }\n  }\n<\/script>\n\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br")])]),e("p",[n._v("这样的用法，有以下缺点：")]),n._v(" "),e("ul",[e("li",[n._v("每个使用的地方，都得注册组件；")]),n._v(" "),e("li",[n._v("需要预先将 "),e("code",[n._v("<Alert>")]),n._v(" 放置在模板中；")]),n._v(" "),e("li",[n._v("需要额外的 data 来控制 Alert 的显示状态；")]),n._v(" "),e("li",[n._v("Alert 的位置，是在当前组件位置，并非在 body 下，有可能会被其它组件遮挡。")])]),n._v(" "),e("p",[n._v("总之对使用者来说是很不友好的，那怎样才能优雅地实现这样一个组件呢？事实上，原生的 JavaScript 早已给出了答案：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("// 全局提示\nwindow.alert('这是一条提示信息');\n// 二次确认\nconst confirm = window.confirm('确认删除吗？');\nif (confirm) {\n  // ok\n} else {\n  // cancel\n}\n\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br")])]),e("p",[n._v("所以，结论是：我们需要一个能用 JavaScript 调用组件的 API。")]),n._v(" "),e("p",[n._v("如果你使用过 iView 之类的组件库，一定对它内置的 Message、Notice、Modal 等组件很熟悉，本节就来开发一个全局通知组件——Alert。")]),n._v(" "),e("h2",{attrs:{id:"_1-3-先把组件写好"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-先把组件写好"}},[n._v("#")]),n._v(" 1/3 先把组件写好")]),n._v(" "),e("p",[n._v("我们期望最终的 API 是这样的：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("methods: {\n  handleShow () {\n    this.$Alert({\n      content: '这是一条提示信息',\n      duration: 3\n    })\n  }\n}\n\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br")])]),e("p",[e("code",[n._v("this.$Alert")]),n._v(" 可以在任何位置调用，无需单独引入。该方法接收两个参数：")]),n._v(" "),e("ul",[e("li",[n._v("content：提示内容；")]),n._v(" "),e("li",[n._v("duration：持续时间，单位秒，默认 1.5 秒，到时间自动消失。")])]),n._v(" "),e("p",[n._v("最终效果如下：")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/10/166fcc09c43c2ad1?w=1208&h=314&f=gif&s=207241",alt:""}})]),n._v(" "),e("p",[n._v("我们从最简单的入手，不考虑其它，先写一个基本的 Alert 组件。")]),n._v(" "),e("p",[n._v("在 "),e("code",[n._v("src/component")]),n._v(" 下新建 "),e("code",[n._v("alert")]),n._v(" 目录，并创建文件 "),e("code",[n._v("alert.vue")]),n._v("：")]),n._v(" "),e("p",[n._v("通知可以是多个，我们用一个数组 "),e("code",[n._v("notices")]),n._v(" 来管理每条通知：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('\x3c!-- alert.vue --\x3e\n<template>\n  <div class="alert">\n    <div class="alert-main" v-for="item in notices" :key="item.name">\n      <div class="alert-content">{{ item.content }}</div>\n    </div>\n  </div>\n</template>\n<script>\n  export default {\n    data () {\n      return {\n        notices: []\n      }\n    }\n  }\n<\/script>\n<style>\n  .alert{\n    position: fixed;\n    width: 100%;\n    top: 16px;\n    left: 0;\n    text-align: center;\n    pointer-events: none;\n  }\n  .alert-content{\n    display: inline-block;\n    padding: 8px 16px;\n    background: #fff;\n    border-radius: 3px;\n    box-shadow: 0 1px 6px rgba(0, 0, 0, .2);\n    margin-bottom: 8px;\n  }\n</style>\n\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br")])]),e("p",[n._v("Alert 组件不同于常规的组件使用方式，它最终是通过 JS 来调用的，因此组件不用预留 props 和 events 接口。")]),n._v(" "),e("p",[n._v("接下来，只要给数组 "),e("code",[n._v("notices")]),n._v(" 增加数据，这个提示组件就能显示内容了，我们先假设，最终会通过 JS 调用 Alert 的一个方法 "),e("code",[n._v("add")]),n._v("，并将 "),e("code",[n._v("content")]),n._v(" 和 "),e("code",[n._v("duration")]),n._v(" 传入进来：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("\x3c!-- alert.vue，部分代码省略 --\x3e\n<script>\n  let seed = 0;\n\n  function getUuid() {\n    return 'alert_' + (seed++);\n  }\n\n  export default {\n    data () {\n      return {\n        notices: []\n      }\n    },\n    methods: {\n      add (notice) {\n        const name = getUuid();\n\n        let _notice = Object.assign({\n          name: name\n        }, notice);\n\n        this.notices.push(_notice);\n\n        // 定时移除，单位：秒\n        const duration = notice.duration;\n        setTimeout(() => {\n          this.remove(name);\n        }, duration * 1000);\n      },\n      remove (name) {\n        const notices = this.notices;\n\n        for (let i = 0; i < notices.length; i++) {\n          if (notices[i].name === name) {\n            this.notices.splice(i, 1);\n            break;\n          }\n        }\n      }\n    }\n  }\n<\/script>\n\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br")])]),e("p",[n._v("在 "),e("code",[n._v("add")]),n._v(" 方法中，给每一条传进来的提示数据，加了一个不重复的 "),e("code",[n._v("name")]),n._v(" 字段来标识，并通过 "),e("code",[n._v("setTimeout")]),n._v(" 创建了一个计时器，当到达指定的 "),e("code",[n._v("duration")]),n._v(" 持续时间后，调用 "),e("code",[n._v("remove")]),n._v(" 方法，将对应 "),e("code",[n._v("name")]),n._v(" 的那条提示信息找到，并从数组中移除。")]),n._v(" "),e("p",[n._v("由这个思路，Alert 组件就可以无限扩展，只要在 add 方法中传递更多的参数，就能支持更复杂的组件，比如是否显示手动关闭按钮、确定 / 取消按钮，甚至传入一个 Render 函数都可以，完成本例后，读者可以尝试”改造“。")]),n._v(" "),e("h2",{attrs:{id:"_2-3-实例化封装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-实例化封装"}},[n._v("#")]),n._v(" 2/3 实例化封装")]),n._v(" "),e("p",[n._v("这一步，我们对 Alert 组件进一步封装，让它能够实例化，而不是常规的组件使用方法。实例化组件我们在第 8 节中介绍过，可以使用 Vue.extend 或 new Vue，然后用 $mount 挂载到 body 节点下。")]),n._v(" "),e("p",[n._v("在 "),e("code",[n._v("src/components/alert")]),n._v(" 目录下新建 "),e("code",[n._v("notification.js")]),n._v(" 文件：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("// notification.js\nimport Alert from './alert.vue';\nimport Vue from 'vue';\n\nAlert.newInstance = properties => {\n  const props = properties || {};\n\n  const Instance = new Vue({\n    data: props,\n    render (h) {\n      return h(Alert, {\n        props: props\n      });\n    }\n  });\n\n  const component = Instance.$mount();\n  document.body.appendChild(component.$el);\n\n  const alert = Instance.$children[0];\n\n  return {\n    add (noticeProps) {\n      alert.add(noticeProps);\n    },\n    remove (name) {\n      alert.remove(name);\n    }\n  }\n};\n\nexport default Alert;\n\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br")])]),e("p",[n._v("notification.js 并不是最终的文件，它只是对 alert.vue 添加了一个方法 "),e("code",[n._v("newInstance")]),n._v("。虽然 alert.vue 包含了 template、script、style 三个标签，并不是一个 JS 对象，那怎么能够给它扩展一个方法 "),e("code",[n._v("newInstance")]),n._v(" 呢？事实上，alert.vue 会被 Webpack 的 vue-loader 编译，把 template 编译为 Render 函数，最终就会成为一个 JS 对象，自然可以对它进行扩展。")]),n._v(" "),e("p",[n._v("Alert 组件没有任何 props，这里在 Render Alert 组件时，还是给它加了 props，当然，这里的 props 是空对象 {}，而且即使传了内容，也不起作用。这样做的目的还是为了扩展性，如果要在 Alert 上添加 props 来支持更多特性，是要在这里传入的。不过话说回来，因为能拿到 Alert 实例，用 data 或 props 都是可以的。")]),n._v(" "),e("p",[n._v("在第 8 节已经解释过，"),e("code",[n._v("const alert = Instance.$children[0];")]),n._v("，这里的 alert 就是 Render 的 Alert 组件实例。在 "),e("code",[n._v("newInstance")]),n._v(" 里，使用闭包暴露了两个方法 "),e("code",[n._v("add")]),n._v(" 和 "),e("code",[n._v("remove")]),n._v("。这里的 add 和 remove 可不是 alert.vue 里的 add 和 remove，它们只是名字一样。")]),n._v(" "),e("h2",{attrs:{id:"_3-3-入口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-入口"}},[n._v("#")]),n._v(" 3/3 入口")]),n._v(" "),e("p",[n._v("最后要做的，就是调用 notification.js 创建实例，并通过 "),e("code",[n._v("add")]),n._v(" 把数据传递过去，这是组件开发的最后一步，也是最终的入口。在 "),e("code",[n._v("src/component/alert")]),n._v(" 下创建文件 "),e("code",[n._v("alert.js")]),n._v("：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("// alert.js\nimport Notification from './notification.js';\n\nlet messageInstance;\n\nfunction getMessageInstance () {\n  messageInstance = messageInstance || Notification.newInstance();\n  return messageInstance;\n}\n\nfunction notice({ duration = 1.5, content = '' }) {\n  let instance = getMessageInstance();\n\n  instance.add({\n    content: content,\n    duration: duration\n  });\n}\n\nexport default {\n  info (options) {\n    return notice(options);\n  }\n}\n\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br")])]),e("p",[e("code",[n._v("getMessageInstance")]),n._v(" 函数用来获取实例，它不会重复创建，如果 messageInstance 已经存在，就直接返回了，只在第一次调用 Notification 的 "),e("code",[n._v("newInstance")]),n._v(" 时来创建实例。")]),n._v(" "),e("p",[n._v("alert.js 对外提供了一个方法 "),e("code",[n._v("info")]),n._v("，如果需要各种显示效果，比如成功的、失败的、警告的，可以在 info 下面提供更多的方法，比如 success、fail、warning 等，并传递不同参数让 Alert.vue 知道显示哪种状态的图标。本例因为只有一个 info，事实上也可以省略掉，直接导出一个默认的函数，这样在调用时，就不用 "),e("code",[n._v("this.$Alert.info()")]),n._v(" 了，直接 "),e("code",[n._v("this.$Alert()")]),n._v("。")]),n._v(" "),e("p",[n._v("来看一下显示一个信息提示组件的流程：")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/11/10/166fcc0fe6df06d2?w=1800&h=180&f=png&s=47285",alt:""}})]),n._v(" "),e("p",[n._v("最后把 alert.js 作为插件注册到 Vue 里就行，在入口文件 "),e("code",[n._v("src/main.js")]),n._v("中，通过 "),e("code",[n._v("prototype")]),n._v(" 给 Vue 添加一个实例方法：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("// src/main.js\nimport Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport Alert from '../src/components/alert/alert.js'\n\nVue.config.productionTip = false\n\nVue.prototype.$Alert = Alert\n\nnew Vue({\n  router,\n  render: h => h(App)\n}).$mount('#app')\n\n\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br")])]),e("p",[n._v("这样在项目任何地方，都可以通过 "),e("code",[n._v("this.$Alert")]),n._v(" 来调用 Alert 组件了，我们创建一个 alert 的路由，并在 "),e("code",[n._v("src/views")]),n._v(" 下创建页面 "),e("code",[n._v("alert.vue")]),n._v("：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("\x3c!-- src/views/alert.vue --\x3e\n<template>\n  <div>\n    <button @click=\"handleOpen1\">打开提示 1</button>\n    <button @click=\"handleOpen2\">打开提示 2</button>\n  </div>\n</template>\n<script>\n  export default {\n    methods: {\n      handleOpen1 () {\n        this.$Alert.info({\n          content: '我是提示信息 1'\n        });\n      },\n      handleOpen2 () {\n        this.$Alert.info({\n          content: '我是提示信息 2',\n          duration: 3\n        });\n      }\n    }\n  }\n<\/script>\n\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br")])]),e("p",[e("code",[n._v("duration")]),n._v(" 如果不传入，默认是 1.5 秒。")]),n._v(" "),e("p",[n._v("以上就是全局通知组件的全部内容。")]),n._v(" "),e("h2",{attrs:{id:"友情提示"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#友情提示"}},[n._v("#")]),n._v(" 友情提示")]),n._v(" "),e("p",[n._v("本示例算是一个 MVP（最小化可行方案），要开发一个完善的全局通知组件，还需要更多可维护性和功能性的设计，但离不开本例的设计思路。以下几点是同类组件中值得注意的：")]),n._v(" "),e("ol",[e("li",[n._v("Alert.vue 的最外层是有一个 .alert 节点的，它会在第一次调用 "),e("code",[n._v("$Alert")]),n._v(" 时，在 body 下创建，因为不在 "),e("code",[n._v("<router-view>")]),n._v(" 内，它不受路由的影响，也就是说一经创建，除非刷新页面，这个节点是不会消失的，所以在 alert.vue 的设计中，并没有主动销毁这个组件，而是维护了一个子节点数组 "),e("code",[n._v("notices")]),n._v("。")]),n._v(" "),e("li",[n._v(".alert 节点是 "),e("code",[n._v("position: fixed")]),n._v(" 固定的，因此要合理设计它的 "),e("code",[n._v("z-index")]),n._v("，否则可能被其它节点遮挡。")]),n._v(" "),e("li",[n._v("notification.js 和 alert.vue 是可以复用的，如果还要开发其它同类的组件，比如二次确认组件 "),e("code",[n._v("$Confirm")]),n._v(", 只需要再写一个入口 "),e("code",[n._v("confirm.js")]),n._v("，并将 "),e("code",[n._v("alert.vue")]),n._v(" 进一步封装，将 "),e("code",[n._v("notices")]),n._v(" 数组的循环体写为一个新的组件，通过配置来决定是渲染 Alert 还是 Confirm，这在可维护性上是友好的。")]),n._v(" "),e("li",[n._v("在 notification.js 的 new Vue 时，使用了 Render 函数来渲染 alert.vue，这是因为使用 template 在 runtime 的 Vue.js 版本下是会报错的。")]),n._v(" "),e("li",[n._v("本例的 content 只能是字符串，如果要显示自定义的内容，除了用 "),e("code",[n._v("v-html")]),n._v(" 指令，也能用 Functional Render（之后章节会介绍）。")])]),n._v(" "),e("h2",{attrs:{id:"结语"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[n._v("#")]),n._v(" 结语")]),n._v(" "),e("p",[n._v("Vue.js 的精髓是组件，组件的精髓是 JavaScript。将 JavaScript 开发中的技巧结合 Vue.js 组件，就能玩出不一样的东西。")]),n._v(" "),e("p",[n._v("注：本节部分代码参考 "),e("a",{attrs:{href:"https://github.com/iview/iview/tree/2.0/src/components/base/notification",target:"_blank",rel:"noopener noreferrer"}},[n._v("iView"),e("OutboundLink")],1),n._v("。")])])}),[],!1,null,null,null);s.default=t.exports}}]);