(window.webpackJsonp=window.webpackJsonp||[]).push([[199],{682:function(v,_,e){"use strict";e.r(_);var o=e(59),r=Object(o.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h3",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[v._v("#")]),v._v(" 前言")]),v._v(" "),e("p",[v._v("在学习"),e("strong",[v._v("CSS神操作骚技巧")]),v._v("前，笔者会用几章内容讲解CSS的一些基础知识和核心原理，毕竟打下扎实的基本功才能把CSS玩得游刃有余。谈到CSS，就会想到兼容性，想到兼容性就会涉及到浏览器，浏览器是一切CSS的运行环境。")]),v._v(" "),e("h3",{attrs:{id:"浏览器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器"}},[v._v("#")]),v._v(" 浏览器")]),v._v(" "),e("p",[v._v("浏览器这家伙是前端开发者每天都打交道的工具，正是它，才有了前端这个职业。"),e("strong",[v._v("浏览器")]),v._v("指显示万维网上的媒体信息(文字、图像、音频、视频等)和处理用户交互操作的软件。")]),v._v(" "),e("p",[v._v("浏览器正是Internet时代的产物，随着"),e("code",[v._v("各种设备操作系统的普及")]),v._v("、"),e("code",[v._v("网络技术的全球化")]),v._v("以及"),e("code",[v._v("人们对信息需求的爆炸式增长")]),v._v("，为浏览器的诞生和兴起提供了强大的动力，同时它也标志着互联网时代的来临。")]),v._v(" "),e("h5",{attrs:{id:"组成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组成"}},[v._v("#")]),v._v(" 组成")]),v._v(" "),e("p",[v._v("虽然目前市场上的浏览器品牌众多，但是浏览器的结构还是由以下几部分组成。")]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("地址栏")]),v._v("：用于输入网站地址，通过识别地址信息跳转到对应网站")]),v._v(" "),e("li",[e("strong",[v._v("菜单栏")]),v._v("：包含设置内容和常用快捷操作，用户可自定义设置内容")]),v._v(" "),e("li",[e("strong",[v._v("标签栏")]),v._v("：包含一个或多个窗口，窗口的内容互不干扰，独立运行")]),v._v(" "),e("li",[e("strong",[v._v("窗口栏")]),v._v("：显示当前网站地址的访问内容，可为用户提供各种交互操作")]),v._v(" "),e("li",[e("strong",[v._v("状态栏")]),v._v("：用于实时显示当前操作和下载Web页面的进度情况")])]),v._v(" "),e("h5",{attrs:{id:"历史"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#历史"}},[v._v("#")]),v._v(" 历史")]),v._v(" "),e("p",[v._v("浏览器作为一个跨时代的科技产物，为现代网络人机交互的发展提供了强而有力的支持，历史的时刻不应该被忘记，以下简单列举一些浏览器的历史时刻。")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("1993年")]),v._v("，"),e("code",[v._v("NCSA组织")]),v._v("发布了"),e("strong",[v._v("Mosaic浏览器")])]),v._v(" "),e("li",[e("code",[v._v("1994年")]),v._v("，"),e("code",[v._v("网景公司")]),v._v("发布了"),e("strong",[v._v("Navigator浏览器")])]),v._v(" "),e("li",[e("code",[v._v("1995年")]),v._v("，"),e("code",[v._v("微软公司")]),v._v("发布了"),e("strong",[v._v("IExplorer浏览器")]),v._v("，并掀起了"),e("code",[v._v("浏览器之战")])]),v._v(" "),e("li",[e("code",[v._v("1996年")]),v._v("，Navigator浏览器的市场份额达到"),e("code",[v._v("86%")]),v._v("，微软公司开始将IExplorer浏览器整合到"),e("code",[v._v("Windows操作系统")]),v._v("中")]),v._v(" "),e("li",[e("code",[v._v("1996年")]),v._v("，"),e("code",[v._v("ASA公司")]),v._v("发布了"),e("strong",[v._v("Opera浏览器")])]),v._v(" "),e("li",[e("code",[v._v("1998年")]),v._v("，网景公司启动其开源产品，开始推出"),e("code",[v._v("Mozilla")])]),v._v(" "),e("li",[e("code",[v._v("2001年")]),v._v("，为人诟病的"),e("code",[v._v("IExplorer 6")]),v._v("发布，这货霸占国内市场十多年")]),v._v(" "),e("li",[e("code",[v._v("2002年")]),v._v("，"),e("code",[v._v("网景公司")]),v._v("发布了"),e("strong",[v._v("Firefox浏览器")])]),v._v(" "),e("li",[e("code",[v._v("2003年")]),v._v("，"),e("code",[v._v("苹果公司")]),v._v("发布了"),e("strong",[v._v("Safari浏览器")])]),v._v(" "),e("li",[e("code",[v._v("2004年")]),v._v("，IExplorer浏览器的市场份额达到了历史顶峰"),e("code",[v._v("92%")]),v._v("，自此以后其市场份额开始下滑")]),v._v(" "),e("li",[e("code",[v._v("2006年")]),v._v("，"),e("code",[v._v("Firefox 3")]),v._v("的发布创下了吉尼斯世界纪录，一天800万下载量")]),v._v(" "),e("li",[e("code",[v._v("2008年")]),v._v("，"),e("code",[v._v("谷歌公司")]),v._v("发布了"),e("strong",[v._v("Chrome浏览器")])])]),v._v(" "),e("p",[v._v("至此，世界五大浏览器鼎立的格局逐渐形成，也为后期浏览器市场的多变提供了广大的技术支持。浏览器发展史并不久远，虽然只有短短的20多年，但是却不断在更新迭代，为广大互联网用户提供越来越强大的人机交互功能。")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("世界五大浏览器：Chrome、Safari、Firefox、Opera、IExplorer/Edge\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("h3",{attrs:{id:"渲染引擎"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渲染引擎"}},[v._v("#")]),v._v(" 渲染引擎")]),v._v(" "),e("p",[e("strong",[v._v("渲染引擎")]),v._v("又名"),e("strong",[v._v("浏览器内核")]),v._v("，指负责对网页语法解析并渲染成一张可视化页面的解析器。它是浏览器最核心最重要的部位，不同内核对网页语法的解析也有不同，因此同一网页语法在不同内核的浏览器中的渲染效果也可能不同，这就是常说的"),e("strong",[v._v("浏览器差异性")]),v._v("。")]),v._v(" "),e("p",[v._v("上述提到的世界五大浏览器，在自身的发展过程中都使用了一种或多种浏览器内核作为自身的渲染引擎。")]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("Google Chrome")]),v._v("：Webkit(前期)、Blink(后期)")]),v._v(" "),e("li",[e("strong",[v._v("Apple Safari")]),v._v("：Webkit")]),v._v(" "),e("li",[e("strong",[v._v("Mozilla Firefox")]),v._v("：Gecko")]),v._v(" "),e("li",[e("strong",[v._v("ASA Opera")]),v._v("：Presto(前期)、Blink(后期)")]),v._v(" "),e("li",[e("strong",[v._v("Microsoft IExplorer")]),v._v("：Trident")]),v._v(" "),e("li",[e("strong",[v._v("Microsoft Edge")]),v._v("：Trident(前期)、Blink(后期)")])]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("IExplorer和Edge同是微软公司开发的浏览器产品，鉴于IExplorer存在很多为人诟病的问题，在后续的系统升级中逐渐使用Edge取代IExplorer在Windows上的位置\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("因此20多年的浏览器发展史里，被大规模使用的浏览器内核也就这五个。")]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("Blink内核")]),v._v("：由谷歌公司和欧朋公司合作自研的内核，同时谷歌公司也将其作为开源内核架构"),e("code",[v._v("Chromium")]),v._v("的一部分发布，在"),e("code",[v._v("Chrome 28+")]),v._v("和"),e("code",[v._v("Opear 15+")]),v._v("中被使用。")]),v._v(" "),e("li",[e("strong",[v._v("Webkit内核")]),v._v("：由苹果公司自研的内核，同时也是"),e("code",[v._v("Blink内核")]),v._v("的原型，在"),e("code",[v._v("Chrome 1 ~ 28")]),v._v("和"),e("code",[v._v("Safari 1+")]),v._v("中被使用。")]),v._v(" "),e("li",[e("strong",[v._v("Gecko内核")]),v._v("：由网景公司自研的内核，先期在"),e("code",[v._v("Navigator")]),v._v("中使用，后期推广到"),e("code",[v._v("Firefox")]),v._v("上，在"),e("code",[v._v("Firefox 1+")]),v._v("中被使用。")]),v._v(" "),e("li",[e("strong",[v._v("Presto内核")]),v._v("：由欧朋公司自研的内核，其渲染性能达到极致但是牺牲了兼容性，目前已经废弃，在"),e("code",[v._v("Opear 7 ~ 14")]),v._v("中被使用。")]),v._v(" "),e("li",[e("strong",[v._v("Trident内核")]),v._v("：由微软公司自研的内核，由于其被包含在全世界使用率最高的"),e("code",[v._v("Windows操作系统")]),v._v("中，导致十多年时间里一直称霸浏览器内核界，在"),e("code",[v._v("IExplorer 4+")]),v._v("中被使用。")])]),v._v(" "),e("hr"),v._v(" "),e("p",[v._v("以下加插两个小故事，虽然不是什么大事件，但也是浏览器发展史里比较有趣的故事，了解了解也无妨。")]),v._v(" "),e("blockquote",[e("p",[v._v("Gecko内核由来")])]),v._v(" "),e("p",[e("code",[v._v("Gecko内核")]),v._v("的诞生其实跟"),e("code",[v._v("IExplorer")]),v._v("还是有点关系的，众所周知"),e("code",[v._v("IExplorer")]),v._v("无使用W3C标准，导致微软公司一些开发者的不满，他们与网景公司一些开发者共同创办了"),e("code",[v._v("Mozilla")]),v._v("，以当时的"),e("code",[v._v("Mosaic内核")]),v._v("为基础重新开发出"),e("code",[v._v("Gecko内核")]),v._v("。")]),v._v(" "),e("blockquote",[e("p",[v._v("浏览器大战")])]),v._v(" "),e("p",[v._v("微软公司的"),e("code",[v._v("IExplorer")]),v._v("曾经与其他浏览器发生过两次"),e("strong",[v._v("世界大战")]),v._v("，由于其垄断性质的操作也导致其在2014年后开始慢慢走向衰落。")]),v._v(" "),e("p",[v._v("第一次是在"),e("code",[v._v("1995年~1998年")]),v._v("，当时微软发布了"),e("code",[v._v("IExplorer")]),v._v("，但是网景公司的"),e("code",[v._v("Navigator")]),v._v("的市场份额达到"),e("code",[v._v("86%")]),v._v("，迫使微软公司将"),e("code",[v._v("IExplorer")]),v._v("植入到全世界使用率最高的"),e("code",[v._v("Windows操作系统")]),v._v("中，相当于买电脑送浏览器，这种操作让"),e("code",[v._v("IExplorer")]),v._v("在极短的时间内超过了"),e("code",[v._v("Navigator")]),v._v("的市场份额，导致后续与网景公司的"),e("code",[v._v("Navigator")]),v._v("大打出手，最后网景公司将"),e("code",[v._v("Navigator")]),v._v("卖给AOL公司为收场结束此次浏览器大战。")]),v._v(" "),e("p",[v._v("第二次是在"),e("code",[v._v("2003年后")]),v._v("，"),e("code",[v._v("IExplorer")]),v._v("通过其自身的优势取得了很好的市场成绩，巨大的使用量让其开始蚕食其他浏览器的市场份额。但是很多后起之秀的浏览器，例如"),e("code",[v._v("Safari")]),v._v("、"),e("code",[v._v("Firefox")]),v._v("、"),e("code",[v._v("Opera")]),v._v("，还有众多国产浏览器，都积极通过各种技术手段和推出更多用户功能的方式对抗"),e("code",[v._v("IExplorer")]),v._v("的打压。")]),v._v(" "),e("hr"),v._v(" "),e("p",[v._v("推荐一个统计互联网市场份额的网站"),e("a",{attrs:{href:"https://gs.statcounter.com",target:"_blank",rel:"noopener noreferrer"}},[v._v("StatCounter"),e("OutboundLink")],1),v._v("，以后产品经理让你兼容"),e("code",[v._v("IExplorer")]),v._v("，你可把"),e("code",[v._v("浏览器市场份额统计数据")]),v._v("全盘搬出，大声并自信地告诉TA，"),e("strong",[v._v("现在几乎没人使用IExplorer了🤔")]),v._v("。")]),v._v(" "),e("h3",{attrs:{id:"渲染过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渲染过程"}},[v._v("#")]),v._v(" 渲染过程")]),v._v(" "),e("p",[v._v("要了解浏览器页面的渲染过程，首先得知道"),e("code",[v._v("关键渲染路径")]),v._v("。"),e("strong",[v._v("关键渲染路径")]),v._v("指浏览器从最初接收请求得到HTML、CSS、JS等资源，然后解析、构建、渲染、布局、绘制、合成，到最后呈现在用户眼前界面的整个过程。")]),v._v(" "),e("p",[v._v("笔者将关键渲染路径划分理解，页面的渲染过程分为以下几部分。")]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("解析文件")]),v._v(" "),e("ul",[e("li",[v._v("将"),e("code",[v._v("html文件")]),v._v("转换为DOM树")]),v._v(" "),e("li",[v._v("将"),e("code",[v._v("css文件")]),v._v("转换为CSSOM树")]),v._v(" "),e("li",[v._v("将DOM树和CSSOM树合并生成渲染树")])])]),v._v(" "),e("li",[e("strong",[v._v("绘制图层")]),v._v(" "),e("ul",[e("li",[v._v("根据渲染树布局("),e("code",[v._v("回流")]),v._v(")")]),v._v(" "),e("li",[v._v("根据布局绘制("),e("code",[v._v("重绘")]),v._v(")")])])]),v._v(" "),e("li",[e("strong",[v._v("合成图层")]),v._v("：合成图层显示在屏幕上")])]),v._v(" "),e("h5",{attrs:{id:"解析文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解析文件"}},[v._v("#")]),v._v(" 解析文件")]),v._v(" "),e("p",[v._v("HTML文档描述一个页面的结构，浏览器通过"),e("code",[v._v("HTML解析器")]),v._v("将HTML解析成"),e("code",[v._v("DOM树")]),v._v("结构。HTML文档中所有内容皆为节点，各节点间拥有层级关系，彼此相连，构成DOM树。构建"),e("code",[v._v("DOM树")]),v._v("的过程：读取HTML文档的"),e("strong",[v._v("字节")]),v._v("(Bytes)，将字节转换成"),e("strong",[v._v("字符")]),v._v("(Chars)，依据字符确定"),e("strong",[v._v("标签")]),v._v("(Tokens)，将标签转换成"),e("strong",[v._v("节点")]),v._v("(Nodes)，以节点为基准构建"),e("strong",[v._v("DOM树")]),v._v("。")]),v._v(" "),e("p",[v._v("CSS文档描述一个页面的表现，浏览器通过"),e("code",[v._v("CSS解析器")]),v._v("将CSS解析成"),e("code",[v._v("CSSOM树")]),v._v("结构，与DOM树结构比较像。CSS文档中所有内容皆为节点，与HTML文档中的节点一一对应，各节点间拥有层级关系，彼此相连，构成CSSOM树。构建"),e("code",[v._v("CSSOM树")]),v._v("的过程：读取CSS文档的"),e("strong",[v._v("字节")]),v._v("(Bytes)，将字节转换成"),e("strong",[v._v("字符")]),v._v("(Chars)，依据字符确定"),e("strong",[v._v("标签")]),v._v("(Tokens)，将标签转换成"),e("strong",[v._v("节点")]),v._v("(Nodes)，以节点为基准构建"),e("strong",[v._v("CSSOM树")]),v._v("。与DOM树的构建过程完全一致。")]),v._v(" "),e("p",[v._v("在构建DOM树的过程中，当"),e("code",[v._v("HTML解析器")]),v._v("遇到"),e("code",[v._v("<script>")]),v._v("时会立即阻塞DOM树的构建，将控制权移交给浏览器的"),e("code",[v._v("JS引擎")]),v._v("，等到"),e("code",[v._v("JS引擎")]),v._v("运行完毕，浏览器才会从中断的地方恢复DOM树的构建。"),e("code",[v._v("<script>")]),v._v("的脚本加载完成后，"),e("code",[v._v("JS引擎")]),v._v("通过"),e("code",[v._v("DOM API")]),v._v("和"),e("code",[v._v("CSSOM API")]),v._v("操作DOM树和CSSOM树。为何会产生"),e("strong",[v._v("渲染阻塞")]),v._v("呢？其根本原因在于：JS操作DOM后，浏览器无法预测未来DOM的具体内容，为了防止无效操作和节省资源，只能阻塞DOM树的构建。")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/acb36f3594814e59be49fd0553e2958d~tplv-k3u1fbpfcp-zoom-1.image",alt:"渲染过程"}})]),v._v(" "),e("p",[v._v("浏览器的"),e("code",[v._v("渲染引擎")]),v._v("将DOM树和CSSOM树合并生成渲染树，只渲染需显示的节点及其样式。"),e("strong",[v._v("DOM树")]),v._v("、"),e("strong",[v._v("CSSOM树")]),v._v("和"),e("strong",[v._v("渲染树")]),v._v("三者的构建并无"),e("code",[v._v("先后条件")]),v._v("和"),e("code",[v._v("先后顺序")]),v._v("，并非完全独立而是会有交叉并行构建的情况。因此会形成一边加载，一边解析，一边渲染的工作现象。")]),v._v(" "),e("h5",{attrs:{id:"绘制图层"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#绘制图层"}},[v._v("#")]),v._v(" 绘制图层")]),v._v(" "),e("p",[v._v("进入绘制阶段，遍历渲染树，调用渲染器的"),e("code",[v._v("paint()")]),v._v("在屏幕上绘制内容。根据渲染树布局计算样式，即每个节点在页面中的布局、尺寸等几何属性。HTML默认是流式布局，CSS和JS会打破这种布局，改变DOM的几何属性和外观属性。在绘制过程中，根据渲染树布局，再根据布局绘制，这就是常听常说的"),e("strong",[v._v("回流重绘")]),v._v("。")]),v._v(" "),e("p",[v._v("在此涉及到两个核心概念："),e("strong",[v._v("回流")]),v._v("、"),e("strong",[v._v("重绘")]),v._v("。笔者用两句精简的话分别概括它们。")]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("回流")]),v._v("：几何属性需改变的渲染")]),v._v(" "),e("li",[e("strong",[v._v("重绘")]),v._v("：更改外观属性而不影响几何属性的渲染")])]),v._v(" "),e("p",[v._v("当生成渲染树后，至少会渲染一次。在后续交互过程中，还会不断地重新渲染。这时只会"),e("code",[v._v("回流重绘")]),v._v("或"),e("code",[v._v("只有重绘")]),v._v("。因此引出一个定向法则："),e("strong",[v._v("回流必定引发重绘，重绘不一定引发回流")]),v._v("。")]),v._v(" "),e("p",[v._v("在下一章中，笔者会安排整章篇幅讲解"),e("strong",[v._v("回流重绘")]),v._v("以及如何让回流重绘的影响最小化。相信下一章提及的"),e("strong",[v._v("属性排序")]),v._v("应该比较少同学了解过或使用过，敬请期待。")]),v._v(" "),e("h5",{attrs:{id:"合成图层"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合成图层"}},[v._v("#")]),v._v(" 合成图层")]),v._v(" "),e("p",[v._v("将回流重绘生成的图层逐张合并并显示在屏幕上。上述几个步骤并不是一次性顺序完成的，若DOM或CSSOM被修改，上述过程会被重复执行。实际上，CSS和JS往往会多次修改DOM或CSSOM，简单来说就是用户的交互操作引发了网页的重渲染。")]),v._v(" "),e("h3",{attrs:{id:"兼容性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#兼容性"}},[v._v("#")]),v._v(" 兼容性")]),v._v(" "),e("p",[e("strong",[v._v("兼容性")]),v._v("又名"),e("code",[v._v("网站兼容性")]),v._v("或"),e("code",[v._v("网页兼容性")]),v._v("，指网页在各种浏览器上的显示效果可能不同而产生浏览器和网页间的兼容问题。")]),v._v(" "),e("p",[v._v("说到兼容性，就不得不推荐一个专门为前端开发者定制可查询"),e("code",[v._v("CSS/JS特性")]),v._v("在各种浏览器中兼容性的网站"),e("a",{attrs:{href:"https://caniuse.com",target:"_blank",rel:"noopener noreferrer"}},[v._v("Caniuse"),e("OutboundLink")],1),v._v("，它可很好地保障网页在不同浏览器间的兼容性。有了这个工具可快速地了解使用到的代码在各个浏览器中的效果。所以后续使用VScode编码的过程中都会顺带使用"),e("code",[v._v("Caniuse")]),v._v("查看CSS属性以及选择器的兼容性。")]),v._v(" "),e("p",[v._v("产生浏览器间的兼容问题，正是上述谈到的"),e("code",[v._v("渲染引擎")]),v._v("而导致的。在网站的设计和开发中，做好浏览器兼容才能让网站在不同浏览器间都能显示正常。浏览器对标准的更好兼容能够给用户带来更好的使用体验，当然无法奢求浏览器厂商能统一所有浏览器标准，所以前端开发者只能自己着手解决。")]),v._v(" "),e("p",[v._v("以下聊聊处理CSS兼容性的三种方法，相对处理JS兼容性来说简单到不得了，这也是普遍前端开发者认为CSS简单的原因之一。通过以下方法处理，后续编码时就不会编写CSS私有属性了。")]),v._v(" "),e("h5",{attrs:{id:"磨平浏览器默认样式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#磨平浏览器默认样式"}},[v._v("#")]),v._v(" 磨平浏览器默认样式")]),v._v(" "),e("p",[v._v("每个浏览器的CSS默认样式不尽相同，所以最简单最有效的方法就是"),e("code",[v._v("对其默认样式初始化")]),v._v("。以下贴一个各位同学都会的初始化代码。简单暴力但是不明确，"),e("code",[v._v("*")]),v._v("通配符可是有执行性能问题的。")]),v._v(" "),e("p",[e("code",[v._v("* { margin: 0; padding: 0; }")])]),v._v(" "),e("p",[v._v("以下推荐两种磨平浏览器默认样式的方法，在接入其他"),e("code",[v._v("css文件")]),v._v("前将其导入，天下太平，大家都不能拼爹了，都是在同一起跑线上，"),e("code",[v._v("IExplorer")]),v._v("同学你可别抢跑哇，大家都盯着你呢！")]),v._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/necolas/normalize.css",target:"_blank",rel:"noopener noreferrer"}},[v._v("normalize.css"),e("OutboundLink")],1),v._v("：懒人必备的浏览器默认样式库，接近"),e("code",[v._v("40k")]),v._v("的Star，说明大部分人都是懒人")]),v._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/JowayYoung/idea-css/blob/master/css/reset.css",target:"_blank",rel:"noopener noreferrer"}},[v._v("reset.css"),e("OutboundLink")],1),v._v("：其实就是笔者自定义的默认样式，各位同学也可自行为项目撰写一份默认样式")])]),v._v(" "),e("p",[v._v("在项目入口文件的其他"),e("code",[v._v("css文件")]),v._v("前导入，若使用"),e("code",[v._v("burce-cli")]),v._v("，可能发现在"),e("code",[v._v("index.js")]),v._v("里已经提前导入了"),e("code",[v._v("reset.css")]),v._v("。")]),v._v(" "),e("p",[e("code",[v._v('import "path/to/normalize.css"; // 或 import "path/to/reset.css";')])]),v._v(" "),e("h5",{attrs:{id:"插入浏览器私有属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#插入浏览器私有属性"}},[v._v("#")]),v._v(" 插入浏览器私有属性")]),v._v(" "),e("p",[v._v("通常编写CSS都会在一些CSS3属性前加入"),e("code",[v._v("-webkit-")]),v._v("、"),e("code",[v._v("-moz-")]),v._v("、"),e("code",[v._v("-ms-")]),v._v("或"),e("code",[v._v("-o-")]),v._v("，这些奇形怪状写到手软的东西就是"),e("strong",[v._v("浏览器私有属性")]),v._v("。样式少还好，样式多那就欲哭无泪了😂。")]),v._v(" "),e("p",[v._v("出现这些私有属性，是因为制定CSS标准的W3C其动作就像蜗牛一样慢，量产一个CSS属性是需走一个很严格很复杂的流程。一个成熟且被大众肯定的属性，浏览器厂商会加大其支持力度而铺路，但是为了避免日后W3C公布标准时有所变更，就加入一个本厂商的私有属性提前支持该属性，待W3C公布该属性标准后，再让新版浏览器支持标准属性。")]),v._v(" "),e("p",[v._v("对于编写私有属性的顺序需特别注意："),e("strong",[v._v("兼容性写法放到前面，标准写法放到最后")]),v._v("。在浏览器解析CSS过程中，若标准属性无法使用则使用当前浏览器对应的私有属性。")]),v._v(" "),e("p",[e("code",[v._v("/* Chrome、Safari、New Opera、New Edge */ -webkit-transform: translate(10px, 10px); /* Firefox */ -moz-transform: translate(10px, 10px); /* IExplorer、Old Edge */ -ms-transform: translate(10px, 10px); /* Old Opera */ -o-transform: translate(10px, 10px); /* 标准 */ transform: translate(10px, 10px);")])]),v._v(" "),e("p",[v._v("当然不是所有的CSS3属性都需补齐"),e("code",[v._v("-webkit-")]),v._v("、"),e("code",[v._v("-moz-")]),v._v("、"),e("code",[v._v("-ms-")]),v._v("或"),e("code",[v._v("-o-")]),v._v("，上述Demo只是一个示例，真正的"),e("code",[v._v("transform")]),v._v("私有属性只有"),e("code",[v._v("-webkit-")]),v._v("和"),e("code",[v._v("-ms-")]),v._v("。这些需查看"),e("code",[v._v("Caniuse")]),v._v("确保正确的编写，若想偷懒也可全部写上。")]),v._v(" "),e("p",[v._v("每个CSS3属性都编写这么一堆兼容性代码，无疑是对生命最大的浪费。在使用Webpack打包项目代码的过程中，可接入"),e("a",{attrs:{href:"https://github.com/postcss/postcss-loader",target:"_blank",rel:"noopener noreferrer"}},[v._v("postcss-loader"),e("OutboundLink")],1),v._v("和"),e("a",{attrs:{href:"https://github.com/csstools/postcss-preset-env",target:"_blank",rel:"noopener noreferrer"}},[v._v("postcss-preset-env"),e("OutboundLink")],1),v._v("，"),e("code",[v._v("postcss-preset-env")]),v._v("内置了"),e("code",[v._v("autoprefixer")]),v._v("，它会依据"),e("code",[v._v("Caniuse")]),v._v("所提供的数据对代码里的CSS3属性批量添加私有属性。")]),v._v(" "),e("p",[v._v("若使用"),e("code",[v._v("bruce-cli")]),v._v("，那么也无需关注CSS私有属性的插入，因为其内置了"),e("code",[v._v("postcss-loader")]),v._v("和"),e("code",[v._v("postcss-preset-env")]),v._v("。自动化工具的好处就是为了解决一些重复而无趣的工作。")]),v._v(" "),e("h5",{attrs:{id:"css-hack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css-hack"}},[v._v("#")]),v._v(" CSS Hack")]),v._v(" "),e("p",[e("strong",[v._v("CSS Hack")]),v._v("指针对不同浏览器编写不同CSS，让它能够同时兼容不同浏览器，在不同浏览器中渲染想要的效果。当然也可反过来利用"),e("code",[v._v("CSS Hack")]),v._v("为不同版本的浏览器定制不同效果。")]),v._v(" "),e("p",[v._v("在一些老旧网站的"),e("code",[v._v("html文件")]),v._v("或"),e("code",[v._v("css文件")]),v._v("里可能会看到以下代码，没错，这就是"),e("code",[v._v("CSS Hack")]),v._v("。现在可能很多同学都不会遇到这种写法，毕竟很多公司的产品都放弃了"),e("code",[v._v("IExplorer 8")]),v._v("以下的兼容，这些痕迹都已经成为历史。很多同学没想过5年到10年前的前端开发者是多么苦逼的，光兼容"),e("code",[v._v("IExplorer")]),v._v("就已经够烦了，还连续兼容几个版本。")]),v._v(" "),e("p",[e("code",[v._v("<head> \x3c!--[if IE]> <style> .elem { background-color: #f66; } </style> <![endif]--\x3e </head>")])]),v._v(" "),e("p",[e("code",[v._v(".elem { background-color: #f66; /* IExplorer 8+ */ *background-color: #f66; /* IExplorer 7 */ _background-color: #f66; /* IExplorer 6 */ }")])]),v._v(" "),e("p",[v._v("所以现在也不会推荐去学习这些"),e("code",[v._v("CSS Hack")]),v._v("，有一个基本的了解即可。上述"),e("code",[v._v("CSS Hack")]),v._v("写法只是最简单的几行代码，其实还存在一些更难的表达式。当然也不推荐这种写法，毕竟不符合大名鼎鼎的"),e("strong",[v._v("雅虎军规")]),v._v("的"),e("code",[v._v("Avoid CSS Expressions")]),v._v("。")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("综上所述，结合【磨平浏览器默认样式】和【插入浏览器私有属性】这两种方法完成浏览器兼容性的处理即可\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("blockquote",[e("p",[v._v("IExplorer兼容性")])]),v._v(" "),e("p",[v._v("在此也顺带提一个众多前端开发者觉得很头疼的问题，就是"),e("code",[v._v("IExplorer兼容性")]),v._v("。对于现在的同学来说还好，笔者在2014年转行前端时，面试的公司基本是要求前端兼容"),e("code",[v._v("IExplorer 5")]),v._v("和"),e("code",[v._v("IExplorer 6")]),v._v("的。试问一下，兼容一个90年代末00年代初的浏览器版本，是一个多费劲的事情啊，刚好又遇上HTML5和CSS3的迅速发展，是一个技术的取舍问题，要么原地踏步要么紧跟潮流，笔者最终还是选择了后者。")]),v._v(" "),e("p",[v._v("正是"),e("code",[v._v("IExplorer")]),v._v("的垄断性和大部分网站在早期是基于"),e("code",[v._v("IExplorer 6")]),v._v("开发和维护的，导致了后期的用户都是优先使用"),e("code",[v._v("IExplorer 6")]),v._v("浏览，也就造成了很多公司招聘前端开发者都是要标配处理"),e("code",[v._v("IExplorer 6")]),v._v("兼容性。笔者当时也是凭着这个处理"),e("code",[v._v("IExplorer 6")]),v._v("兼容性的技能才顺利转行，不然现在还蹲在医院当个苦逼的医生呢😂。")]),v._v(" "),e("p",[e("code",[v._v("IExplorer")]),v._v("的垄断性使得"),e("code",[v._v("Trident内核")]),v._v("在十多年时间里一家独大，微软公司可能很有信心吧，在很长时间内都无更新"),e("code",[v._v("Trident内核")]),v._v("，导致其曾经与W3C标准完全脱节和大量安全隐患无法得到解决。看过Jquery源码的同学应该都知道，源码里包含了大量的"),e("code",[v._v("IExplorer兼容代码")]),v._v("，所以在移动端上使用"),e("code",[v._v("Jquery")]),v._v("操作DOM是一件很费力不讨好的事情，后面才出现一个叫"),e("code",[v._v("Zepto")]),v._v("的库代替"),e("code",[v._v("Jquery")]),v._v("在移动端上的使用，该库很小，因为删除了所有的"),e("code",[v._v("IExplorer兼容代码")]),v._v("。")]),v._v(" "),e("p",[v._v("在此笔者也建议，在业务需求允许的范围内尽量不要兼容"),e("code",[v._v("IExplorer")]),v._v("，毕竟兼容"),e("code",[v._v("IExplorer")]),v._v("需花费很多时间去维护，更何况微软公司已经宣布不再支持"),e("code",[v._v("IExplorer")]),v._v("的维护而转向"),e("code",[v._v("Edge")]),v._v("。")]),v._v(" "),e("p",[v._v("本小册的核心内容"),e("strong",[v._v("CSS神操作骚技巧")]),v._v("都是基于CSS3和CSS4的标准下讲解，若需兼容"),e("code",[v._v("IExplorer")]),v._v("，那么笔者写本小册就无任何意义了。因为"),e("code",[v._v("IExplorer")]),v._v("压根不兼容后面提到的大部分"),e("strong",[v._v("CSS神操作骚技巧")]),v._v("。笔者曾经在自己公众号粉丝群里与几位同学聊一些浏览器兼容问题，笔者简括了一句："),e("code",[v._v("不搞IExplorer兼容，那就无兼容问题了")]),v._v("。当然这是笔者开的一个玩笑，实际情况还是得依据项目而言。")]),v._v(" "),e("p",[v._v("目前大部分国产浏览器是基于开源内核架构"),e("code",[v._v("Chromium")]),v._v("二次开发的，可认为是"),e("code",[v._v("Chrome")]),v._v("外面又包了一层外壳。另外可能有些国产浏览器打着双内核的旗号，在"),e("code",[v._v("Blink内核")]),v._v("的基础上又增加一个"),e("code",[v._v("Trident内核")]),v._v("。"),e("code",[v._v("Blink内核")]),v._v("对应着浏览器的"),e("strong",[v._v("极速模式")]),v._v("，可访问一些比较现代化和超前技术的网站，例如"),e("code",[v._v("特效网站")]),v._v("和"),e("code",[v._v("可视化网站")]),v._v("；"),e("code",[v._v("Trident内核")]),v._v("对应着浏览器的"),e("strong",[v._v("兼容模式")]),v._v("，可访问一些久经不衰的OG网站，例如"),e("code",[v._v("政务网站")]),v._v("和"),e("code",[v._v("金融网站")]),v._v("。")])])}),[],!1,null,null,null);_.default=r.exports}}]);