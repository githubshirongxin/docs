(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{518:function(s,a,t){"use strict";t.r(a);var e=t(59),i=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("bilibili上git视频学习的学习笔记。挺好的")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E4%B8%80%E8%A3%B8%E4%BB%93%E5%BA%93%E9%83%BD%E6%98%AF%E6%9C%AC%E5%9C%B0git%E6%93%8D%E4%BD%9C%E8%BF%98%E6%B2%A1%E6%9C%89push"}},[s._v("一，裸仓库（都是本地.git/操作，还没有push）")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#12%E8%8A%82"}},[s._v("1,2节")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#3%E8%8A%82%E6%8A%8A%E5%B7%B2%E6%9C%89%E7%9A%84%E4%BB%A3%E7%A0%81%E7%BA%B3%E5%85%A5git%E7%AE%A1%E7%90%86"}},[s._v("3节,把已有的代码纳入git管理")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#04%E8%8A%82-%E7%BB%93%E8%AE%BA"}},[s._v("04节， 结论")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#05-%E8%8A%82%E8%AE%A4%E8%AF%86%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%92%8C%E6%9A%82%E5%AD%98%E5%8C%BA"}},[s._v("05 节.认识工作区和暂存区")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#git-add--a%E5%92%8Cgit-add--git-add--u%E5%9C%A8%E5%8A%9F%E8%83%BD%E4%B8%8A%E7%9C%8B%E4%BC%BC%E5%BE%88%E7%9B%B8%E8%BF%91%E4%BD%86%E8%BF%98%E6%98%AF%E5%AD%98%E5%9C%A8%E4%B8%80%E7%82%B9%E5%B7%AE%E5%88%AB"}},[s._v("git add -A和 git add .   git add -u在功能上看似很相近，但还是存在一点差别")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#06%E8%8A%82"}},[s._v("06节.")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#1%E6%96%87%E4%BB%B6%E9%87%8D%E5%91%BD%E5%90%8D"}},[s._v("1,文件重命名")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#07git-log-%E7%9A%84%E8%BF%87%E6%BB%A4%E6%96%B9%E6%B3%95"}},[s._v("07.git log 的过滤方法")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#08-%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2%E7%9A%84%E6%96%B9%E5%BC%8F%E6%9D%A5%E7%9C%8B%E7%89%88%E6%9C%AC%E5%8E%86%E5%8F%B2"}},[s._v("08. 图形界面的方式来看版本历史")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#09-git%E6%9C%89%E6%9C%80%E4%BC%98%E7%9A%84%E5%AD%98%E5%82%A8%E8%83%BD%E5%8A%9B%E4%B8%8D%E7%94%A8%E8%BF%9C%E7%AB%AF%E5%B0%B1%E7%94%A8%E6%9C%AC%E5%9C%B0%E7%9A%84%E7%AE%A1%E7%90%86%E6%96%B9%E6%B3%95"}},[s._v("09. git有最优的存储能力.不用远端,就用本地的管理方法")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#91-githead"}},[s._v("9.1 .git/HEAD")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#92-gitconfig"}},[s._v("9.2 .git/config")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#93-gitrefs"}},[s._v("9.3 .git/refs")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#94-gitobjects"}},[s._v("9.4 .git/objects")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#10-%E4%B8%89%E7%A7%8D%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%85%B3%E7%B3%BBcommitblobtree"}},[s._v("10. 三种对象类型的关系:commit\\blob\\tree")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#101-%E5%A5%BD%E7%9A%84%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E6%9C%BA%E5%88%B6%E4%BF%9D%E8%AF%81%E5%B0%8F%E5%B7%A7%E4%B8%8D%E4%BC%9A%E8%B6%8A%E6%9D%A5%E8%B6%8A%E5%A4%A7%E6%80%A7%E8%83%BD%E7%9A%84%E5%85%B3%E9%94%AE"}},[s._v("10.1 好的文件存储机制,保证小巧(不会越来越大),性能的关键!")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#102-%E7%9C%8B%E5%90%84%E7%B1%BB%E5%9E%8B%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9%E5%AD%A6%E4%B9%A0%E4%B8%89%E7%A7%8D%E6%96%87%E4%BB%B6%E5%85%B3%E7%B3%BB"}},[s._v("10.2 看各类型文件内容学习三种文件关系")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#11%E6%95%B0%E6%95%B0tree%E7%9A%84%E4%B8%AA%E6%95%B0"}},[s._v("11.数数Tree的个数")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#12%E5%88%86%E7%A6%BB%E5%A4%B4%E6%8C%87%E9%92%88"}},[s._v("12.分离头指针")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#121-%E9%97%AE%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E7%94%A8%E5%88%86%E7%A6%BB%E5%A4%B4%E6%8C%87%E9%92%88%E5%91%A2"}},[s._v("12.1 问:什么时候用分离头指针呢?")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#13-%E8%BF%9B%E4%B8%80%E6%AD%A5%E7%90%86%E8%A7%A3head%E5%92%8Cbranch"}},[s._v("13. 进一步理解HEAD和branch")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#14%E8%8A%82-%E4%B8%80%E4%B8%8D%E5%B0%8F%E5%BF%83%E6%90%9E%E9%94%99%E4%BA%86%E4%B9%8B%E5%90%8E%E6%80%8E%E4%B9%88%E6%B8%85%E9%99%A4%E5%88%86%E6%94%AF"}},[s._v("14节. 一不小心搞错了之后，怎么清除分支？")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#15%E8%8A%82-%E6%B3%A8%E9%87%8A%E5%86%99%E9%94%99%E4%BA%86%E6%80%8E%E4%B9%88%E4%BF%AE%E6%94%B9%E5%B7%B2%E7%BB%8Fcommit%E4%BA%86%E7%9A%84message%E5%86%85%E5%AE%B9%E8%80%8C%E4%B8%94%E6%98%AF%E6%9C%80%E8%BF%91%E4%B8%80%E6%AC%A1commit%E7%9A%84message"}},[s._v("15节. 注释写错了，怎么修改已经commit了的message内容。而且是最近一次commit的message")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#16%E8%8A%82-%E4%BB%A5%E5%89%8D%E6%8F%90%E4%BA%A4%E7%9A%84%E6%B3%A8%E9%87%8A%E5%86%99%E9%94%99%E4%BA%86%E6%80%8E%E4%B9%88%E5%8A%9E"}},[s._v("16节 以前提交的注释写错了怎么办？")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#17%E8%8A%82-%E6%8A%8A%E8%BF%87%E5%8E%BB%E7%9A%84%E5%87%A0%E4%B8%AA%E8%BF%9E%E7%BB%AD%E7%9A%84commit%E5%8E%8B%E7%BC%A9%E6%88%90%E4%B8%80%E4%B8%AAcommit%E9%83%BD%E8%BF%98%E6%B2%A1%E6%9C%89push%E5%93%88push%E8%BF%87%E7%9A%84%E5%B0%B1%E5%88%AB%E5%8A%A8%E4%BA%86"}},[s._v("17节 把过去的几个(连续的)commit压缩成一个commit，都还没有push哈！！！push过的就别动了！！")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#18%E8%8A%82-%E5%8E%86%E5%8F%B2%E4%B8%AD%E5%87%A0%E4%B8%AAcommit%E6%98%AF%E4%B8%8D%E8%BF%9E%E7%BB%AD%E7%9A%84%E4%B9%9F%E8%A6%81%E6%8B%BC%E5%90%88%E5%9C%A8%E4%B8%80%E8%B5%B7%E6%9C%AC%E5%9C%B0%E5%93%88%E8%BF%98%E6%B2%A1push"}},[s._v("18节  历史中几个commit是不连续的，也要拼合在一起。本地哈。还没push")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#19%E8%8A%82-%E5%AE%9E%E9%99%85commit%E4%B9%8B%E5%89%8D%E7%9A%84%E5%A5%BD%E4%B9%A0%E6%83%AF--%E6%A3%80%E6%9F%A5-%E6%9A%82%E5%AD%98%E5%8C%BAadd%E4%B9%8B%E5%90%8E%E7%9A%84%E5%92%8Chead%E6%AF%94%E8%BE%83-diff"}},[s._v("19节 实际commit之前的好习惯-  检查 。暂存区(add之后的)和HEAD比较 diff")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#20%E8%8A%82-%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%92%8C%E6%9A%82%E5%AD%98%E5%8C%BA%E7%9A%84%E6%AF%94%E8%BE%83"}},[s._v("20节 工作区和暂存区的比较")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#21%E8%8A%82-%E5%BE%80%E6%9A%82%E5%AD%98%E5%8C%BA%E9%87%8Cadd%E7%9A%84%E5%8F%98%E6%9B%B4%E8%A7%89%E5%BE%97%E6%B2%A1%E6%9C%89%E6%84%8F%E4%B9%89%E6%88%96%E6%9C%89%E6%9B%B4%E5%A5%BD%E7%9A%84%E6%96%B9%E6%B3%95%E4%BA%86-%E6%9A%82%E5%AD%98%E5%8C%BA%E4%B8%8D%E6%89%93%E7%AE%97commit%E6%83%B3%E6%B8%85%E9%99%A4%E6%9A%82%E5%AD%98%E5%8C%BA%E6%9A%82%E5%AD%98%E5%8C%BA%E4%B8%8Ehead%E4%B8%80%E8%87%B4---reset"}},[s._v("21节 往暂存区里add的变更觉得没有意义或有更好的方法了。 暂存区不打算commit，想清除暂存区(暂存区与HEAD一致) --》reset")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#22%E8%8A%82-%E5%8F%98%E6%9B%B4%E8%BF%9B%E6%9A%82%E5%AD%98%E5%8C%BA%E5%B7%A5%E4%BD%9C%E5%8C%BA%E7%BB%A7%E7%BB%AD%E5%8F%98%E5%90%8E%E6%9D%A5%E4%B8%80%E7%9C%8B%E5%B7%A5%E4%BD%9C%E5%8C%BA%E7%9A%84%E4%B8%8D%E5%8F%8A%E6%9A%82%E5%AD%98%E5%8C%BA%E5%A5%BD%E6%83%B3%E6%8A%8A%E8%AF%A5%E6%96%87%E4%BB%B6%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8C%BA%E7%9A%84%E4%BF%AE%E6%94%B9%E8%BF%94%E5%9B%9E%E6%88%90%E6%9A%82%E5%AD%98%E5%8C%BA%E7%9A%84%E5%86%85%E5%AE%B9%E5%8F%98%E6%9B%B4%E5%B7%A5%E4%BD%9C%E5%8C%BA-checkout"}},[s._v("22节 变更进暂存区，工作区继续变。后来一看工作区的不及暂存区好。想把该文件的工作区的修改返回成暂存区的内容。变更工作区！！！！-》checkout")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#23%E8%8A%82-%E6%9A%82%E5%AD%98%E5%8C%BA%E5%8F%AA%E6%9C%89%E9%83%A8%E5%88%86%E6%96%87%E4%BB%B6%E6%83%B3%E6%81%A2%E5%A4%8D%E6%88%90head%E4%B8%80%E6%A0%B7"}},[s._v("23节 暂存区只有部分文件想恢复成HEAD一样。")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#24%E8%8A%82-%E6%83%B3%E8%AE%A9%E6%9F%90%E4%BA%9Bcommit%E4%BB%8Egit%E4%BB%93%E5%BA%93%E6%B6%88%E5%A4%B1%E5%8F%AA%E8%83%BD%E6%98%AF%E6%9C%80%E5%90%8E%E7%9A%84%E8%BF%9E%E7%BB%AD%E5%87%A0%E6%AC%A1commit%E5%90%A7-reset---hard"}},[s._v("24节 想让某些commit从git仓库消失。（只能是最后的连续几次commit吧）-》reset --hard")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#25%E8%8A%82-%E4%B8%A4%E4%B8%AA%E5%88%86%E6%94%AF%E7%9A%84%E4%B8%8D%E5%90%8C-temp-vs-master-%E4%BB%8D%E6%97%A7%E5%9C%A8git%E6%9C%AC%E5%9C%B0"}},[s._v("25节 两个分支的不同 temp vs master （仍旧在.git本地）")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#26%E8%8A%82-%E5%88%A0%E9%99%A4commit%E7%9A%84%E6%96%87%E4%BB%B6"}},[s._v("26节 删除commit的文件")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#27%E8%8A%82-%E4%BF%9D%E5%AD%98%E5%B7%A5%E4%BD%9C%E4%B8%8A%E4%B8%8B%E6%96%87-git-stash%E6%AD%A3%E5%9C%A8%E4%BF%AE%E6%94%B9%E4%B8%80%E9%83%A8%E5%88%86%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%9C%A8%E6%94%B9%E4%B8%80%E9%83%A8%E5%88%86add%E4%B8%80%E9%83%A8%E5%88%86commit%E6%8E%A5%E5%88%B0%E6%96%B0%E7%9A%84%E4%BB%BB%E5%8A%A1%E8%A6%81%E4%BF%AE%E6%94%B9%E7%9A%84%E4%B9%9F%E6%98%AF%E5%90%8C%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E6%80%8E%E4%B9%88%E5%8A%9E"}},[s._v("27节 保存工作上下文-git stash。正在修改（一部分工作区在改，一部分add，一部分commit），接到新的任务。要修改的也是同一个文件。怎么办？")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#28%E8%8A%82-gitignore%E4%B8%8D%E7%BA%B3%E5%85%A5%E5%88%B0git%E7%AE%A1%E7%90%86%E7%89%88%E6%9C%AC"}},[s._v("28节 .gitignore不纳入到git管理版本。")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#29%E8%8A%82-git%E6%9C%AC%E5%9C%B0%E5%A4%87%E4%BB%BD"}},[s._v("29节 git本地备份")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E4%BA%8C-%E5%88%B0%E8%BF%9C%E7%AB%AF%E5%BC%80%E5%A7%8B%E5%B7%A5%E4%BD%9C%E6%9C%AC%E5%9C%B0%E8%BF%9C%E7%AB%AF%E5%9B%A2%E9%98%9F%E6%93%8D%E4%BD%9C"}},[s._v("二， 到远端开始工作。本地+远端+团队操作")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#30%E8%8A%82-github%E8%B4%A6%E6%88%B7%E5%88%9B%E5%BB%BA"}},[s._v("30节 Github账户创建")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#31%E8%8A%82-%E9%85%8D%E7%BD%AE%E5%85%AC%E9%92%A5%E7%A7%81%E9%92%A5"}},[s._v("31节 配置公钥私钥")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#32%E8%8A%82-%E5%88%9B%E5%BB%BAgithub%E5%BA%93-"}},[s._v("32节 创建Github库  （※）")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#33%E8%8A%82-%E4%B8%8D%E5%90%8C%E4%BA%BA%E4%BF%AE%E6%94%B9%E4%BA%86%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E6%80%8E%E4%B9%88%E5%A4%84%E7%90%86"}},[s._v("33节 不同人修改了不同文件，怎么处理？")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#step1a%E6%A1%91-%E4%BF%AE%E6%94%B9reamde"}},[s._v("STEP1，A桑 修改reamde")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#step2b%E6%A1%91-%E4%BF%AE%E6%94%B9indexhtml"}},[s._v("STEP2，B桑 修改index.html")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#step3--a%E6%A1%91-%E4%BF%AE%E6%94%B9readme"}},[s._v("STEP3 , A桑， 修改readme")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#step4--b%E6%A1%91-push-%E5%A4%B1%E8%B4%A5"}},[s._v("STEP4 , B桑 ，push 失败")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#34%E8%8A%82%E4%B8%A4%E4%B8%AA%E4%BA%BA%E4%BF%AE%E6%94%B9%E7%9B%B8%E5%90%8C%E5%88%86%E6%94%AF%E7%9B%B8%E5%90%8C%E6%96%87%E4%BB%B6%E4%B8%8D%E5%90%8C%E5%8C%BA%E5%9F%9Fgit%E8%BF%98%E6%9C%89%E5%8A%9E%E6%B3%95"}},[s._v("34节，两个人修改相同分支相同文件，！！！不同区域！！，git还有办法！！")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#step1--a%E6%A1%91git2019"}},[s._v("STEP1 , A桑（git2019）")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#step2-b%E6%A1%91suling"}},[s._v("STEP2, B桑（suling）")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#step3a%E6%A1%91%E4%B9%9F%E4%BF%AE%E6%94%B9readme"}},[s._v("STEP3,A桑也修改readme")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#35%E8%8A%82-%E4%B8%A4%E4%B8%AA%E4%BA%BA%E4%BF%AE%E6%94%B9%E5%90%8C%E4%B8%80%E6%96%87%E4%BB%B6%E7%9A%84%E7%9B%B8%E5%90%8C%E5%8C%BA%E5%9F%9F%E8%BF%99%E5%B0%B1%E6%AF%94%E8%BE%83%E9%BA%BB%E7%83%A6%E4%BA%86%E5%86%B2%E7%AA%81"}},[s._v("35节 两个人修改同一文件的相同区域，这就比较麻烦了。冲突")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#step1-a%E6%A1%91b%E6%A1%91-%E9%83%BDpull%E6%88%90%E8%BF%9C%E7%AB%AF%E4%B8%80%E6%A0%B7%E7%9A%84"}},[s._v("STEP1 A桑，B桑 都pull成远端一样的。")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#step2-a%E6%A1%91"}},[s._v("STEP2 A桑，")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#step3-b%E6%A1%91"}},[s._v("STEP3 B桑")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#step4-a%E6%A1%91"}},[s._v("STEP4 A桑")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#36%E8%8A%82-a%E6%A1%91%E6%96%87%E4%BB%B6%E5%90%8D%E5%8F%98%E6%9B%B4b%E6%A1%91%E5%9C%A8%E5%8E%9F%E6%96%87%E4%BB%B6%E5%90%8D%E5%8F%98%E6%9B%B4b%E6%80%8E%E4%B9%88%E6%8F%90%E4%BA%A4"}},[s._v("36节 A桑文件名变更，B桑在原文件名变更。B怎么提交？")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#sete1-a%E6%A1%91"}},[s._v("SETE1 A桑")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#step2-b%E6%A1%91%E4%BF%AE%E6%94%B9indexhtml"}},[s._v("STEP2 B桑修改index.html")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#step3-a%E6%A1%91push"}},[s._v("STEP3, A桑push")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#step4-b%E6%A1%91push"}},[s._v("STEP4, B桑push")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#37%E8%8A%82%E5%A4%9A%E4%BA%BA%E4%BF%AE%E6%94%B9%E5%90%8C%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E7%9A%84%E6%96%87%E4%BB%B6%E5%90%8Da%E6%A1%91pushb%E6%80%8E%E4%B9%88push"}},[s._v("37节，多人修改同一个文件的文件名。A桑push，B怎么push")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#a%E6%A1%91-%E6%94%B9indexhtm-index1html"}},[s._v("A桑 改index.htm index1.html")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#b%E6%A1%91%E6%94%B9indexhtm--index2html"}},[s._v("B桑，改index.htm ->index2.html")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#a%E6%A1%91push"}},[s._v("A桑，push")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#39%E8%8A%82-%E7%A6%81%E6%AD%A2%E5%90%91%E9%9B%86%E6%88%90%E5%88%86%E6%94%AF%E6%89%A7%E8%A1%8Cpush--f-%E6%93%8D%E4%BD%9C"}},[s._v("39节 禁止向集成分支执行push -f 操作")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#40%E8%8A%82-%E7%A6%81%E6%AD%A2%E5%90%91%E9%9B%86%E6%88%90%E5%88%86%E6%94%AF%E5%81%9Arebase"}},[s._v("40节 禁止向集成分支做rebase")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#41%E8%8A%82-github%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%99%E4%B9%88%E7%81%AB-20082020%E5%B9%B4-3%E5%8D%83%E4%B8%87%E7%94%A8%E6%88%B71%E4%BA%BF%E5%BA%93"}},[s._v("41节 Github为什么这么火 2008~2020年 ，3千万用户，1亿库")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#42%E8%8A%82-github%E6%9C%89%E5%93%AA%E4%BA%9B%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD"}},[s._v("42节 Github有哪些核心功能？")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#43%E8%8A%82-%E6%80%8E%E4%B9%88%E6%90%9C%E7%B4%A2github%E4%B8%8A%E7%9A%84%E9%A1%B9%E7%9B%AE"}},[s._v("43节 怎么搜索Github上的项目")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#1-%E6%A0%B9%E6%8D%AE%E5%BA%93%E7%9A%84%E4%BF%A1%E6%81%AF%E6%90%9C%E7%B4%A2"}},[s._v("1， 根据库的信息搜索")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#2%E6%A0%B9%E6%8D%AEcode%E6%90%9C%E7%B4%A2"}},[s._v("2，根据Code搜索")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#44%E8%8A%82-github%E4%B8%8A%E5%BB%BAblog"}},[s._v("44节 Github上建blog")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#45%E8%8A%82-%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E8%B4%A8%E9%87%8F"}},[s._v("45节 如何保证开源项目质量")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#46%E8%8A%82github%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E7%BB%84%E7%BB%87%E6%9D%A5%E7%AE%A1%E7%90%86"}},[s._v("46节，Github为什么需要组织来管理")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#47%E8%8A%82%E5%88%9B%E5%BB%BA%E7%BB%84%E7%BB%87%E7%9A%84%E4%BB%93%E5%BA%93"}},[s._v("47节，创建组织的仓库")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#48%E8%8A%82%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E8%87%AA%E5%B7%B1%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81"}},[s._v("48节，如何选择自己的工作流")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#49%E8%8A%82%E5%87%A0%E4%B8%AA%E5%88%86%E6%94%AF%E5%81%9A%E9%9B%86%E6%88%90%E7%9A%84%E7%AD%96%E7%95%A5"}},[s._v("49节，几个分支做集成的策略")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#50%E8%8A%82-github%E7%9A%84issue"}},[s._v("50节 Github的issue")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#51%E8%8A%82-github%E7%9A%84project%E7%9C%8B%E6%9D%BF%E7%AE%A1%E7%90%86issue"}},[s._v("51节 Github的project看板，管理issue")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#52%E8%8A%82-github-codereview"}},[s._v("52节， Github codereview")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#53%E8%8A%82%E4%BF%9D%E8%AF%81%E9%9B%86%E6%88%90%E8%B4%A8%E9%87%8Fci"}},[s._v("53节，保证集成质量CI")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#54%E8%8A%82release%E5%8A%9F%E8%83%BD%E6%94%BEwar%E5%8C%85%E7%9A%84%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F"}},[s._v("54节，release功能（放war包的共享文件系统）")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#55%E8%8A%82%E6%80%8E%E4%B9%88%E5%86%99%E6%96%87%E6%A1%A3-github%E7%9A%84wiki%E5%B0%B1%E6%98%AFmd%E6%96%87%E4%BB%B6"}},[s._v("55节，怎么写文档 Github的Wiki就是md文件")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#56%E8%8A%82%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BA%92%E8%81%94%E7%BD%91%E5%96%9C%E6%AC%A2gitlab%E8%80%8C%E4%B8%8D%E6%98%AFgithub"}},[s._v("56节，为什么互联网喜欢gitlab而不是github")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#57%E8%8A%82gitlab%E7%9A%84%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD"}},[s._v("57节，Gitlab的核心功能")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#58%E8%8A%82gitlab%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86"}},[s._v("58节，Gitlab项目管理")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#59%E8%8A%82gitlab%E4%B8%8Acodereview"}},[s._v("59节，Gitlab上Codereview")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#60%E8%8A%82gitlab%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E9%9B%86%E6%88%90%E8%B4%A8%E9%87%8F"}},[s._v("60节，Gitlab如何保证集成质量？")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#61%E8%8A%82gitlab%E5%B7%A5%E7%A8%8B%E5%8F%91%E5%B8%83%E5%88%B0aws%E4%B8%8A"}},[s._v("61节，Gitlab工程发布到aws上")])])])])]),s._v(" "),t("h2",{attrs:{id:"一，裸仓库（都是本地-git-操作，还没有push）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一，裸仓库（都是本地-git-操作，还没有push）"}},[s._v("#")]),s._v(" 一，裸仓库（都是本地.git/操作，还没有push）")]),s._v(" "),t("h3",{attrs:{id:"_1-2节"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2节"}},[s._v("#")]),s._v(" 1,2节")]),s._v(" "),t("p",[s._v("略")]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"_3节-把已有的代码纳入git管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3节-把已有的代码纳入git管理"}},[s._v("#")]),s._v(" 3节,把已有的代码纳入git管理")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ cd 项目代码所在文件夹\n$ git init\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("// 看看是不是设置成功了"),t("br"),s._v(" "),t("code",[s._v("$ git config --global --list")]),t("br"),s._v("\nfilter.lfs.required=true\nfilter.lfs.clean=git-lfs clean -- %f\nfilter.lfs.smudge=git-lfs smudge -- %f\nfilter.lfs.process=git-lfs filter-process\nuser.name=shirongxin\nuser.email=shirx@ccbjb.com.cn\ncredential.helper=store")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ git config --local user.name 'tuoyekang'\n$ git config --local user.email 'tuoyekang@126.com'\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("// 看看是不是设置成功了")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("//注意这里是local不是global\n$ git config --local --list\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("core.repositoryformatversion=0\ncore.filemode=false\ncore.bare=false\ncore.logallrefupdates=true\ncore.symlinks=false\ncore.ignorecase=true\nuser.name=tuoyekang\nuser.email=tuoyekang@126.com")]),s._v(" "),t("p",[s._v("//【课题】local和global设置的用户名不一样。push到底用哪个？")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('cp ../f1/README.md .\n$ git commit -m "add readme."\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("On branch master\nInitial commit\nUntracked files:    //错误：该文件还没有被git管控，所以用git commit是不生效的。\nREADME.md\nnothing added to commit but untracked files present")]),s._v(" "),t("p",[t("code",[s._v("$ git add README.md")])]),s._v(" "),t("p",[s._v("warning: LF will be replaced by CRLF in README.md.\nThe file will have its original line endings in your working directory.")]),s._v(" "),t("p",[t("code",[s._v("$ git status")]),t("br"),s._v('\nOn branch master\nNo commits yet\nChanges to be committed:\n(use "git rm --cached '),t("file",[s._v('..." to unstage)\nnew file:   README.md')])],1),s._v(" "),t("p",[t("code",[s._v('git commit -m "add README.md"')]),t("br"),s._v("\n[master (root-commit) b43a16a] add README.md\n1 file changed, 1 insertion(+)\ncreate mode 100644 README.md")]),s._v(" "),t("p",[t("code",[s._v("git log")]),t("br"),s._v("\n//真的创建了 。"),t("strong",[s._v("注意：作者是loca user不是global user！")]),t("br"),s._v("\ncommit b43a16a5d2e9e2079558e1211f45cf218dc73cc7 (HEAD -> master)"),t("br"),s._v("\nAuthor: tuoyekang "),t("a",{attrs:{href:"mailto:tuoyekang@126.com"}},[s._v("tuoyekang@126.com")]),t("br"),s._v("\nDate:   Fri Jun 19 16:14:19 2020 +0800"),t("br"),s._v("\nadd README.md")]),s._v(" "),t("p",[t("code",[s._v("$ git config --global user.name")]),t("br"),s._v("\nshirongxin")]),s._v(" "),t("p",[t("code",[s._v("$ git config --local user.name")]),t("br"),s._v("\ntuoyekang")]),s._v(" "),t("h3",{attrs:{id:"_04节，-结论"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_04节，-结论"}},[s._v("#")]),s._v(" 04节， 结论")]),s._v(" "),t("ul",[t("li",[s._v("global 和 local都设置好之后，local优先级更高。")]),s._v(" "),t("li",[s._v("git init 之后马上commit是不行的，得先git add。")])]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"_05-节-认识工作区和暂存区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_05-节-认识工作区和暂存区"}},[s._v("#")]),s._v(" 05 节.认识工作区和暂存区")]),s._v(" "),t("p",[t("img",{attrs:{src:"/docs/images/2020-06-19-16-26-02.png",alt:"暂存区和工作区的理解"}}),s._v("\n工作区：add前\n暂存区：add后 commit前\n版本历史：commit之后")]),s._v(" "),t("p",[s._v("/c/markdownRpo/git/git_learning")]),s._v(" "),t("p",[t("code",[s._v("git add index.html images")])]),s._v(" "),t("p",[t("code",[s._v("git status")])]),s._v(" "),t("p",[t("code",[s._v("mkdir styles")])]),s._v(" "),t("p",[t("code",[s._v("cp ../f1/styles.css ./styles/styles.css")])]),s._v(" "),t("p",[t("code",[s._v("git add styles/styles.css")])]),s._v(" "),t("p",[t("code",[s._v("git status")])]),s._v(" "),t("p",[t("code",[s._v('git commit -m"add style"')])]),s._v(" "),t("p",[t("code",[s._v("git log")])]),s._v(" "),t("p",[s._v("//增加一点动画"),t("br"),s._v(" "),t("code",[s._v("cp -f ../f1/js/scrips.js .")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git add js\ngit commit -m'add js'\ngit log\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("//增加参考项目,修改header.html怎加页脚，并编辑css改变页脚风格"),t("br"),s._v(" "),t("code",[s._v("git status")]),t("br"),s._v("\n提示两个文件修改了"),t("br"),s._v(" "),t("code",[s._v("git add -u")]),s._v(" //一起add不必写所有文件名"),t("br"),s._v(" "),t("code",[s._v("git commit -m'Add refering prj'")]),s._v(" //一起提交"),t("br"),s._v(" "),t("code",[s._v("git log")])]),s._v(" "),t("p",[t("font",{attrs:{color:"red"}},[s._v("#### git好习惯总结:  ")])],1),s._v(" "),t("p",[t("em",[s._v("为了做某件事情,把改增加或修改的文件,放到git add进来,然后等都修改好了之后,测试功能实现了,再一次性git commit.")])]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"git-add-a和-git-add-git-add-u在功能上看似很相近，但还是存在一点差别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-add-a和-git-add-git-add-u在功能上看似很相近，但还是存在一点差别"}},[s._v("#")]),s._v(" git add -A和 git add .   git add -u在功能上看似很相近，但还是存在一点差别")]),s._v(" "),t("p",[s._v("**git add . **：他会监控工作区的状态树，使用它会把工作时的所有变化提交到暂存区，包括文件内容修改(modified)以及新文件(new)，但不包括被删除的文件。")]),s._v(" "),t("p",[s._v("**git add -u **：他仅监控已经被add的文件（即tracked file），他会将被修改的文件提交到暂存区。add -u 不会提交新文件（untracked file）。（git add --update的缩写）")]),s._v(" "),t("p",[s._v("**git add -A **：是上面两个功能的合集（git add --all的缩写）")]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"_06节"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_06节"}},[s._v("#")]),s._v(" 06节.")]),s._v(" "),t("h4",{attrs:{id:"_1-文件重命名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-文件重命名"}},[s._v("#")]),s._v(" 1,文件重命名")]),s._v(" "),t("p",[t("code",[s._v("mv README.md readme.md")]),t("br"),s._v(" "),t("code",[s._v("git status")]),t("br"),s._v("\n//显示你把README.md删掉了,同时你又新增了一个readme.md")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git add readme.md\ngit rm README.md\ngit status\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("//显示renamed : README.md -> readme.md")]),s._v(" "),t("p",[t("code",[s._v("git reset --hard")]),s._v("  //暂存区所有的变更都被清除掉.\n"),t("code",[s._v("git status")]),s._v("\n并没有破坏git的历史,就是暂存区是干净的")]),s._v(" "),t("p",[t("strong",[s._v("其实git mv 命令就可以改名字,一步=两步")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git mv README.md readme.md\ngit status\ngit commit -m'Move README to readme'\ngit log\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("hr"),s._v(" "),t("h3",{attrs:{id:"_07-git-log-的过滤方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_07-git-log-的过滤方法"}},[s._v("#")]),s._v(" 07.git log 的过滤方法")]),s._v(" "),t("p",[t("code",[s._v("git log --oneline")]),s._v(" //非常简洁地一次commit一行地格式输入历史")]),s._v(" "),t("p",[t("code",[s._v("git log -n4 --oneline")]),s._v(" //只需要最近的4次commit注释")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git branch -v  //查看当前分支  \n\n//创建一个分支基于某版本ID叫temp分支,并切换到该分支\ngit checkout -b temp  版本ID(每次commit会产生一个)的前部分即可不用写全  \n\nvi readme.md //稍作修改\ngit commit -m\"add test\"\ngit commit -am'add test' //强制创建到历史版本库\ngit branch -av //查看分支(的最后一次提交的版本)\ngit log //只看当前分支的历史(现在是HEAD->temp)\ngit log all //所有分支的历史(temp,master)\n//查看分支指向了哪个commit\n\ngit log --all --graph //图形化地查看分支\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[t("strong",[s._v("总结:(这个命令就等于生产力)")]),s._v("\n// 简化版,最近4个commit,所有分支,图形界面看commit历史\n"),t("code",[s._v("git log --oneline --all -n4 --graph")])]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"_08-图形界面的方式来看版本历史"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_08-图形界面的方式来看版本历史"}},[s._v("#")]),s._v(" 08. 图形界面的方式来看版本历史")]),s._v(" "),t("p",[t("code",[s._v("gitk")]),s._v(" //弹出图形化\n"),t("img",{attrs:{src:"/docs/images/2020-06-19-18-19-34.png",alt:""}})]),s._v(" "),t("blockquote",[t("p",[s._v("切换成tree之后,显示的是文件目录的所有内容.Patch应该是变化的内容")]),s._v(" "),t("blockquote",[t("p",[s._v("作者:A桑,提交人:B桑 .这种情况:B从A的某个提交作为分支,作者保留为A桑.")])]),s._v(" "),t("blockquote",[t("p",[s._v("A提交是有Child的.Child指:以A为基础的一次提交B.B就是A的Child.就像子子孙孙传承串,子永远是新的提交.")])]),s._v(" "),t("blockquote",[t("p",[s._v("Branche:和这次提交产生关联的分支.可能一个也可能多个.")])])]),s._v(" "),t("p",[s._v("gitk 可以定制查看版本历史的内容\n"),t("img",{attrs:{src:"/docs/images/2020-06-19-18-26-43.png",alt:"view"}})]),s._v(" "),t("ol",[t("li",[s._v("new view")]),s._v(" "),t("li",[s._v("all refs //查看所有branch信息\n"),t("img",{attrs:{src:"/docs/images/2020-06-19-18-27-54.png",alt:""}})]),s._v(" "),t("li",[s._v("还可以在上图上右键,有很多功能,例如tag.\n"),t("img",{attrs:{src:"/docs/images/2020-06-19-18-28-43.png",alt:""}})])]),s._v(" "),t("p",[s._v("以后会打开这个gitk,看看现在变更成什么样子了.")]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"_09-git有最优的存储能力-不用远端-就用本地的管理方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_09-git有最优的存储能力-不用远端-就用本地的管理方法"}},[s._v("#")]),s._v(" 09. git有最优的存储能力.不用远端,就用本地的管理方法")]),s._v(" "),t("h4",{attrs:{id:"_9-1-git-head"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-git-head"}},[s._v("#")]),s._v(" 9.1 .git/HEAD")]),s._v(" "),t("p",[t("code",[s._v("git init")]),s._v(" // 生成git的文件夹.\n"),t("code",[s._v("cd .git")]),s._v(" // 其中HEAD\n"),t("img",{attrs:{src:"/docs/images/2020-06-19-18-30-26.png",alt:""}}),s._v(" "),t("code",[s._v("cat HEAD")]),s._v(" // 查看当前分支\nref:refs/heads/temp")]),s._v(" "),t("p",[s._v("//[lab]切换分支,看看HEAD内容会不会变")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("cd ..\ngit checkout master\ncat ./git/HEAD\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("ref:refs/heads/master")]),s._v(" "),t("h4",{attrs:{id:"_9-2-git-config"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-git-config"}},[s._v("#")]),s._v(" 9.2 .git/config")]),s._v(" "),t("p",[t("code",[s._v("cat .git/config")]),t("br"),s._v("\n//输出"),t("strong",[s._v("local")]),s._v(" config")]),s._v(" "),t("p",[t("code",[s._v("修改config文件,把名字改为shirongxin")])]),s._v(" "),t("p",[t("code",[s._v("git config --local --list")]),s._v(" "),t("code",[s._v("git config --local user.name")]),s._v("\n输出shirongxin")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git config --local user.name 'tuoyekang'\ncat .git/config\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("输出tuoyekang")]),s._v(" "),t("p",[t("strong",[s._v("结论:.git/config就是记录local config的地方,命令改的就是这,所以可以直接该文件.git/config来修改local user.name local user.email")])]),s._v(" "),t("h4",{attrs:{id:"_9-3-git-refs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-git-refs"}},[s._v("#")]),s._v(" 9.3 .git/refs")]),s._v(" "),t("p",[s._v("进入看看里面的文件内容.")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("cd refs //显示heads,tags两个目录\ncd heads \nls -al //显示master,temp两个文件\ncat master // 是一个长字符串(commit的hash值)\ngit cat-file -t 把上个命令的长字符串的前一部分贴到这 // 看文件类型.结果是:commit\ngit branch -av // 查看所有分支\n//master 指向了上面那个长字符串(截取前面一部分7个字符)\ncat temp // 同上,一个长字符B,是temp分支的commit文件.\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[t("strong",[s._v("结论:.git/refs下面就是所有分支的指针指向的commit.还有tags指向的commit")])]),s._v(" "),t("h4",{attrs:{id:"_9-4-git-objects"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-4-git-objects"}},[s._v("#")]),s._v(" 9.4 .git/objects")]),s._v(" "),t("p",[s._v("进入后,有两个字符的目录 , info , pack")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("cd e8\nls -al //显示一串,例如abc...z(40位)\ngit cat-file -t e8abc...z //把e8 放在长串前面. 结果:tree\ngit cat-file -p e8abc...z //看这tree的文件内容. 结果:文件的size,blog,文件的hash值,文件名\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("strong",[s._v("结论:三种文件类型 commit,tree ,blob,")])]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"_10-三种对象类型的关系-commit-blob-tree"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-三种对象类型的关系-commit-blob-tree"}},[s._v("#")]),s._v(" 10. 三种对象类型的关系:commit\\blob\\tree")]),s._v(" "),t("h4",{attrs:{id:"_10-1-好的文件存储机制-保证小巧-不会越来越大-性能的关键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-好的文件存储机制-保证小巧-不会越来越大-性能的关键"}},[s._v("#")]),s._v(" 10.1 好的文件存储机制,保证小巧(不会越来越大),性能的关键!")]),s._v(" "),t("p",[s._v("先看看图,一会再执行具体命令.\n"),t("img",{attrs:{src:"/docs/images/2020-06-19-19-10-44.png",alt:""}})]),s._v(" "),t("ul",[t("li",[s._v("tree就是文件夹 ,例如images ,例如styles")]),s._v(" "),t("li",[s._v("blog就是具体某个文件,例如index.html , readme.md\n"),t("font",{attrs:{color:"red",size:"3"}},[t("em",[s._v("只要文件内容相同,git就认为是一份blob,大大节约存储空间")])])],1),s._v(" "),t("li",[s._v("commit就是一次提交")])]),s._v(" "),t("h4",{attrs:{id:"_10-2-看各类型文件内容学习三种文件关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-看各类型文件内容学习三种文件关系"}},[s._v("#")]),s._v(" 10.2 看各类型文件内容学习三种文件关系")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git branch -v\n// show current branch\ngit log\n// show commit hash\ngit cat-file -p [commit's hash]\n// tree hash\ngit cat-file -p [tree's hash]\n// show blob hash\ngit cat-file -p [blob's hash]\n// show file content\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("hr"),s._v(" "),t("h3",{attrs:{id:"_11-数数tree的个数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-数数tree的个数"}},[s._v("#")]),s._v(" 11.数数Tree的个数")]),s._v(" "),t("p",[t("img",{attrs:{src:"/docs/images/2020-06-19-19-19-35.png",alt:""}})]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git init watch_git_objects\ncd watch_git_objects\nmkdir doc\ncd doc\necho \"hello world\" > readme\ngit status\n\nfind .git/objects -type f\n//没有新东西\n\n//1,add\ngit add doc\nfind .git/objects -type f\n//有新东西 hashcode\n\ngit cat-file -t hashcode\ngit cat-file -p hashcode\n\n//2,commit\ngit commit -m'add readme'\nfind .git/objects -type f\n//竟然生成4个文件,依次看看文件类型和内容\ngit cat-file -t hashcode\ngit cat-file -p hashcode\n//前两个分别是doc目录和readme文件. \n//第三个文件也是tree,也是doc文件夹.\n//最后一个文件是commit\n\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br")])]),t("p",[t("strong",[s._v("结论:两个tree(watch_git_objects目录,doc目录),一个blog,一个commit")])]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"_12-分离头指针"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-分离头指针"}},[s._v("#")]),s._v(" 12.分离头指针")]),s._v(" "),t("p",[s._v("很有用")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git log\ngit checkout commitHash // in detached HEAD \n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("你可以继续开发,没有对应任何分支.\n"),t("strong",[s._v("假设每天你接到fix任务需要切换到某个branche,那么这个分离头指针的所有变更都将被清除")])]),s._v(" "),t("h4",{attrs:{id:"_12-1-问-什么时候用分离头指针呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-问-什么时候用分离头指针呢"}},[s._v("#")]),s._v(" 12.1 问:什么时候用分离头指针呢?")]),s._v(" "),t("p",[s._v("答:原本就是不想提交的尝试性修改.")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("ls -al\nvi ./style/style.css //修改一下颜色\ngit status //又提示我们HEAD detached at 红字\ngit commit -am'不用add直接commit' // 没经过add,直接能commit\ngit log\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("HEAD的位置一般显示master或分支名.这里直接显示HEAD(而不是任何分支名),这就是分离头指针\n"),t("img",{attrs:{src:"/docs/images/2020-06-19-19-47-00.png",alt:"分离头指针"}})]),s._v(" "),t("p",[s._v("假设,有人让我fixbug,我得切换到别的分支")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git branch -av\ngit checkout master\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("font",{attrs:{color:"red",size:"3"}},[s._v("有个重要提示:you are leaving 1commit behind,\nnot connect to any of your branches.If you want to keyy it by\ncreating a new branch ,"),t("strong",[s._v("git branch new-branch-name hash")])]),s._v("看到这个马上qu去创建一个branch保存这次修改，然后再去切换到别的分支。")],1),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git branch new-branch-name hash //本该做这个，如果不做，下面的操作会让这些commit消失\ngit checkout master\ngitk -all //查看不到在分离头指针上的任何修改！！！切记！！\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("hr"),s._v(" "),t("h3",{attrs:{id:"_13-进一步理解head和branch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_13-进一步理解head和branch"}},[s._v("#")]),s._v(" 13. 进一步理解HEAD和branch")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git branch -av\ngit log  //HEAD 不仅可以指向具体分支，还可以指向具体commit（ 指向具体非branch的时候，就处于分离头指针的状态了!!）\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("img",{attrs:{src:"/docs/images/2020-06-19-20-04-00.png",alt:""}})]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git checkout -b fix_readme hash(可以commit或分支的hash)//创建分支（新建分支）并切换、\ngit log\ngitk --all\ncat ./git/HEAD // 指向fix_readme分支\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[t("img",{attrs:{src:"/docs/images/2020-06-19-20-03-11.png",alt:""}})]),s._v(" "),t("p",[t("strong",[s._v("总结：")])]),s._v(" "),t("ul",[t("li",[s._v("HEAD可以某个commit或分支或tag。")]),s._v(" "),t("li",[s._v("HEAD指向非分支的commit的时候，是分离头指针状态")]),s._v(" "),t("li",[s._v("当切换分支的时候HEAD也就指向了该分支")]),s._v(" "),t("li",[s._v("分支是什么？分支最后也落脚到某个具体的commit。")])]),s._v(" "),t("blockquote",[t("p",[s._v("cat ./git/refs/heads/fix_readme //得到hash\ngit cat-file -t 该hash //得到commit类型")])]),s._v(" "),t("p",[t("code",[s._v("git diff 具体两个commit //查看两个commit不同")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("//三条命令效果一样，比较HEAD与HEAD的父亲\ngit diff HEAD HEAD~1\ngit diff HEAD HEAD^1\ngit diff HEAD HEAD^\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("//比较HEAD和HEAD的爷爷\ngit diff HEAD HEAD^^\ngit diff HEAD HEAD~2\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"_14节-一不小心搞错了之后，怎么清除分支？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_14节-一不小心搞错了之后，怎么清除分支？"}},[s._v("#")]),s._v(" 14节. 一不小心搞错了之后，怎么清除分支？")]),s._v(" "),t("p",[t("code",[s._v("git branch -av")]),s._v("\n创建了没什么意义的分支，怎么删除？\n先看看分支的树结构,想删除"),t("strong",[s._v("fix_readme,9c68")]),s._v(" "),t("code",[s._v("gitk --all")]),s._v(" "),t("img",{attrs:{src:"/docs/images/2020-06-19-20-39-35.png",alt:""}})]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git branch -d 9c68xxx // 分支名。\n//删不掉用 -D\ngit branch -D 9c68xxx\n\ngitk --all // 9c68xxx不见了\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[t("img",{attrs:{src:"/docs/images/2020-06-19-20-41-51.png",alt:""}})]),s._v(" "),t("p",[s._v("接着删除fix_readme分支")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git branch -D fix_readme\ngit branch -av //就剩下两个\ngitk --all\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("strong",[s._v("总结：")]),s._v("\n&ensp 删分支：git branch -D 9c68xxx（分支hash）")]),s._v(" "),t("h3",{attrs:{id:"_15节-注释写错了，怎么修改已经commit了的message内容。而且是最近一次commit的message"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_15节-注释写错了，怎么修改已经commit了的message内容。而且是最近一次commit的message"}},[s._v("#")]),s._v(" 15节. 注释写错了，怎么修改已经commit了的message内容。而且是最近一次commit的message")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git log -1\ngit commit --amend //进入修正界面，像vi一样修改\ngit log -1 //比对一下message。真的变了\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("注意：是最近一次commit的提交才行")]),s._v(" "),t("h3",{attrs:{id:"_16节-以前提交的注释写错了怎么办？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_16节-以前提交的注释写错了怎么办？"}},[s._v("#")]),s._v(" 16节 以前提交的注释写错了怎么办？")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git log -3\n/**\nmessage是commit对象的属性。但是改的不是commit本身而是指定了他的父亲。\n进去之后是交互式（vi）修改\n**/\ngit rebase -i commit的父亲的Hash  \n// 1，显示 pick xxx\n// 修改处理策略 pick 修改成reword或r 。然后：x -》又弹出另外一个交互\n// 2，编辑message，退出来\n\ngit log -3 //确认一下是否修改\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[t("strong",[s._v("总结：变基git rebase commit的父亲hash  //修改以前的注释")])]),s._v(" "),t("p",[t("strong",[t("font",{attrs:{size:"4",color:"red"}},[s._v("注意：目前为止都没有分享给别人，都是自己本地操作！！！！都是自己本地操作！！！！")])],1)]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"_17节-把过去的几个-连续的-commit压缩成一个commit，都还没有push哈！！！push过的就别动了！！"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17节-把过去的几个-连续的-commit压缩成一个commit，都还没有push哈！！！push过的就别动了！！"}},[s._v("#")]),s._v(" 17节 把过去的几个(连续的)commit压缩成一个commit，都还没有push哈！！！push过的就别动了！！")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git branch -av\ngit log \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("从倒数第二个commit到正数第二个commit合并成一个commit。\n都还没有push，所以可以整理一下\n"),t("img",{attrs:{src:"/docs/images/2020-06-22-09-15-25.png",alt:""}})]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase -i\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"/docs/images/2020-06-22-09-15-51.png",alt:""}}),s._v(" "),t("strong",[s._v("修改")]),s._v("：第一个pick，剩下的squash，最后第一个pick 。 保存\n"),t("img",{attrs:{src:"/docs/images/2020-06-22-09-17-48.png",alt:""}}),s._v(" "),t("img",{attrs:{src:"/docs/images/2020-06-22-09-18-14.png",alt:""}}),s._v("\n这样就改完了，再看看")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log --graph\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("合并后的commit是一个新的commit。它的子节点也变了。但是内容没变。\n"),t("img",{attrs:{src:"/docs/images/2020-06-22-09-18-56.png",alt:""}})]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"_18节-历史中几个commit是不连续的，也要拼合在一起。本地哈。还没push"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_18节-历史中几个commit是不连续的，也要拼合在一起。本地哈。还没push"}},[s._v("#")]),s._v(" 18节  历史中几个commit是不连续的，也要拼合在一起。本地哈。还没push")]),s._v(" "),t("p",[t("img",{attrs:{src:"/docs/images/2020-06-22-09-21-06.png",alt:"把第一个和第三个commit合并"}})]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase -i f09122cf\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"/docs/images/2020-06-22-09-27-56.png",alt:""}}),s._v("\n增加一行：pick f019122c\n修改： s 5cc5aa3 （意思是和第一行f019122c合并）\n不动：pick 34e735\n删除；pick 5cc5aa3 (多余，因为上面已经把它的内容合并到f019122c里了)")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log --graph\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"/docs/images/2020-06-22-09-31-15.png",alt:""}})]),s._v(" "),t("p",[s._v("这样版本上就干干净净的了，因为coomit ID变了，所以就有了两个树！！\n"),t("img",{attrs:{src:"/docs/images/2020-06-22-09-33-15.png",alt:""}}),s._v("\n上面的是需要保留的。下面的就没有用了。\n"),t("img",{attrs:{src:"/docs/images/2020-06-22-09-33-47.png",alt:""}})]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"_19节-实际commit之前的好习惯-检查-。暂存区-add之后的-和head比较-diff"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_19节-实际commit之前的好习惯-检查-。暂存区-add之后的-和head比较-diff"}},[s._v("#")]),s._v(" 19节 实际commit之前的好习惯-  检查 。暂存区(add之后的)和HEAD比较 diff")]),s._v(" "),t("p",[s._v("先做一个文件内容变更")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" index.html\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" --cached // cache表示暂存区和HEAD的比较，文件名不用写！！\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("再变一下")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git add index.html\ngit diff --cached // 暂存区 vs HEAD\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("再commit一下")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git commit -m'add the first git command with config'\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"_20节-工作区和暂存区的比较"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20节-工作区和暂存区的比较"}},[s._v("#")]),s._v(" 20节 工作区和暂存区的比较")]),s._v(" "),t("p",[s._v("先修改一下index.html还没有add到暂存区\n工作区（没add之前=真正的本地）,和暂存区差异")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git diff // 工作区 vs 暂存区\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("再修改一下readme.md")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git diff  // 工作区 vs 暂存区\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("查看具体文件(可多个)的差别")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git diff -- readme.md index.html // 工作区 vs 暂存区\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"_21节-往暂存区里add的变更觉得没有意义或有更好的方法了。-暂存区不打算commit，想清除暂存区-暂存区与head一致-》reset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_21节-往暂存区里add的变更觉得没有意义或有更好的方法了。-暂存区不打算commit，想清除暂存区-暂存区与head一致-》reset"}},[s._v("#")]),s._v(" 21节 往暂存区里add的变更觉得没有意义或有更好的方法了。 暂存区不打算commit，想清除暂存区(暂存区与HEAD一致) --》reset")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git status\ngit reset HEAD //恢复暂存区与head一致\ngit status\ngit diff --cached \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h3",{attrs:{id:"_22节-变更进暂存区，工作区继续变。后来一看工作区的不及暂存区好。想把该文件的工作区的修改返回成暂存区的内容。变更工作区！！！！-》checkout"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_22节-变更进暂存区，工作区继续变。后来一看工作区的不及暂存区好。想把该文件的工作区的修改返回成暂存区的内容。变更工作区！！！！-》checkout"}},[s._v("#")]),s._v(" 22节 变更进暂存区，工作区继续变。后来一看工作区的不及暂存区好。想把该文件的工作区的修改返回成暂存区的内容。变更工作区！！！！-》checkout")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git checkout  -- index.html // 暂存区->工作区\ngit diff   // 工作区 vs 暂存区\ncat index.html //已经恢复成暂存区了。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"_23节-暂存区只有部分文件想恢复成head一样。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_23节-暂存区只有部分文件想恢复成head一样。"}},[s._v("#")]),s._v(" 23节 暂存区只有部分文件想恢复成HEAD一样。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git reset HEAD --style/style.css //恢复暂存区成HEAD\ngit diff --cached // 暂存区 vs HEAD\ngit status \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("//把另外两个文件也变成和HEAD一样。从暂存区中撤销出来，就没有commit的必要了")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git reset HEAD -- index.html readme.md // 暂存区两个文件恢复成HEAD\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"_24节-想让某些commit从git仓库消失。（只能是最后的连续几次commit吧）-》reset-hard"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_24节-想让某些commit从git仓库消失。（只能是最后的连续几次commit吧）-》reset-hard"}},[s._v("#")]),s._v(" 24节 想让某些commit从git仓库消失。（只能是最后的连续几次commit吧）-》reset --hard")]),s._v(" "),t("p",[s._v("例如temp分支，最后的remove all\n倒数第二个“Rename git-log to git-log2”这两个commit我不想要了。\n"),t("img",{attrs:{src:"/docs/images/2020-06-22-10-08-12.png",alt:""}})]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git branch -av\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("当前分支确实在temp下。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git log\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("想保留到该commit，这个commit之后的变更都丢弃\n"),t("img",{attrs:{src:"/docs/images/2020-06-22-10-10-05.png",alt:""}})]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git reset --hard 5bf3fd1900 // commit的内容抛弃后面几个commit\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"/docs/images/2020-06-22-10-10-52.png",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"_25节-两个分支的不同-temp-vs-master-（仍旧在-git本地）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_25节-两个分支的不同-temp-vs-master-（仍旧在-git本地）"}},[s._v("#")]),s._v(" 25节 两个分支的不同 temp vs master （仍旧在.git本地）")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(" git diff temp master // temp分支 vs master支\n git diff temp master index.html // 某个具体文件在两个分支的差异 \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("还可以用某个具体的commit来比较。temp上的commit与master的commit的hash不同")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git branch -av //显示所有branche的当前commithash\ngit diff tempCommitHash masterCommitHash // 比较两个分支的两个commitHash\ngit diff tempHash masterHash index.html // 与上面的git diff temp master index.html 结果一样。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"_26节-删除commit的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_26节-删除commit的文件"}},[s._v("#")]),s._v(" 26节 删除commit的文件")]),s._v(" "),t("p",[s._v("例如readme.md不想要了。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("rm readme.md\ngit rm readme.md // 删除暂存区的readme.md文件\ngit status\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git reset --hard HEAD //恢复暂存区成HEAD\ngit status\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git rm readme.md // 工作区和暂存区和commit区都删除了。工作目录就不需要珊瑚了。\ngit status \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"_27节-保存工作上下文-git-stash。正在修改（一部分工作区在改，一部分add，一部分commit），接到新的任务。要修改的也是同一个文件。怎么办？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_27节-保存工作上下文-git-stash。正在修改（一部分工作区在改，一部分add，一部分commit），接到新的任务。要修改的也是同一个文件。怎么办？"}},[s._v("#")]),s._v(" 27节 保存工作上下文-git stash。正在修改（一部分工作区在改，一部分add，一部分commit），接到新的任务。要修改的也是同一个文件。怎么办？")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git stash // 先保存某个地方\ngit stash list // 保存堆栈的信息\ngit status // 工作区是干净的。\n//紧急修复bug，commit之后，恢复之前的工作\ngit stash apply //这就恢复了之前的状况\ngit status\ngit stash list //还是那么多\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("把工作上下文调用出来。pop有所不同")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git reset --hard HEAD //让工作区干净\ngit stash pop // stash删掉一个，工作区恢复成原样\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"_28节-gitignore不纳入到git管理版本。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_28节-gitignore不纳入到git管理版本。"}},[s._v("#")]),s._v(" 28节 .gitignore不纳入到git管理版本。")]),s._v(" "),t("p",[s._v("学会写.gitignore文件（到github上查看现成的.gitignore文件）,\n"),t("strong",[s._v("必须叫这个文件名")]),s._v("\n写法：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("*.log\n*.class\n*.war\n*.DSYM/  这个目录的所有文件都不放进来版本管理\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("doc目录需要git管理，而doc下面文件不需要\n//来具体操作一下\n.gitignore\n"),t("code",[s._v("doc/")]),s._v("指的是doc/下的所有文件不纳入git。但是doc目录本身是纳入git管理的。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("mkdir doc\ngit status\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("可以看到doc仍提示需要add！")])]),s._v(" "),t("li",[t("p",[s._v("如果doc也不需要git管理\n.gitignore\n"),t("code",[s._v("doc")]),s._v("\n这样doc和doc下的文件都不需要git管理了")])])]),s._v(" "),t("p",[s._v("查看github上的各个语言的.gitignore")]),s._v(" "),t("h3",{attrs:{id:"_29节-git本地备份"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_29节-git本地备份"}},[s._v("#")]),s._v(" 29节 git本地备份")]),s._v(" "),t("p",[s._v("哑协议 慢，不可见进度条，所以，推荐只能协议。\nhttp需要用户名密码\nssh需要公钥私钥\n"),t("img",{attrs:{src:"/docs/images/2020-06-22-11-17-18.png",alt:""}})]),s._v(" "),t("p",[s._v("还可以多点备份（fetch）\n"),t("img",{attrs:{src:"/docs/images/2020-06-22-11-19-06.png",alt:""}})]),s._v(" "),t("p",[s._v("//备份的先\n"),t("img",{attrs:{src:"/docs/images/2020-06-22-11-50-51.png",alt:""}})]),s._v(" "),t("p",[s._v("//备份的元\n"),t("img",{attrs:{src:"/docs/images/2020-06-22-11-52-26.png",alt:""}})]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("//--bare不带工作区 ，进入到备份先\ncd /User/suling/666-backup\n//哑协议clone 把备份元的.git 拷贝到备份先目录ya.git\ngit clone --bare /User/suling/101-GitRunner/git_learning/.git ya.git\n//智能协议clone \ngit clone --bare file:///User/suling/101-GitRunner/git_learning/.git zhineng.git  //这就备份完了\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("在备份元上因为是我们的主要工作空间，大部分时间都在备份元上工作。所以备份袁尚会有新的分支，新的文件。备份元就叫本地。这时我们需要把本地的变更同步到远端去（同步到备份先去）\n现在演示：本地（101-GitRunner/git_learning）push到远端备份先（666-backup）")]),s._v(" "),t("p",[s._v("1，本地增加一个备份先信息")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("cd /User/suling/101-GitRunner/git_learning //工作在本地仓库\ngit remote -v\ngit remote add zhineng file:////User/suling/666-backup/zhineng.git //新建一个远端仓库信息，名字叫智能，地址是后面的智能协议地址,以后本地就往这里同步备份\ngit branch -av\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("2，显示远端的分支：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("cd /User/suling/666-backup/zhineng.git  //远端备份先\ngit branch -av\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("3，本地新增一个分支，并push到备份先")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("cd /User/suling/101-GitRunner/git_learning //工作在本地仓库\ngit checkout suling //增加一个分支\ngit push --set-upstream zhineng suling //分支push到远端\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("4，查看远端备份先应该也有新的分支了")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("cd /User/suling/666-backup/zhineng.git  //远端备份先\ngit branch -av\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("hr"),s._v(" "),t("h2",{attrs:{id:"二，-到远端开始工作。本地-远端-团队操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二，-到远端开始工作。本地-远端-团队操作"}},[s._v("#")]),s._v(" 二， 到远端开始工作。本地+远端+团队操作")]),s._v(" "),t("h3",{attrs:{id:"_30节-github账户创建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_30节-github账户创建"}},[s._v("#")]),s._v(" 30节 Github账户创建")]),s._v(" "),t("p",[s._v("developer 每月7$有无限的私有库。\nfree 私有库有限制")]),s._v(" "),t("h3",{attrs:{id:"_31节-配置公钥私钥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_31节-配置公钥私钥"}},[s._v("#")]),s._v(" 31节 配置公钥私钥")]),s._v(" "),t("p",[s._v("有了之后，本地git库才能往github上push\ngothub help，搜索ssh，找到“Connecting to Github with ssh”\n这就是代表你个人的身份。可以配置到多个git服务器。")]),s._v(" "),t("p",[s._v("https://help.github.com/en/github/authenticating-to-github")]),s._v(" "),t("p",[s._v("https://help.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('cd ~/.ssh/\nssh-kegen -t rsa -b 4096  -C "shirx@ccbjb.com.cn"\n一路回车\ncd ~/.ssh/\nls -al\ncat id_rsa.pub //这是要放到web上的。\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("进入GIthub->setting->ssh and GPG keys -> add new SSH key.\n把id_rsa.pub内容拷贝进来。")]),s._v(" "),t("p",[s._v("这样，push就不需要用户名密码了。")]),s._v(" "),t("p",[s._v("我的github用户，shirx@ccbjb.com.cn已经把公钥放上去了。")]),s._v(" "),t("h3",{attrs:{id:"_32节-创建github库-（※）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_32节-创建github库-（※）"}},[s._v("#")]),s._v(" 32节 创建Github库  （※）")]),s._v(" "),t("p",[s._v("owner：可以个人，可以组织\n私有仓库，owner授权你才能看见\n共有仓库，谁都能看见，commit需要授权\nreadme对github高效搜索的时候非常有用。因为需要到readme搜索关键字")]),s._v(" "),t("p",[s._v("MIT License：愿意分享出来")]),s._v(" "),t("blockquote",[t("p",[s._v("创建github仓库\n【Q】本地仓库的文件和github仓库的文件不一样，怎么处理？")]),s._v(" "),t("blockquote")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("cd /User/suling/666-backup/zhineng.git //本地备份仓库\ngit remote -v\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("github上git201901/git_learning库->clone ssh拷贝ssh的url")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("666-backup\n//【Q】这个命令在哪执行有区别吗？\ngit remote add github git@github.com:git201901/git_learning.git // 用github代替这串ssh地址，在本地新增一个远端站点\ngit remote-v //能看到github的远端地址了。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git push github --all\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("em",[t("strong",[s._v("发现suling分支push成功，temp分支push成功。但是master分支拒绝了。提示因为master分支github有你本地没有的内容。应该先fetch")])]),s._v(" "),t("img",{attrs:{src:"/docs/images/2020-06-22-13-33-40.png",alt:""}})]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("gitk --all //看看本地分支的样子\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"/docs/images/2020-06-22-13-35-59.png",alt:""}}),s._v("\n将github的拉到本地")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// git pull = git fetch + 本地分支和远端分支merge\ngit fetch github master //把github的master分支拉下来\ngitk --all\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("三克独立的树。最上面的remote/github/master里的内容是“License文件”\n“没有基于github远端做变更，所以不让push”-既non-fastforward。\n"),t("img",{attrs:{src:"/docs/images/2020-06-22-13-38-17.png",alt:""}})]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git branch -va \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"/docs/images/2020-06-22-13-41-05.png",alt:""}})]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git checkout master\n//把当前分支(master分支)与github/master做合并\ngit merge github/master  //报错：refusing to merge unrelated histories\ngit merge -h //找找帮助\ngit merge --allow-unrelated-histories github/merge //弹出\ngitk --all\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("新生成的节点有两个父亲。而rebase有一个父亲。\n"),t("img",{attrs:{src:"/docs/images/2020-06-22-13-52-15.png",alt:""}})]),s._v(" "),t("blockquote",[t("p",[s._v("{Q}本地master和github/master的关系是不是fast forward。")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("//本地push可以了\ngit push github master // \ngitk --all\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("push带来的影响。g\n"),t("img",{attrs:{src:"/docs/images/2020-06-22-13-56-20.png",alt:""}})]),s._v(" "),t("p",[s._v("github上也不是1个commit了，而是5个commit了。")]),s._v(" "),t("h3",{attrs:{id:"_33节-不同人修改了不同文件，怎么处理？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_33节-不同人修改了不同文件，怎么处理？"}},[s._v("#")]),s._v(" 33节 不同人修改了不同文件，怎么处理？")]),s._v(" "),t("p",[s._v("模拟两个人，同一个分支当中，两个人修改了不同的文件。\ngithub上master基出上创建分支feature/add_git_command\n一个人修改一个readme\n另一个人")]),s._v(" "),t("p",[s._v("suling@163.com 管理者")]),s._v(" "),t("h4",{attrs:{id:"step1，a桑-修改reamde"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step1，a桑-修改reamde"}},[s._v("#")]),s._v(" STEP1，A桑 修改reamde")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("cd  新目录 \ngit clone  git@github.com:git201901/git_learning.git git_learning_02\ncd git_learning_02\n// 模拟成另一个人的工作环境\ngit config --add --local user.name 'git2019' //这仅仅对本库有用\ngit config --local --list //针对本仓库，用户名是否已经调整\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[t("strong",[s._v("总结：git config --add --local user.name 'xxx'仅仅对本库有用。对其它库（其它.git目录没有影响），对git config --global也没有任何影响")]),s._v("\n然后再变变这个库的邮件地址")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --local --add user.email "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git@163.com'")]),s._v("\n或者直接修改.git/config文件里的user ！！！ 也可以！！！\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("两个人都checkout出github上的分支")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" git_learning_02\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b feature/add_git_commands origin/feature/add_git_commands\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -av \n// 修改 readme "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" readme\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" readme\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m\"edit readme ' //本地变更完\n// 分享到github变更\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push //缺省的remote就是feature/add_git_command .创建分支时指定了远端分支，git就记住了\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("到github上刷新一下，已经readme已经改了。")]),s._v(" "),t("h4",{attrs:{id:"step2，b桑-修改index-html"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step2，b桑-修改index-html"}},[s._v("#")]),s._v(" STEP2，B桑 修改index.html")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" git_running //进入另外一个库\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --local -l\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fetch github //把github上所有分支下载下来\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -v //本地分支\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -av //远端分支\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b feature/add_git_commands github/feature/add_git_commands //创建本地分支\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" index.html\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" -u \n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Add git command in index.html'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h4",{attrs:{id:"step3-a桑，-修改readme"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step3-a桑，-修改readme"}},[s._v("#")]),s._v(" STEP3 , A桑， 修改readme")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" readme\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -am"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"step4-b桑-，push-失败"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step4-b桑-，push-失败"}},[s._v("#")]),s._v(" STEP4 , B桑 ，push 失败")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push //远端和本地“不是fastfoward”（远端更加新）.必须解决。\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fetch github\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -av \n//"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ahead "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(",behind "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 本地有个文件比远端新。本地还有一个文件比远端旧。\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" github/feature/add_git_commands //缺点：不线性。git很容易完成，因为没有相同的文件被多人修改。\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" readme //A桑的修改，已经反映进来了。\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push github  //很顺利。因为是fastforward了。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"_34节，两个人修改相同分支相同文件，！！！不同区域！！，git还有办法！！"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_34节，两个人修改相同分支相同文件，！！！不同区域！！，git还有办法！！"}},[s._v("#")]),s._v(" 34节，两个人修改相同分支相同文件，！！！不同区域！！，git还有办法！！")]),s._v(" "),t("h4",{attrs:{id:"step1-a桑（git2019）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step1-a桑（git2019）"}},[s._v("#")]),s._v(" STEP1 , A桑（git2019）")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branche -av\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("behid "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" //本地有两个文件比远端旧\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull //用远端更新本地\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -av \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h4",{attrs:{id:"step2-b桑（suling）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step2-b桑（suling）"}},[s._v("#")]),s._v(" STEP2, B桑（suling）")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" readme\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit \n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"step3-a桑也修改readme"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step3-a桑也修改readme"}},[s._v("#")]),s._v(" STEP3,A桑也修改readme")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" reame\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push // 会失败。因为B桑已经提交了，而A没有在B的基础上修改。有冲突Not Fastforward\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("解决：pull 或  先fetch在merge\n采用第二种方法")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git fetch \ngit merge origin/feature/add_git_commands\nla -al\ncat index.html // B桑的修改已经反映进来了。\ngitk --all\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("img",{attrs:{src:"/docs/images/2020-06-22-14-49-24.png",alt:""}})]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -av //"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ahead "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",没有behind只有ahead，提交肯定没问题\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -av //没有ahead或behind\ngitk --all\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("Github上看看，已经提交上去了。")]),s._v(" "),t("h3",{attrs:{id:"_35节-两个人修改同一文件的相同区域，这就比较麻烦了。冲突"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_35节-两个人修改同一文件的相同区域，这就比较麻烦了。冲突"}},[s._v("#")]),s._v(" 35节 两个人修改同一文件的相同区域，这就比较麻烦了。冲突")]),s._v(" "),t("h4",{attrs:{id:"step1-a桑，b桑-都pull成远端一样的。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step1-a桑，b桑-都pull成远端一样的。"}},[s._v("#")]),s._v(" STEP1 A桑，B桑 都pull成远端一样的。")]),s._v(" "),t("h4",{attrs:{id:"step2-a桑，"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step2-a桑，"}},[s._v("#")]),s._v(" STEP2 A桑，")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" index.html\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'add by A桑'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h4",{attrs:{id:"step3-b桑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step3-b桑"}},[s._v("#")]),s._v(" STEP3 B桑")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" index.html\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'add by B桑'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"step4-a桑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step4-a桑"}},[s._v("#")]),s._v(" STEP4 A桑")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push // 失败. \n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge github/feature/add_git_commands //already up to "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull // 跟本地分支做merge。Merge confilict "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" index.html\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("有命令行的，和图形话的解决方案")]),s._v(" "),t("p",[s._v("1，命令行方式人工解决本地冲突\ngit不能帮助解决了，需要人工，编辑index.html文本.留下人工合并好的内容。保存。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status // 还有Unmerged path\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -am"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Resolved conflict by hand with 4 git commands'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\ngitk --all \n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push //本地解决了冲突之后放到远端\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("strong",[s._v("总结：解决同一文件冲突")])]),s._v(" "),t("h3",{attrs:{id:"_36节-a桑文件名变更，b桑在原文件名变更。b怎么提交？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_36节-a桑文件名变更，b桑在原文件名变更。b怎么提交？"}},[s._v("#")]),s._v(" 36节 A桑文件名变更，B桑在原文件名变更。B怎么提交？")]),s._v(" "),t("p",[s._v("先两个环境.git都git pull更新最新的内容到本地")]),s._v(" "),t("h4",{attrs:{id:"sete1-a桑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sete1-a桑"}},[s._v("#")]),s._v(" SETE1 A桑")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git mv index.html index.htm\ngit commit -am'mv index.html to index.htm'\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h4",{attrs:{id:"step2-b桑修改index-html"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step2-b桑修改index-html"}},[s._v("#")]),s._v(" STEP2 B桑修改index.html")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("vi index.html\ngit commit -am'modify index.html'\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h4",{attrs:{id:"step3-a桑push"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step3-a桑push"}},[s._v("#")]),s._v(" STEP3, A桑push")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"step4-b桑push"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step4-b桑push"}},[s._v("#")]),s._v(" STEP4, B桑push")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push // 失败\n//git能够感受到文件名的变更，直接pull，B桑对index.html的修改就会反映到index.htm中。\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull //ok\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -al //只有index.htm了！！！ 太智能了\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" index.htm // B桑的修改也保留了 ！！，太智能了\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("strong",[s._v("总结：pull就可以了")])]),s._v(" "),t("h3",{attrs:{id:"_37节，多人修改同一个文件的文件名。a桑push，b怎么push"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_37节，多人修改同一个文件的文件名。a桑push，b怎么push"}},[s._v("#")]),s._v(" 37节，多人修改同一个文件的文件名。A桑push，B怎么push")]),s._v(" "),t("h4",{attrs:{id:"a桑-改index-htm-index1-html"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a桑-改index-htm-index1-html"}},[s._v("#")]),s._v(" A桑 改index.htm index1.html")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git mv \ngit commit\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h4",{attrs:{id:"b桑，改index-htm-index2-html"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#b桑，改index-htm-index2-html"}},[s._v("#")]),s._v(" B桑，改index.htm ->index2.html")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git mv \ngit commit\ngit push github //ok\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"a桑，push"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a桑，push"}},[s._v("#")]),s._v(" A桑，push")]),s._v(" "),t("p",[t("code",[s._v("git push")]),s._v(" // NG\n解决：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git pull // 报冲突了\nls -al //出现了index1.html , index2.html\ngit status //both deleted , add by us:index1.html , add by them :index2.html // 这就得认为协商了，到底删掉哪个，决定好了之后，叫index1.html\ngit rm index.html\ngit add index1.html\ngit status\ngit rm index2.html\ngit status // ALL conflict fixed out .\nls -all\ngit commit -m'Decide to mv index to index1'\ngit status\ngitk --all\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[t("img",{attrs:{src:"/docs/images/2020-06-22-15-17-11.png",alt:""}})]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git branch -av\ngit push \ngitk --all\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"_39节-禁止向集成分支执行push-f-操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_39节-禁止向集成分支执行push-f-操作"}},[s._v("#")]),s._v(" 39节 禁止向集成分支执行push -f 操作")]),s._v(" "),t("p",[t("strong",[s._v("git push -f 的危害")]),s._v("\n会让别人的变更commit统统消失！！！")]),s._v(" "),t("p",[s._v("git reset --hard hashcode\ngit push -f origin feature/add_git_commands //强制更新")]),s._v(" "),t("p",[s._v("github上已经提交的都消失了。")]),s._v(" "),t("p",[t("strong",[s._v("有没有什么机制，让gitlab或github不允许push -f ？")]),s._v("\n有")]),s._v(" "),t("h3",{attrs:{id:"_40节-禁止向集成分支做rebase"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_40节-禁止向集成分支做rebase"}},[s._v("#")]),s._v(" 40节 禁止向集成分支做rebase")]),s._v(" "),t("p",[t("strong",[s._v("注意：公共的分支不是能做rebase做变基的")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/docs/images/2020-06-22-15-54-14.png",alt:""}}),s._v(" "),t("font",{attrs:{color:"red"}},[s._v("test_rebase_inter分支是基于temp的，原本没做rebase的话，temp之后的两次commit能够顺利提交。但是现在rebase之后test_rebase_inter分支已经离开了temp分支了。这就not fastforward了。最上的黄点就push不了了。所以不能团队合作时rebase分支(仅仅改commit message也不行)。只能不断向前。")]),s._v(" "),t("img",{attrs:{src:"/docs/images/2020-06-22-15-57-16.png",alt:""}})],1),s._v(" "),t("h3",{attrs:{id:"_41节-github为什么这么火-2008-2020年-，3千万用户，1亿库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_41节-github为什么这么火-2008-2020年-，3千万用户，1亿库"}},[s._v("#")]),s._v(" 41节 Github为什么这么火 2008~2020年 ，3千万用户，1亿库")]),s._v(" "),t("p",[t("strong",[s._v("它的价值：")])]),s._v(" "),t("ul",[t("li",[s._v("程序员的协作，更好的版本控制系统")]),s._v(" "),t("li",[s._v("SVN需要等待授权fork分支花费时间非常长")]),s._v(" "),t("li",[s._v("帮助开发人员寻找开源项目")]),s._v(" "),t("li",[s._v("不断解决软件开发人员的痛点：代码集成、集成环境、部署")])]),s._v(" "),t("h3",{attrs:{id:"_42节-github有哪些核心功能？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_42节-github有哪些核心功能？"}},[s._v("#")]),s._v(" 42节 Github有哪些核心功能？")]),s._v(" "),t("p",[s._v("Features")]),s._v(" "),t("ul",[t("li",[s._v("Code review //无缝的，在评论处就可以审评")]),s._v(" "),t("li",[s._v("project manager //产品->开发->测试->运维 ，有看板，进度，issure（需求，bug），对isuue打标签。简洁yi'yong")]),s._v(" "),t("li",[s._v("Integration")]),s._v(" "),t("li",[s._v("team manager")]),s._v(" "),t("li",[s._v("social coding")]),s._v(" "),t("li",[s._v("Document")]),s._v(" "),t("li",[s._v("Code hosting //放代码")])]),s._v(" "),t("h3",{attrs:{id:"_43节-怎么搜索github上的项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_43节-怎么搜索github上的项目"}},[s._v("#")]),s._v(" 43节 怎么搜索Github上的项目")]),s._v(" "),t("h4",{attrs:{id:"_1，-根据库的信息搜索"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1，-根据库的信息搜索"}},[s._v("#")]),s._v(" 1， 根据库的信息搜索")]),s._v(" "),t("p",[s._v("可以看github的"),t("a",{attrs:{href:"https://help.github.com/en/github/searching-for-information-on-github",target:"_blank",rel:"noopener noreferrer"}},[s._v("help"),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[s._v("created:<2018-12-24")]),s._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/search/advanced?q=created%3A%3C2018-12-09&type=Repositories",target:"_blank",rel:"noopener noreferrer"}},[s._v("高级搜索"),t("OutboundLink")],1),s._v(" 可以更直观。")]),s._v(" "),t("li",[s._v("星数越多越好")]),s._v(" "),t("li",[s._v("搜索栏查的是：搜索→repository的名称和描述。")]),s._v(" "),t("li",[s._v("搜索栏[xxx in:readme] : 搜索→readme\n"),t("ul",[t("li",[s._v("git 最好 学习 资料 in:readme")])])]),s._v(" "),t("li",[s._v("搜索栏[ starts:>1000]")]),s._v(" "),t("li",[s._v("language:javascript")]),s._v(" "),t("li",[s._v("forks:>1000")]),s._v(" "),t("li",[s._v("blog easily start in:readme starts:>5000")])]),s._v(" "),t("h4",{attrs:{id:"_2，根据code搜索"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2，根据code搜索"}},[s._v("#")]),s._v(" 2，根据Code搜索")]),s._v(" "),t("ul",[t("li",[s._v("根据代码内容来搜索\n"),t("ul",[t("li",[s._v("'fater_script:'+'stage:deploy' filename:gitlab-ci\n但是这样只能搜索出代码")]),s._v(" "),t("li")])])]),s._v(" "),t("p",[t("strong",[s._v("总结：")]),s._v("\n目前库和代码的搜索无法结合。")]),s._v(" "),t("h3",{attrs:{id:"_44节-github上建blog"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_44节-github上建blog"}},[s._v("#")]),s._v(" 44节 Github上建blog")]),s._v(" "),t("ol",[t("li",[s._v("blog easily start in:readme stars:>5000")]),s._v(" "),t("li",[s._v("jekyll-now")]),s._v(" "),t("li",[s._v("fork")]),s._v(" "),t("li",[s._v("修改config.yml")]),s._v(" "),t("li",[s._v("增加md code→_post→2020-06-20-xxx.md")]),s._v(" "),t("li",[s._v("setting→GitHub Pages→点域名。")])]),s._v(" "),t("p",[s._v("_post/下面可以创建目录。目录里面建md，但是文件名字只能是yyyy-mm-dd-title.md\n他能自动遍历子目录找到md，显示在主页上")]),s._v(" "),t("p",[s._v('project/images存放所有文件。md引用这些文件的时候使用"images/图片名"\n'),t("a",{attrs:{href:"https://githubshirongxin.github.io/githubblogByVscode/",target:"_blank",rel:"noopener noreferrer"}},[s._v("GitHub blog+ VScode(past image+markdown preview enhanced)"),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"_45节-如何保证开源项目质量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_45节-如何保证开源项目质量"}},[s._v("#")]),s._v(" 45节 如何保证开源项目质量")]),s._v(" "),t("p",[s._v("code review\nchecks CircleCI 自动化检查机制 dockerfile-lint , bold ,eslint ,test-integration , test-app, test-unit, ...")]),s._v(" "),t("p",[t("strong",[s._v("没说具体怎么做")])]),s._v(" "),t("h3",{attrs:{id:"_46节，github为什么需要组织来管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_46节，github为什么需要组织来管理"}},[s._v("#")]),s._v(" 46节，Github为什么需要组织来管理")]),s._v(" "),t("p",[s._v("Personal Setting → Organization→邀请member加入\n组织下面有仓库\nTeams对仓库精细化管控：Team对仓库，Team类似角色有权限的。\nGitlab的仓库对没有权限的用户不可见，而GitHub对没权限的用户开发看的权限,能看到库的信息。")]),s._v(" "),t("ol",[t("li",[s._v("创建组织")]),s._v(" "),t("li",[s._v("邀请成员")]),s._v(" "),t("li",[s._v("创建仓库")]),s._v(" "),t("li",[s._v("创建Team，管理仓库")]),s._v(" "),t("li",[s._v("成员申请仓库")]),s._v(" "),t("li",[s._v("管理员审批申请")])]),s._v(" "),t("h3",{attrs:{id:"_47节，创建组织的仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_47节，创建组织的仓库"}},[s._v("#")]),s._v(" 47节，创建组织的仓库")]),s._v(" "),t("p",[s._v("owner 选组织（个人的话选个人）")]),s._v(" "),t("p",[s._v("最后的marketplace apps 访问该仓库。\nTravis CI 服务\nCodecov 服务。")]),s._v(" "),t("p",[s._v("作者以前用的，所以现在有。用不用都行。")]),s._v(" "),t("p",[s._v("仓库→setting→选择团队并赋予团队权限。\n这就搭建完基础环境了。")]),s._v(" "),t("h3",{attrs:{id:"_48节，如何选择自己的工作流"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_48节，如何选择自己的工作流"}},[s._v("#")]),s._v(" 48节，如何选择自己的工作流")]),s._v(" "),t("ol",[t("li",[s._v("主干开发：就在master上开发\n还是不常见的。除非成员能力强，人员少。任务小。\n"),t("img",{attrs:{src:"/docs/images/2020-06-25-23-57-44.png",alt:""}})])]),s._v(" "),t("p",[s._v("2，官方的git flow\n研发周期比较长，质量要求比较高，又不具备主干开发能力的。\n特性分支开发。\n互联网采用这种模型的也不多\n3，Github flow")]),s._v(" "),t("p",[t("img",{attrs:{src:"/docs/images/2020-06-26-00-02-03.png",alt:""}}),s._v("\n4. Gitlab flow\n"),t("img",{attrs:{src:"/docs/images/2020-06-26-00-02-46.png",alt:""}}),s._v("\n无法准确控制发布时间")]),s._v(" "),t("p",[t("img",{attrs:{src:"/docs/images/2020-06-26-00-03-25.png",alt:""}})]),s._v(" "),t("p",[s._v("同一时间点会有多个版本存在\n"),t("img",{attrs:{src:"/docs/images/2020-06-26-00-03-57.png",alt:""}})]),s._v(" "),t("p",[s._v("不要局限有一种工作流。")]),s._v(" "),t("h3",{attrs:{id:"_49节，几个分支做集成的策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_49节，几个分支做集成的策略"}},[s._v("#")]),s._v(" 49节，几个分支做集成的策略")]),s._v(" "),t("p",[s._v("Insights-network 版本树的延津\n"),t("img",{attrs:{src:"/docs/images/2020-06-26-00-09-53.png",alt:""}}),s._v("\n北京，上海都要合并到master")]),s._v(" "),t("p",[t("strong",[s._v("merge button三个选项:")]),s._v("\n[] + allow merge commit\n[] + squash and merging\n[] + rebase and merging\npull reques →base:master , compare:beijing.\n→create pull request")]),s._v(" "),t("ol",[t("li",[s._v("create a merge commit →comfirm merge→紫色成功，删除特性分支（不急着删过几个月删掉）\n"),t("img",{attrs:{src:"/docs/images/2020-06-26-11-05-55.png",alt:""}}),s._v("\n为了实验，取消刚刚的merge，实际工作中不要做\ngit branch -av\ngit push -f origin master\n"),t("img",{attrs:{src:"/docs/images/2020-06-26-11-07-49.png",alt:""}})]),s._v(" "),t("li",[s._v("new pull request→ Squash and merge → 组合成一个commit然后放到master→insights→network\n"),t("code",[s._v("没动北京。对北京的三个commit合并成一个commit，放到竹噶上来。")]),s._v("\n主干和1几乎一样。但是进化树上看不出来是从哪个branch来的了。主干来说形成线性的。又对branch做了个整理。\n但北京的三个commit如果分别是多个功能。就不适合这个了。\n"),t("img",{attrs:{src:"/docs/images/2020-06-26-11-09-40.png",alt:""}})]),s._v(" "),t("li",[s._v("new pull request→  rebase and merging→\n"),t("img",{attrs:{src:"/docs/images/2020-06-26-11-13-25.png",alt:""}}),s._v(" "),t("img",{attrs:{src:"/docs/images/2020-06-26-11-14-24.png",alt:""}}),s._v(" "),t("code",[s._v("北京的三个commit一个个地应用到master的head上")])])]),s._v(" "),t("p",[t("strong",[s._v("规律")]),s._v("\n1，merge ：把几十个分支一起做合并\n2，squash，rebase 让主干保持线性")]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"_50节-github的issue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_50节-github的issue"}},[s._v("#")]),s._v(" 50节 Github的issue")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("可以打标签\nlabel ：颜色标签标在issure后面。就是分类。\nmilestone：版本，关闭时间")])]),s._v(" "),t("li",[t("p",[s._v("可以有标准和自定义模板\n启用issue任何人都可以提。setting里面有模板（md文件）。\n模板最终也放到git仓库了。\n参考：vue/.github/有几个md的模板。")])]),s._v(" "),t("li",[t("p",[s._v("可以@某人")])])]),s._v(" "),t("h3",{attrs:{id:"_51节-github的project看板，管理issue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_51节-github的project看板，管理issue"}},[s._v("#")]),s._v(" 51节 Github的project看板，管理issue")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("project →create new project →选template\n例如，bug看板，有几个优先级。")])]),s._v(" "),t("li",[t("p",[s._v("issue选择对应的看板。进入project，就能看到这个issue。一般开会前，各自把各自的issue放入看板。然后开会即可。")])])]),s._v(" "),t("h3",{attrs:{id:"_52节，-github-codereview"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_52节，-github-codereview"}},[s._v("#")]),s._v(" 52节， Github codereview")]),s._v(" "),t("ul",[t("li",[s._v("setting→Branch protection rule→选分支：master，protect matching branch：设置必须review")])]),s._v(" "),t("h3",{attrs:{id:"_53节，保证集成质量ci"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_53节，保证集成质量ci"}},[s._v("#")]),s._v(" 53节，保证集成质量CI")]),s._v(" "),t("p",[t("img",{attrs:{src:"/docs/images/2020-06-26-11-43-46.png",alt:""}}),s._v(" "),t("img",{attrs:{src:"/docs/images/2020-06-26-11-44-15.png",alt:""}})]),s._v(" "),t("p",[s._v("mvn cobertura:coertura  这是测试覆盖率")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("setting→integration&services →")])]),s._v(" "),t("li",[t("p",[s._v("Branch protection rule→master→Require status checks to pass before merging。选CI服务产品打勾\n→还可限制谁可以merge master\nInclude administrator 选上，即使是管理远也必须严格遵守这个规则。")])]),s._v(" "),t("li",[t("p",[s._v("这些服务，从marketplace 找。 Travis CI\n※")])]),s._v(" "),t("li",[t("p",[s._v("jenkins ：setting→Instaled Github Apps→有限\ndeveloper setting→Oauth Apps\ndeveloper setting→自己开发一款")])])]),s._v(" "),t("h3",{attrs:{id:"_54节，release功能（放war包的共享文件系统）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_54节，release功能（放war包的共享文件系统）"}},[s._v("#")]),s._v(" 54节，release功能（放war包的共享文件系统）")]),s._v(" "),t("ul",[t("li",[s._v("github自动打包放到release上")]),s._v(" "),t("li",[s._v("切换到分支，找到CI.yml ,\n"),t("img",{attrs:{src:"/docs/images/2020-06-26-11-54-35.png",alt:""}}),s._v(" "),t("img",{attrs:{src:"/docs/images/2020-06-26-11-54-46.png",alt:""}}),s._v("\napi-key:\n最后的branch：改为master\n"),t("ul",[t("li",[s._v("个人setting→GithubApp→create token标识自己身份的。用于api")]),s._v(" "),t("li",[s._v("commit Ci.yml ，并merge到master分支")])])]),s._v(" "),t("li",[s._v("查看Trave.CI服务，看结果。再看release个数为1.")]),s._v(" "),t("li",[s._v("查看release的内容，就是war包和源代码都生成了。")]),s._v(" "),t("li")]),s._v(" "),t("h3",{attrs:{id:"_55节，怎么写文档-github的wiki就是md文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_55节，怎么写文档-github的wiki就是md文件"}},[s._v("#")]),s._v(" 55节，怎么写文档 Github的Wiki就是md文件")]),s._v(" "),t("p",[s._v("把wiki写的好的库下载下来（fork），然后把.wiki文件自己来编辑（mk形式）。")]),s._v(" "),t("p",[s._v("git push second master")]),s._v(" "),t("p",[s._v("在自己的仓库中，在线编辑md，就很容易看出人家怎么写的markdown，放到github的Wiki的。")]),s._v(" "),t("h3",{attrs:{id:"_56节，为什么互联网喜欢gitlab而不是github"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_56节，为什么互联网喜欢gitlab而不是github"}},[s._v("#")]),s._v(" 56节，为什么互联网喜欢gitlab而不是github")]),s._v(" "),t("p",[s._v("阿里系")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("能让公司自己搭建自己的gitlab（RubyOnRails）")])]),s._v(" "),t("li",[t("p",[s._v("还可以做二次开发")])]),s._v(" "),t("li",[t("p",[s._v("帮gitlab维护的人员世界上很多人")])]),s._v(" "),t("li",[t("p",[s._v("gitlab版本更新和迭代非常快，功能出的非常多")])]),s._v(" "),t("li",[t("p",[s._v("界面布局条理化，分割的比较细，易用\n"),t("img",{attrs:{src:"/docs/images/2020-06-26-12-12-15.png",alt:""}}),s._v("\n公司内部代码库自己维护站67%！！")])]),s._v(" "),t("li",[t("p",[s._v("Gitlab CI发展最快并是业界领导者。\n"),t("img",{attrs:{src:"/docs/images/2020-06-26-12-14-07.png",alt:""}}),s._v("\n都快赶上jenkins了，jenkins也是java开源。")])]),s._v(" "),t("li",[t("p",[s._v("已经超过了github了。")])]),s._v(" "),t("li",[t("p",[s._v("提供了整个DevOps的完整解决方案。")])])]),s._v(" "),t("h3",{attrs:{id:"_57节，gitlab的核心功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_57节，gitlab的核心功能"}},[s._v("#")]),s._v(" 57节，Gitlab的核心功能")]),s._v(" "),t("p",[t("img",{attrs:{src:"/docs/images/2020-06-26-12-15-53.png",alt:""}}),s._v("\n比jenkins，github，aws codestar 内容都广。\nDevOps生命周期")]),s._v(" "),t("ul",[t("li",[s._v("manage ：宏观统计")]),s._v(" "),t("li",[s._v("plan：issue")]),s._v(" "),t("li",[s._v("create：git分支管理代码")]),s._v(" "),t("li",[s._v("verify：merge request，质量保证，代码review，各种技术保障")]),s._v(" "),t("li",[s._v("package：Registry支持docker")]),s._v(" "),t("li",[s._v("Release：CICD，pipline面向很多服务器部署")]),s._v(" "),t("li",[s._v("configure：setting基础设施做配置")]),s._v(" "),t("li",[s._v("monitor：运维对app和infra的监控")]),s._v(" "),t("li",[s._v("secure：安全")])]),s._v(" "),t("h3",{attrs:{id:"_58节，gitlab项目管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_58节，gitlab项目管理"}},[s._v("#")]),s._v(" 58节，Gitlab项目管理")]),s._v(" "),t("ul",[t("li",[s._v("issues")]),s._v(" "),t("li",[s._v("企业版也能看，gitlab用企业版做定制而不是维护。")]),s._v(" "),t("li",[s._v("Gitlab EE里的需求。>issue的过滤器很强。※")]),s._v(" "),t("li",[s._v("issue Borad 看板，特别好。可以很方便地引用&XXX（？），#XXX（issue） ，@XX（发通知）")]),s._v(" "),t("li",[s._v("labels：为issue打上不同的label")])]),s._v(" "),t("h3",{attrs:{id:"_59节，gitlab上codereview"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_59节，gitlab上codereview"}},[s._v("#")]),s._v(" 59节，Gitlab上Codereview")]),s._v(" "),t("p",[s._v("强制要求codereview→把分支设成保护。\ndevops-create等待codereview")]),s._v(" "),t("p",[s._v("checklist（自检）\npipeline（自动检查）\nGitlab bot（自动检查）\ncodreview（人工）指定给谁，截止日期\n"),t("strong",[s._v("链接做得真好")])]),s._v(" "),t("p",[s._v("MergeRequest→开始codereview")]),s._v(" "),t("h3",{attrs:{id:"_60节，gitlab如何保证集成质量？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_60节，gitlab如何保证集成质量？"}},[s._v("#")]),s._v(" 60节，Gitlab如何保证集成质量？")]),s._v(" "),t("ul",[t("li",[s._v("Gitlab的ci,gitlab-ci.yml")]),s._v(" "),t("li",[s._v("看看Gitlab EE的CICD如何管理的。")]),s._v(" "),t("li",[s._v("还得配置runner\n"),t("ul",[t("li",[s._v("setting→Runner→ Specific Runner")]),s._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("          → Shared Runner\n")])])])])])])]),s._v(" "),t("h3",{attrs:{id:"_61节，gitlab工程发布到aws上"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_61节，gitlab工程发布到aws上"}},[s._v("#")]),s._v(" 61节，Gitlab工程发布到aws上")]),s._v(" "),t("ul",[t("li",[s._v("master设置成保护分支")]),s._v(" "),t("li",[s._v("改.gitlab-ci.yml\n"),t("ul",[t("li",[s._v("deploy: only : -master")]),s._v(" "),t("li",[t("img",{attrs:{src:"/docs/images/2020-06-26-13-01-46.png",alt:""}})])])]),s._v(" "),t("li",[s._v("配置Running")]),s._v(" "),t("li",[s._v("deploy有自己的脚本，访问aws\n+   "),t("img",{attrs:{src:"/docs/images/2020-06-26-13-02-36.png",alt:""}}),s._v("\n+   脚本里的变量放到CICD setting→Variable\n+   updateAndRestart.sh\n+    "),t("img",{attrs:{src:"/docs/images/2020-06-26-13-04-27.png",alt:""}})]),s._v(" "),t("li",[s._v("Commits 看看是不是没通过测试。Unit测试")]),s._v(" "),t("li",[s._v("Commit通过之后发MergeRequest，向本仓库master\n+ gitlab只有一个merge按钮\n+ fast forward merge\n+ merge commit\n+ with semi-linear history\n+ 自己试试吧。\n+ 绿色merge按钮表示检查过了。\n+ pipeline自动启动了。\n+  "),t("img",{attrs:{src:"/docs/images/2020-06-26-13-13-13.png",alt:""}}),s._v("\n+  可以点进去看看log")])])])}),[],!1,null,null,null);a.default=i.exports}}]);