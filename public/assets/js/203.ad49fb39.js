(window.webpackJsonp=window.webpackJsonp||[]).push([[203],{696:function(e,o,v){"use strict";v.r(o);var t=v(59),_=Object(t.a)({},(function(){var e=this,o=e.$createElement,v=e._self._c||o;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h3",{attrs:{id:"前言"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),v("p",[e._v("开发每一张网页都离不开布局，基于良好布局打下基础，才能使后续的开发更顺利。当然不能停留在"),v("code",[e._v("IExplorer时代")]),e._v("那种局限思维上，没办法解决的布局都用JS实现😂。今时不同往日，现代CSS属性能更好地快速实现各种布局，节约更多时间去摸鱼😉。")]),e._v(" "),v("h3",{attrs:{id:"布局"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#布局"}},[e._v("#")]),e._v(" 布局")]),e._v(" "),v("p",[e._v("为了方便记忆，笔者按照属性聚合度将跟布局有关系的属性分类，并划分为以下8种基本布局。")]),e._v(" "),v("ul",[v("li",[e._v("普通布局："),v("code",[e._v("display:block/inline")])]),e._v(" "),v("li",[e._v("浮动布局："),v("code",[e._v("float:left/right")])]),e._v(" "),v("li",[e._v("定位布局："),v("code",[e._v("position:relative/absolute/fixed")]),e._v("、"),v("code",[e._v("left/right/top/bottom/z-index")])]),e._v(" "),v("li",[e._v("表格布局："),v("code",[e._v("table系列属性")])]),e._v(" "),v("li",[e._v("弹性布局："),v("code",[e._v("display:flex/inline-flex")]),e._v("、"),v("code",[e._v("flex系列属性")])]),e._v(" "),v("li",[e._v("多列布局："),v("code",[e._v("column系列属性")])]),e._v(" "),v("li",[e._v("格栅布局："),v("code",[e._v("display:grid/inline-grid")]),e._v("、"),v("code",[e._v("grid系列属性")])]),e._v(" "),v("li",[e._v("响应式布局："),v("code",[e._v("em/rem/vw/vh/vmin/vmax")]),e._v("、"),v("code",[e._v("媒体查询")])])]),e._v(" "),v("p",[e._v("众多跟布局有关的属性，到底要如何结合才能完成想要的布局，具体开发中使用何种属性更为合适，这些都是布局方式中必须得面对的问题。本章也着重从常用的布局技巧说起，怎么样的属性搭配才能玩转网页排版。")]),e._v(" "),v("p",[e._v("在8种基本布局中，笔者还是比较推荐"),v("strong",[e._v("浮动布局")]),e._v("、"),v("strong",[e._v("定位布局")]),e._v("和"),v("strong",[e._v("弹性布局")]),e._v("，熟悉这三种布局基本上能解决大部分网页排版问题。"),v("strong",[e._v("表格布局")]),e._v("尽量不要使用，在第3章"),v("strong",[e._v("回流重绘")]),e._v("有提及，可能很小的一个改动就会造成整个"),v("code",[e._v("<table>")]),e._v("回流；"),v("strong",[e._v("格栅布局")]),e._v("其实是一个很不错的布局方式，无奈兼容性不是很好，所以笔者比较少研究，后续兼容性上来了笔者会更新本章格栅布局相关内容。")]),e._v(" "),v("p",[v("code",[e._v("弹性布局")]),e._v("是一个好东西，完全掌握后能创造出很多意想不到的事情。玩转"),v("strong",[e._v("CSS神操作骚技巧")]),e._v("离不开布局方式，更离不开"),v("code",[e._v("弹性布局")]),e._v("。若还没接触过"),v("code",[e._v("弹性布局")]),e._v("相关属性的同学，可自行百度，网上一搜一大把就感觉没必要在此详细讲解了，贴上一篇还不错的的教程"),v("a",{attrs:{href:"https://juejin.im/post/6844904116141948936",target:"_blank",rel:"noopener noreferrer"}},[e._v("《深度解析CSS弹性布局》"),v("OutboundLink")],1),e._v("和"),v("a",{attrs:{href:"https://juejin.im/post/6866914148387651592",target:"_blank",rel:"noopener noreferrer"}},[e._v("《48张小图带你领略Flex布局之美》"),v("OutboundLink")],1),e._v("。若不能理解，推荐使用这个网站"),v("a",{attrs:{href:"https://xluos.github.io/demo/flexbox",target:"_blank",rel:"noopener noreferrer"}},[e._v("Flexbox"),v("OutboundLink")],1),e._v("同步查看相关属性的表现状态，相信也能快速学习到"),v("code",[e._v("弹性布局")]),e._v("的好玩之处。")]),e._v(" "),v("blockquote",[v("p",[e._v("清除浮动")])]),e._v(" "),v("p",[e._v("在各种经典布局方式中，可能会结合"),v("code",[e._v("浮动布局")]),e._v("相关属性。在第4章"),v("strong",[e._v("盒模型")]),e._v("有提及，使用"),v("code",[e._v("float")]),e._v("会使节点脱流导致父节点高度坍塌，若不对父节点显式声明高度则很有必要给父节点清除浮动。定义以下"),v("code",[e._v("clearfix")]),e._v("用于清除浮动，给父节点添加即可。值得注意，"),v("code",[e._v("clearfix")]),e._v("已占用"),v("code",[e._v("::after")]),e._v("，所以使用"),v("code",[e._v("clearfix")]),e._v("的父节点就不能再声明"),v("code",[e._v("::after")]),e._v("了，可改用"),v("code",[e._v("::before")]),e._v("。")]),e._v(" "),v("p",[v("code",[e._v('.clearfix::after { display: block; visibility: hidden; clear: both; height: 0; font-size: 0; content: ""; }')])]),e._v(" "),v("p",[e._v("笔者就不详细讲解清除浮动的原理和分析了，有兴趣的同学请查看"),v("a",{attrs:{href:"https://stackoverflow.com/questions/211383/what-methods-of-clearfix-can-i-use",target:"_blank",rel:"noopener noreferrer"}},[e._v("Clearfix"),v("OutboundLink")],1),e._v("。")]),e._v(" "),v("h3",{attrs:{id:"全屏布局"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#全屏布局"}},[e._v("#")]),e._v(" 全屏布局")]),e._v(" "),v("p",[e._v("经典的"),v("code",[e._v("全屏布局")]),e._v("由顶部、底部、主体三部分组成，其特点为"),v("code",[e._v("三部分左右满屏拉伸")]),e._v("、"),v("code",[e._v("顶部底部高度固定")]),e._v("和"),v("code",[e._v("主体高度自适应")]),e._v("，主要应用在主体布局。该布局很常见，也是大部分Web应用主体的主流布局。通常使用"),v("code",[e._v("<header>")]),e._v("、"),v("code",[e._v("<footer>")]),e._v("和"),v("code",[e._v("<main>")]),e._v("三个标签语义化排版，"),v("code",[e._v("<main>")]),e._v("内还可插入"),v("code",[e._v("<aside>")]),e._v("作为侧栏。")]),e._v(" "),v("p",[v("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3d851768f18e47d4ba4d62fc2b27d9c2~tplv-k3u1fbpfcp-zoom-1.image",alt:"全屏布局"}})]),e._v(" "),v("p",[v("code",[e._v('<div class="fullscreen-layout"> <header></header> <main></main> <footer></footer> </div>')])]),e._v(" "),v("blockquote",[v("p",[v("strong",[e._v("position + left/right/top/bottom")])])]),e._v(" "),v("p",[e._v("顶部、底部和主体声明"),v("code",[e._v("left:0")]),e._v("和"),v("code",[e._v("right:0")]),e._v("将其左右部分满屏拉伸；顶部和底部声明"),v("code",[e._v("top:0")]),e._v("和"),v("code",[e._v("bottom:0")]),e._v("分别将其吸顶和吸底，并声明俩高度为固定值；将主体的"),v("code",[e._v("top")]),e._v("和"),v("code",[e._v("bottom")]),e._v("分别声明为顶部高度和底部高度。")]),e._v(" "),v("p",[e._v("移动端基本都是以该布局为主，不信打开你常用的App瞧瞧。实现起来比较简单，基于其左右满屏拉伸这个特点下手即可。")]),e._v(" "),v("p",[v("code",[e._v(".fullscreen-layout { position: relative; width: 400px; height: 400px; header, footer, main { position: absolute; left: 0; right: 0; } header { top: 0; height: 50px; background-color: #f66; } footer { bottom: 0; height: 50px; background-color: #66f; } main { top: 50px; bottom: 50px; background-color: #3c9; } }")])]),e._v(" "),v("blockquote",[v("p",[v("strong",[e._v("flex")])])]),e._v(" "),v("p",[e._v("使用flex实现会更简洁。"),v("code",[e._v("display:flex")]),e._v("默认会令子节点横向排列，需声明"),v("code",[e._v("flex-direction:column")]),e._v("改变子节点排列方向为纵向排列；顶部和底部高度固定，所以主体声明"),v("code",[e._v("flex:1")]),e._v("让高度自适应即可。")]),e._v(" "),v("p",[v("code",[e._v(".fullscreen-layout { display: flex; flex-direction: column; width: 400px; height: 400px; header { height: 50px; background-color: #f66; } footer { height: 50px; background-color: #66f; } main { flex: 1; background-color: #3c9; } }")])]),e._v(" "),v("hr"),e._v(" "),v("ul",[v("li",[e._v("在线演示："),v("a",{attrs:{href:"https://codepen.io/JowayYoung/pen/xxVzdoz",target:"_blank",rel:"noopener noreferrer"}},[e._v("Here"),v("OutboundLink")],1)]),e._v(" "),v("li",[e._v("在线源码："),v("a",{attrs:{href:"https://github.com/JowayYoung/idea-css/blob/master/icss/src/components/layout/%E4%BD%BF%E7%94%A8flexbox%E6%8E%92%E7%89%88%E5%90%84%E7%A7%8D%E5%B8%83%E5%B1%80.vue",target:"_blank",rel:"noopener noreferrer"}},[e._v("Here"),v("OutboundLink")],1)])]),e._v(" "),v("h3",{attrs:{id:"多列布局"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#多列布局"}},[e._v("#")]),e._v(" 多列布局")]),e._v(" "),v("h5",{attrs:{id:"两列布局"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#两列布局"}},[e._v("#")]),e._v(" 两列布局")]),e._v(" "),v("p",[e._v("经典的"),v("code",[e._v("两列布局")]),e._v("由左右两列组成，其特点为"),v("code",[e._v("一列宽度固定")]),e._v("、"),v("code",[e._v("另一列宽度自适应")]),e._v("和"),v("code",[e._v("两列高度固定且相等")]),e._v("。以下以左列宽度固定和右列宽度自适应为例，反之同理。")]),e._v(" "),v("p",[v("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1c9804b4659f4f42ad11463ae49bdb8e~tplv-k3u1fbpfcp-zoom-1.image",alt:"两列布局"}})]),e._v(" "),v("p",[v("code",[e._v('<div class="two-column-layout"> <div class="left"></div> <div class="right"></div> </div>')])]),e._v(" "),v("blockquote",[v("p",[v("strong",[e._v("float + margin-left/right")])])]),e._v(" "),v("p",[e._v("左列声明"),v("code",[e._v("float:left")]),e._v("和固定宽度，由于"),v("code",[e._v("float")]),e._v("使节点脱流，右列需声明"),v("code",[e._v("margin-left")]),e._v("为左列宽度，以保证两列不会重叠。")]),e._v(" "),v("p",[v("code",[e._v(".two-column-layout { width: 400px; height: 400px; .left { float: left; width: 100px; height: 100%; background-color: #f66; } .right { margin-left: 100px; height: 100%; background-color: #66f; } }")])]),e._v(" "),v("blockquote",[v("p",[v("strong",[e._v("overflow + float")])])]),e._v(" "),v("p",[e._v("左列声明同上，右列声明"),v("code",[e._v("overflow:hidden")]),e._v("使其形成BFC区域与外界隔离，详情可回看第4章"),v("strong",[e._v("盒模型")]),e._v("。")]),e._v(" "),v("p",[v("code",[e._v(".two-column-layout { width: 400px; height: 400px; .left { float: left; width: 100px; height: 100%; background-color: #f66; } .right { overflow: hidden; height: 100%; background-color: #66f; } }")])]),e._v(" "),v("blockquote",[v("p",[v("strong",[e._v("flex")])])]),e._v(" "),v("p",[e._v("使用flex实现会更简洁。左列声明固定宽度，右列声明"),v("code",[e._v("flex:1")]),e._v("自适应宽度。")]),e._v(" "),v("p",[v("code",[e._v(".two-column-layout { display: flex; width: 400px; height: 400px; .left { width: 100px; background-color: #f66; } .right { flex: 1; background-color: #66f; } }")])]),e._v(" "),v("hr"),e._v(" "),v("ul",[v("li",[e._v("在线演示："),v("a",{attrs:{href:"https://codepen.io/JowayYoung/pen/xxVzdoz",target:"_blank",rel:"noopener noreferrer"}},[e._v("Here"),v("OutboundLink")],1)]),e._v(" "),v("li",[e._v("在线源码："),v("a",{attrs:{href:"https://github.com/JowayYoung/idea-css/blob/master/icss/src/components/layout/%E4%BD%BF%E7%94%A8flexbox%E6%8E%92%E7%89%88%E5%90%84%E7%A7%8D%E5%B8%83%E5%B1%80.vue",target:"_blank",rel:"noopener noreferrer"}},[e._v("Here"),v("OutboundLink")],1)])]),e._v(" "),v("h5",{attrs:{id:"三列布局"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三列布局"}},[e._v("#")]),e._v(" 三列布局")]),e._v(" "),v("p",[e._v("经典的"),v("code",[e._v("三列布局")]),e._v("由左中右三列组成，其特点为"),v("code",[e._v("连续两列宽度固定")]),e._v("、"),v("code",[e._v("剩余一列宽度自适应")]),e._v("和"),v("code",[e._v("三列高度固定且相等")]),e._v("。以下以左中列宽度固定和右列宽度自适应为例，反之同理。整体的实现原理与上述"),v("strong",[e._v("两列布局")]),e._v("一致，以下就不啰嗦了，直接贴代码。")]),e._v(" "),v("p",[v("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/abcc731db88b464ca6b91c66fe38b9a2~tplv-k3u1fbpfcp-zoom-1.image",alt:"三列布局"}})]),e._v(" "),v("p",[v("code",[e._v('<div class="three-column-layout"> <div class="left"></div> <div class="center"></div> <div class="right"></div> </div>')])]),e._v(" "),v("p",[e._v("为了让右列宽度自适应计算，就不使用"),v("code",[e._v("float + margin-left")]),e._v("的方式了，若使用"),v("code",[e._v("margin-left")]),e._v("还得结合左中列宽度计算。")]),e._v(" "),v("blockquote",[v("p",[v("strong",[e._v("overflow + float")])])]),e._v(" "),v("p",[v("code",[e._v(".three-column-layout { width: 400px; height: 400px; .left { float: left; width: 50px; height: 100%; background-color: #f66; } .center { float: left; width: 100px; height: 100%; background-color: #66f; } .right { overflow: hidden; height: 100%; background-color: #3c9; } }")])]),e._v(" "),v("blockquote",[v("p",[v("strong",[e._v("flex")])])]),e._v(" "),v("p",[e._v("使用flex实现会更简洁，还是flex大法好。")]),e._v(" "),v("p",[v("code",[e._v(".three-column-layout { display: flex; width: 400px; height: 400px; .left { width: 50px; background-color: #f66; } .center { width: 100px; background-color: #66f; } .right { flex: 1; background-color: #3c9; } }")])]),e._v(" "),v("hr"),e._v(" "),v("ul",[v("li",[e._v("在线演示："),v("a",{attrs:{href:"https://codepen.io/JowayYoung/pen/xxVzdoz",target:"_blank",rel:"noopener noreferrer"}},[e._v("Here"),v("OutboundLink")],1)]),e._v(" "),v("li",[e._v("在线源码："),v("a",{attrs:{href:"https://github.com/JowayYoung/idea-css/blob/master/icss/src/components/layout/%E4%BD%BF%E7%94%A8flexbox%E6%8E%92%E7%89%88%E5%90%84%E7%A7%8D%E5%B8%83%E5%B1%80.vue",target:"_blank",rel:"noopener noreferrer"}},[e._v("Here"),v("OutboundLink")],1)])]),e._v(" "),v("h5",{attrs:{id:"圣杯布局与双飞翼布局"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#圣杯布局与双飞翼布局"}},[e._v("#")]),e._v(" 圣杯布局与双飞翼布局")]),e._v(" "),v("p",[e._v("经典的"),v("code",[e._v("圣杯布局")]),e._v("和"),v("code",[e._v("双飞翼布局")]),e._v("都是由左中右三列组成，其特点为"),v("code",[e._v("左右两列宽度固定")]),e._v("、"),v("code",[e._v("中间一列宽度自适应")]),e._v("和"),v("code",[e._v("三列高度固定且相等")]),e._v("。其实也是上述"),v("strong",[e._v("两列布局")]),e._v("和"),v("strong",[e._v("三列布局")]),e._v("的变体，整体的实现原理与上述"),v("code",[e._v("N列布局")]),e._v("一致，可能就是一些细节需注意。")]),e._v(" "),v("p",[v("code",[e._v("圣杯布局")]),e._v("和"),v("code",[e._v("双飞翼布局")]),e._v("在大体相同下也存在一点不同，区别在于"),v("code",[e._v("双飞翼布局")]),e._v("中间列需插入一个子节点。在常规的实现方式中也是在这个中间列里做文章，"),v("code",[e._v("如何使中间列内容不被左右列遮挡")]),e._v("。")]),e._v(" "),v("ul",[v("li",[e._v("相同\n"),v("ul",[v("li",[e._v("中间列放首位且声明其宽高占满父节点")]),e._v(" "),v("li",[e._v("被挤出的左右列使用"),v("code",[e._v("float")]),e._v("和"),v("code",[e._v("margin负值")]),e._v("将其拉回与中间列处在同一水平线上")])])]),e._v(" "),v("li",[e._v("不同\n"),v("ul",[v("li",[e._v("圣杯布局：父节点声明"),v("code",[e._v("padding")]),e._v("为左右列留出空位，将左右列固定在空位上")]),e._v(" "),v("li",[e._v("双飞翼布局：中间列插入子节点并声明"),v("code",[e._v("margin")]),e._v("为左右列让出空位，将左右列固定在空位上")])])])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c83380c01f4040e693bb7a15a8621558~tplv-k3u1fbpfcp-zoom-1.image",alt:"圣杯布局"}})]),e._v(" "),v("blockquote",[v("p",[e._v("圣杯布局"),v("strong",[e._v("float + margin-left/right + padding-left/right")])])]),e._v(" "),v("p",[e._v("由于浮动节点在位置上不能高于前面或平级的非浮动节点，否则会导致浮动节点下沉。因此在编写HTML结构时，将中间列节点挪到右列节点后面。")]),e._v(" "),v("p",[v("code",[e._v('<div class="grail-layout"> <div class="left"></div> <div class="right"></div> <div class="center"></div> </div>')])]),e._v(" "),v("p",[v("code",[e._v(".grail-layout { padding: 0 100px; width: 400px; height: 400px; .left { float: left; margin-left: -100px; width: 100px; height: 100%; background-color: #f66; } .right { float: right; margin-right: -100px; width: 100px; height: 100%; background-color: #66f; } .center { height: 100%; background-color: #3c9; } }")])]),e._v(" "),v("blockquote",[v("p",[e._v("双飞翼布局"),v("strong",[e._v("float + margin-left/right")])])]),e._v(" "),v("p",[e._v("HTML结构大体同上，只是在中间里里插入一个子节点"),v("code",[e._v("<div>")]),e._v("。根据两者区别，CSS声明会与上述"),v("code",[e._v("圣杯布局")]),e._v("有一点点出入，可观察对比找出不同地方。")]),e._v(" "),v("p",[v("code",[e._v('<div class="grail-layout"> <div class="left"></div> <div class="right"></div> <div class="center"> <div></div> </div> </div>')])]),e._v(" "),v("p",[v("code",[e._v(".grail-layout { width: 400px; height: 400px; .left { float: left; width: 100px; height: 100%; background-color: #f66; } .right { float: right; width: 100px; height: 100%; background-color: #66f; } .center { margin: 0 100px; height: 100%; background-color: #3c9; } }")])]),e._v(" "),v("blockquote",[v("p",[e._v("圣杯布局/双飞翼布局"),v("strong",[e._v("flex")])])]),e._v(" "),v("p",[e._v("使用flex实现"),v("code",[e._v("圣杯布局/双飞翼布局")]),e._v("可忽略上述分析，左右两列宽度固定，中间列宽度自适应。")]),e._v(" "),v("p",[v("code",[e._v('<div class="grail-layout"> <div class="left"></div> <div class="center"></div> <div class="right"></div> </div>')])]),e._v(" "),v("p",[v("code",[e._v(".grail-layout { display: flex; width: 400px; height: 400px; .left { width: 100px; background-color: #f66; } .center { flex: 1; background-color: #3c9; } .right { width: 100px; background-color: #66f; } }")])]),e._v(" "),v("hr"),e._v(" "),v("ul",[v("li",[e._v("在线演示："),v("a",{attrs:{href:"https://codepen.io/JowayYoung/pen/xxVzdoz",target:"_blank",rel:"noopener noreferrer"}},[e._v("Here"),v("OutboundLink")],1)]),e._v(" "),v("li",[e._v("在线源码："),v("a",{attrs:{href:"https://github.com/JowayYoung/idea-css/blob/master/icss/src/components/layout/%E4%BD%BF%E7%94%A8flexbox%E6%8E%92%E7%89%88%E5%90%84%E7%A7%8D%E5%B8%83%E5%B1%80.vue",target:"_blank",rel:"noopener noreferrer"}},[e._v("Here"),v("OutboundLink")],1)])]),e._v(" "),v("h5",{attrs:{id:"均分布局"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#均分布局"}},[e._v("#")]),e._v(" 均分布局")]),e._v(" "),v("p",[e._v("经典的"),v("code",[e._v("均分布局")]),e._v("由多列组成，其特点为"),v("code",[e._v("每列宽度相等")]),e._v("和"),v("code",[e._v("每列高度固定且相等")]),e._v("。总体来说，也是最简单的经典布局，由于每列宽度相等，所以很容易找到合适的方式处理。")]),e._v(" "),v("p",[v("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b63ad7914f4f468092caa6b850eb5234~tplv-k3u1fbpfcp-zoom-1.image",alt:"均分布局"}})]),e._v(" "),v("p",[v("code",[e._v('<div class="average-layout"> <div class="one"></div> <div class="two"></div> <div class="three"></div> <div class="four"></div> </div>')])]),e._v(" "),v("p",[v("code",[e._v(".one { background-color: #f66; } .two { background-color: #66f; } .three { background-color: #f90; } .four { background-color: #09f; }")])]),e._v(" "),v("blockquote",[v("p",[v("strong",[e._v("float + width")])])]),e._v(" "),v("p",[e._v("每列宽度声明为相等的百分比，若有4列则声明"),v("code",[e._v("width:25%")]),e._v("。N列就用公式"),v("code",[e._v("100 / n")]),e._v("求出最终百分比宽度，记得保留2位小数，懒人还可用"),v("code",[e._v("width:calc(100% / n)")]),e._v("自动计算呢。")]),e._v(" "),v("p",[v("code",[e._v(".average-layout { width: 400px; height: 400px; div { float: left; width: 25%; height: 100%; } }")])]),e._v(" "),v("blockquote",[v("p",[v("strong",[e._v("column")])])]),e._v(" "),v("p",[e._v("使用column实现会令CSS代码语义化更明确。"),v("code",[e._v("column相关属性")]),e._v("是为列排版应运而生的，相对"),v("code",[e._v("flex相关属性")]),e._v("来说更易懂易学。")]),e._v(" "),v("p",[v("code",[e._v(".average-layout { column-count: 4; column-gap: 0; width: 400px; height: 400px; div { height: 100%; } }")])]),e._v(" "),v("blockquote",[v("p",[v("strong",[e._v("flex")])])]),e._v(" "),v("p",[e._v("使用flex实现会更简洁。节点声明"),v("code",[e._v("display:flex")]),e._v("后，生成的"),v("code",[e._v("FFC容器")]),e._v("里所有子节点的高度都相等，因为容器的"),v("code",[e._v("align-items")]),e._v("默认为"),v("code",[e._v("stretch")]),e._v("，所有子节点将占满整个容器的高度。每列声明"),v("code",[e._v("flex:1")]),e._v("自适应宽度。")]),e._v(" "),v("p",[v("code",[e._v(".average-layout { display: flex; width: 400px; height: 400px; div { flex: 1; } }")])]),e._v(" "),v("hr"),e._v(" "),v("ul",[v("li",[e._v("在线演示："),v("a",{attrs:{href:"https://codepen.io/JowayYoung/pen/xxVzdoz",target:"_blank",rel:"noopener noreferrer"}},[e._v("Here"),v("OutboundLink")],1)]),e._v(" "),v("li",[e._v("在线源码："),v("a",{attrs:{href:"https://github.com/JowayYoung/idea-css/blob/master/icss/src/components/layout/%E4%BD%BF%E7%94%A8flexbox%E6%8E%92%E7%89%88%E5%90%84%E7%A7%8D%E5%B8%83%E5%B1%80.vue",target:"_blank",rel:"noopener noreferrer"}},[e._v("Here"),v("OutboundLink")],1)])]),e._v(" "),v("h3",{attrs:{id:"居中布局"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#居中布局"}},[e._v("#")]),e._v(" 居中布局")]),e._v(" "),v("p",[v("code",[e._v("居中布局")]),e._v("不管在开发还是面试，都是一个出现率很高频的场景。很多同学可能都会死记硬背，若是根据不同场景使用不同"),v("code",[e._v("居中布局")]),e._v("，那死记硬背也不一定帮得上忙。所以剖析其原理和技巧再自由组合，相信能开发出更多的使用方式，当然死记硬背也不会存在了。")]),e._v(" "),v("p",[e._v("以下是笔者总结的"),v("code",[e._v("水平居中")]),e._v("和"),v("code",[e._v("垂直居中")]),e._v("的实现方式，分开了解水平居中和垂直居中的原理，是玩转"),v("code",[e._v("居中布局")]),e._v("里最重要的一步。")]),e._v(" "),v("ul",[v("li",[v("strong",[e._v("水平居中")])]),e._v(" "),v("li",[v("strong",[e._v("margin:0 auto + width:fit-content")]),e._v("："),v("code",[e._v("全部元素")])]),e._v(" "),v("li",[v("strong",[e._v("块级元素 + margin:0 auto + width")]),e._v("："),v("code",[e._v("块级元素")]),e._v(" "),v("ul",[v("li",[e._v("若节点不是块级元素需声明"),v("code",[e._v("display:block")])]),e._v(" "),v("li",[e._v("若节点宽度已隐式声明则无需显式声明"),v("code",[e._v("width")])])])]),e._v(" "),v("li",[v("strong",[e._v("行内元素 + text-aligin:center")]),e._v("："),v("code",[e._v("行内元素")]),e._v(" "),v("ul",[v("li",[e._v("父节点上声明"),v("code",[e._v("text-align")])]),e._v(" "),v("li",[e._v("若节点不是行内元素需声明"),v("code",[e._v("display:inline/inline-block")])])])]),e._v(" "),v("li",[v("strong",[e._v("position + left/right + margin-left/right + width")]),e._v("："),v("code",[e._v("全部元素")])]),e._v(" "),v("li",[v("strong",[e._v("position + left/right + transform:translateX(-50%)")]),e._v("："),v("code",[e._v("全部元素")])]),e._v(" "),v("li",[v("strong",[e._v("display:flex + justify-content:center")]),e._v("："),v("code",[e._v("全部元素")]),e._v(" "),v("ul",[v("li",[e._v("父节点上声明"),v("code",[e._v("display")]),e._v("和"),v("code",[e._v("justify-content")])])])]),e._v(" "),v("li",[v("strong",[e._v("垂直居中")])]),e._v(" "),v("li",[v("strong",[e._v("块级元素 + padding-top/bottom")]),e._v("："),v("code",[e._v("块级元素")]),e._v(" "),v("ul",[v("li",[e._v("父节点高度未声明或自适应")]),e._v(" "),v("li",[e._v("若节点不是块级元素需声明"),v("code",[e._v("display:block")])])])]),e._v(" "),v("li",[v("strong",[e._v("行内元素 + line-height")]),e._v("："),v("code",[e._v("行内元素")]),e._v(" "),v("ul",[v("li",[e._v("父节点上声明"),v("code",[e._v("line-height")])]),e._v(" "),v("li",[e._v("若节点不是行内元素需声明"),v("code",[e._v("display:inline/inline-block")])])])]),e._v(" "),v("li",[v("strong",[e._v("display:table + display:table-cell + vertical-align:middle")]),e._v("："),v("code",[e._v("全部元素")]),e._v(" "),v("ul",[v("li",[e._v("父节点上声明"),v("code",[e._v("display:table")])])])]),e._v(" "),v("li",[v("strong",[e._v("display:table-cell + vertical-align:middle")]),e._v("："),v("code",[e._v("全部元素")]),e._v(" "),v("ul",[v("li",[e._v("父节点上声明"),v("code",[e._v("display")]),e._v("和"),v("code",[e._v("vertical-align")])])])]),e._v(" "),v("li",[v("strong",[e._v("position + top/bottom + margin-top/bottom + height")]),e._v("："),v("code",[e._v("全部元素")])]),e._v(" "),v("li",[v("strong",[e._v("position + top/bottom + transform:translateY(-50%)")]),e._v("："),v("code",[e._v("全部元素")])]),e._v(" "),v("li",[v("strong",[e._v("display:flex + align-items:center")]),e._v("："),v("code",[e._v("全部元素")]),e._v(" "),v("ul",[v("li",[e._v("父节点上声明"),v("code",[e._v("display")]),e._v("和"),v("code",[e._v("align-items")])])])]),e._v(" "),v("li",[v("strong",[e._v("display:flex + margin:auto 0")]),e._v("："),v("code",[e._v("全部元素")]),e._v(" "),v("ul",[v("li",[e._v("父节点上声明"),v("code",[e._v("display")])])])])]),e._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("浏览器会为文本生成一个匿名行内盒，让文本参与IFC，所以可认为文本是行内元素，详情可回看第4章盒模型\n")])]),e._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[e._v("1")]),v("br")])]),v("p",[e._v("通过结合上述"),v("code",[e._v("水平居中")]),e._v("和"),v("code",[e._v("垂直居中")]),e._v("的实现方式完成一些常见的"),v("code",[e._v("水平垂直居中布局")]),e._v("，未出现的方式可在评论中补充，方便一起学习。注意注意，上述任何"),v("code",[e._v("水平居中")]),e._v("和"),v("code",[e._v("垂直居中")]),e._v("方式不是随意组合就能生效，这个需详细分析可行性。以下是一些组合成功的"),v("code",[e._v("水平垂直居中布局")]),e._v("。")]),e._v(" "),v("p",[e._v("假设节点是块级元素，意味着隐式声明"),v("code",[e._v("display:block")]),e._v("，例如以下的"),v("code",[e._v("<div></div>")]),e._v("，围绕着该"),v("code",[e._v("<div>")]),e._v("实现各种"),v("code",[e._v("水平垂直居中布局")]),e._v("。")]),e._v(" "),v("p",[v("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/73256f661d1245c899e68ee8c47bd334~tplv-k3u1fbpfcp-zoom-1.image",alt:"居中布局"}})]),e._v(" "),v("p",[v("code",[e._v('<div class="center-layout"> <div></div> </div>')])]),e._v(" "),v("p",[v("code",[e._v(".center-layout { width: 400px; height: 400px; background-color: #f66; div { width: 100px; height: 100px; background-color: #66f; } }")])]),e._v(" "),v("blockquote",[v("p",[v("strong",[e._v("display:inline-block")])])]),e._v(" "),v("p",[v("code",[e._v("<div>")]),e._v("声明"),v("code",[e._v("display:inline-block")]),e._v("将其变成"),v("code",[e._v("行内块级元素")]),e._v("，那么可用"),v("code",[e._v("text-align")]),e._v("和"),v("code",[e._v("line-height")]),e._v("声明水平垂直居中了，但是"),v("code",[e._v("行内块级元素")]),e._v("与"),v("code",[e._v("匿名行内盒")]),e._v("的基线对齐存在很大差异，所以需声明"),v("code",[e._v("vertical-align:middle")]),e._v("将其调整到垂直居中的位置，不过这也是近似垂直居中，父节点最后还需声明"),v("code",[e._v("font-size:0")]),e._v("消除该差异。")]),e._v(" "),v("p",[v("code",[e._v(".center-layout { line-height: 400px; text-align: center; font-size: 0; div { display: inline-block; vertical-align: middle; } }")])]),e._v(" "),v("p",[v("strong",[e._v("display:table-cell")])]),e._v(" "),v("p",[e._v("父节点声明"),v("code",[e._v("display:table-cell")]),e._v("模拟"),v("code",[e._v("表格布局")]),e._v("的垂直居中；子节点声明"),v("code",[e._v("margin:0 auto")]),e._v("使其水平居中。")]),e._v(" "),v("p",[v("code",[e._v(".center-layout { display: table-cell; vertical-align: middle; div { margin: 0 auto; } }")])]),e._v(" "),v("p",[v("strong",[e._v("position")])]),e._v(" "),v("p",[e._v("该方式也是最传统最稳定的"),v("code",[e._v("水平垂直居中布局")]),e._v("了，唯二的缺点就是"),v("code",[e._v("声明属性稍多")]),e._v("和"),v("code",[e._v("必须已知宽高")]),e._v("。要点是使用"),v("code",[e._v("margin负值")]),e._v("将节点拉回最中间，所以必须已知宽高才能计算"),v("code",[e._v("margin负值")]),e._v("，通常是"),v("code",[e._v("margin-left")]),e._v("和"),v("code",[e._v("margin-top")]),e._v("，可连写成"),v("code",[e._v("margin:-(height/2) 0 0 \\-(width/2)")]),e._v("。")]),e._v(" "),v("p",[v("code",[e._v(".center-layout { position: relative; div { position: absolute; left: 50%; top: 50%; margin: -50px 0 0 -50px; } }")])]),e._v(" "),v("p",[e._v("自从CSS3的"),v("code",[e._v("transform")]),e._v("普及后，声明"),v("code",[e._v("transform:translate(-50%,-50%)")]),e._v("可代替"),v("code",[e._v("margin负值")]),e._v("了，这样就无需声明宽高和计算宽高的二分之一是多少，真正做到自适应水平垂直居中。")]),e._v(" "),v("p",[e._v("但是存在一个缺陷，若节点需额外使用"),v("code",[e._v("transform")]),e._v("，那么就比较麻烦了。将额外的"),v("code",[e._v("transform")]),e._v("合并到水平垂直居中的"),v("code",[e._v("transform:translate(-50%,-50%)")]),e._v("里，就会存在有一个比较棘手的变换顺序问题，在第12章"),v("strong",[e._v("变换与动画")]),e._v("中会详细讲解。解决方式就是在节点外部套上一层"),v("code",[e._v("<div>")]),e._v("，把"),v("code",[e._v("transform:translate(-50%,-50%)")]),e._v("转嫁到"),v("code",[e._v("<div>")]),e._v("上，那么节点就能自由使用"),v("code",[e._v("transform")]),e._v("了。")]),e._v(" "),v("p",[v("code",[e._v(".center-layout { position: relative; div { position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%); } }")])]),e._v(" "),v("blockquote",[v("p",[e._v("flex")])]),e._v(" "),v("p",[e._v("目前最强大的方式，不用说，常用"),v("code",[e._v("flex")]),e._v("的各位同学都会知道。")]),e._v(" "),v("p",[v("code",[e._v(".center-layout { display: flex; justify-content: center; align-items: center; }")])]),e._v(" "),v("p",[e._v("当然还有一个隐藏的终极方式，也是史上最简方式。只需声明两个重要属性！")]),e._v(" "),v("p",[v("code",[e._v(".center-layout { display: flex; div { margin: auto; } }")])]),e._v(" "),v("p",[e._v("这个"),v("strong",[e._v("CSS神操作骚技巧")]),e._v("在后续里会经常使用，各位同学期待下啦。")]),e._v(" "),v("hr"),e._v(" "),v("ul",[v("li",[e._v("在线演示："),v("a",{attrs:{href:"https://codepen.io/JowayYoung/pen/xxVzdoz",target:"_blank",rel:"noopener noreferrer"}},[e._v("Here"),v("OutboundLink")],1)]),e._v(" "),v("li",[e._v("在线源码："),v("a",{attrs:{href:"https://github.com/JowayYoung/idea-css/blob/master/icss/src/components/layout/%E4%BD%BF%E7%94%A8flexbox%E6%8E%92%E7%89%88%E5%90%84%E7%A7%8D%E5%B8%83%E5%B1%80.vue",target:"_blank",rel:"noopener noreferrer"}},[e._v("Here"),v("OutboundLink")],1)])]),e._v(" "),v("h3",{attrs:{id:"文字布局"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#文字布局"}},[e._v("#")]),e._v(" 文字布局")]),e._v(" "),v("h5",{attrs:{id:"文本环绕"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#文本环绕"}},[e._v("#")]),e._v(" 文本环绕")]),e._v(" "),v("p",[e._v("利用"),v("code",[e._v("float")]),e._v("使节点脱流的原理实现，详情可回看第4章"),v("strong",[e._v("盒模型")]),e._v("。")]),e._v(" "),v("p",[v("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b1b9dd2dad564c3a8e85740a7b7e2e40~tplv-k3u1fbpfcp-zoom-1.image",alt:"环绕文本"}})]),e._v(" "),v("p",[v("code",[e._v('<div class="text-wrapping"> <img src="https://static.yangzw.vip/codepen/thor.jpg"> XXXXX......(很多个X) </div>')])]),e._v(" "),v("p",[v("code",[e._v(".text-wrapping { overflow: hidden; width: 400px; height: 300px; font-size: 20px; color: #f66; word-break: break-all; img { float: left; margin: 10px; height: 200px; } }")])]),e._v(" "),v("hr"),e._v(" "),v("ul",[v("li",[e._v("在线演示："),v("a",{attrs:{href:"https://codepen.io/JowayYoung/pen/yLOEoQd",target:"_blank",rel:"noopener noreferrer"}},[e._v("Here"),v("OutboundLink")],1)]),e._v(" "),v("li",[e._v("在线源码："),v("a",{attrs:{href:"https://github.com/JowayYoung/idea-css/blob/master/icss/src/components/layout/%E4%BD%BF%E7%94%A8float%E6%8E%92%E7%89%88%E6%96%87%E6%9C%AC%E7%8E%AF%E7%BB%95.vue",target:"_blank",rel:"noopener noreferrer"}},[e._v("Here"),v("OutboundLink")],1)])]),e._v(" "),v("h5",{attrs:{id:"文字溢出"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#文字溢出"}},[e._v("#")]),e._v(" 文字溢出")]),e._v(" "),v("p",[e._v("嘿嘿，最常用的"),v("code",[e._v("单行文字溢")]),e._v("出和"),v("code",[e._v("多行问题溢")]),e._v("出来啦。")]),e._v(" "),v("p",[v("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6bc489b6a5034289a566b2288f7aa5aa~tplv-k3u1fbpfcp-zoom-1.image",alt:"溢出文字"}})]),e._v(" "),v("p",[v("code",[e._v('<div class="text-ellipsis"> <p class="s-line s-ellipsis">玩转CSS的艺术之美...</p> <p class="m-line m-ellipsis">玩转CSS的艺术之美...</p> </div>')])]),e._v(" "),v("p",[v("code",[e._v(".text-ellipsis { width: 400px; p { padding: 0 10px; line-height: 40px; text-align: justify; font-size: 20px; color: #fff; &.s-line { background-color: #f66; } &.m-line { background-color: #66f; } } }")])]),e._v(" "),v("blockquote",[v("p",[e._v("单行文字溢出"),v("strong",[e._v("overflow + text-overflow")])])]),e._v(" "),v("p",[v("code",[e._v(".s-ellipsis { overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }")])]),e._v(" "),v("blockquote",[v("p",[e._v("多行文字溢出"),v("strong",[e._v("flex + overflow + text-overflow")])])]),e._v(" "),v("p",[e._v("使用"),v("code",[e._v("旧版弹性布局")]),e._v("模拟"),v("code",[e._v("多行文字溢出")]),e._v("，只能在"),v("code",[e._v("Webkit内核")]),e._v("中使用，局限性太大了。")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("display:-webkit-box")]),e._v("：将容器作为弹性伸缩盒模型")]),e._v(" "),v("li",[v("code",[e._v("-webkit-box-orient")]),e._v("：弹性伸缩盒模型子节点的排列方式")]),e._v(" "),v("li",[v("code",[e._v("-webkit-line-clamp")]),e._v("：限制容器最多显示多少行文本")])]),e._v(" "),v("p",[v("code",[e._v(".m-ellipsis { display: -webkit-box; overflow: hidden; text-overflow: ellipsis; word-break: break-all; -webkit-box-orient: vertical; -webkit-line-clamp: 3; }")])]),e._v(" "),v("p",[e._v("所以得通过一些兼容性稳定的属性模拟该"),v("code",[e._v("溢出省略号")]),e._v("，当然是使用伪元素"),v("code",[e._v("::after")]),e._v("胜任这个工作了。结合"),v("code",[e._v("max-height")]),e._v("和"),v("code",[e._v("line-height")]),e._v("计算最大显示行数，通过定位布局把"),v("code",[e._v("省略号")]),e._v("定位到整段文字的右下角，使用"),v("code",[e._v("linear-gradient()")]),e._v("调整渐变背景颜色稍微润色下省略号使其看上去自然一些。")]),e._v(" "),v("p",[v("code",[e._v('.m-ellipsis { overflow: hidden; position: relative; max-height: 120px; line-height: 40px; &::after { position: absolute; right: 0; bottom: 0; padding-left: 20px; background: linear-gradient(to right, transparent, #fff 50%); content: "..."; } }')])]),e._v(" "),v("p",[e._v("虽然该方式兼容性比较好，但是单行文字也会出现省略号，只能结合JS额外处理了。")]),e._v(" "),v("hr"),e._v(" "),v("ul",[v("li",[e._v("在线演示："),v("a",{attrs:{href:"https://codepen.io/JowayYoung/pen/mdbPmyy",target:"_blank",rel:"noopener noreferrer"}},[e._v("Here"),v("OutboundLink")],1)]),e._v(" "),v("li",[e._v("在线源码："),v("a",{attrs:{href:"https://github.com/JowayYoung/idea-css/blob/master/icss/src/components/layout/%E4%BD%BF%E7%94%A8text-overflow%E6%8E%A7%E5%88%B6%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA.vue",target:"_blank",rel:"noopener noreferrer"}},[e._v("Here"),v("OutboundLink")],1)])])])}),[],!1,null,null,null);o.default=_.exports}}]);