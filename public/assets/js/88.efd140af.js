(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{571:function(s,a,n){"use strict";n.r(a);var t=n(59),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"anime-svg-路径跟随动画"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#anime-svg-路径跟随动画"}},[s._v("#")]),s._v(" Anime SVG 路径跟随动画")]),s._v(" "),n("p",[s._v("这章节我们来学习下 Anime 中如何来实现一个路径跟随动画的。所谓路径动画，其实就是指定义好的运动对象沿着特定的路径在运动的动画效果，比如下面这样的效果：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/9/16792deb76878f41?w=846&h=492&f=gif&s=560414",alt:""}})]),s._v(" "),n("p",[s._v("实际在开发动效时，路径动画也应用的非常多。虽然，CSS 的最新标准已经有提案支持路径运动，但目前来看，正式实施估计还要等很久的，而 Anime 提供的解决方案无疑是非常高效的一种实现路径动画的解决方案。")]),s._v(" "),n("p",[s._v("下面我们就通过一个简单的实例来了解下，使用 Anime 如何来实现这样一个路径跟随动画，要实现的效果如下所示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/9/16792de1dce04c0c?w=838&h=502&f=gif&s=226876",alt:"图片"}})]),s._v(" "),n("h3",{attrs:{id:"准备工作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[s._v("#")]),s._v(" 准备工作")]),s._v(" "),n("p",[s._v("要实现这样一个效果，我们首先要准备图中所示的这样一个曲线路径，这个简单，我们只需要在 AI 中用钢笔工具勾一条就可以了：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/9/16792de1d85b8c7f?w=1280&h=812&f=png&s=101357",alt:"图片"}})]),s._v(" "),n("p",[s._v("设计好路径后，我们把文件导出为 SVG 格式的图片，就可以得到这条路径的数据：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<path  class="st0" d="M11.6,246.9c0,0,143.1-274.1,267.8-137.9s124.7,136.2,124.7,136.2L11.6,246.9z"/>\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("得到路径数据后接下来的事情就好办了。")]),s._v(" "),n("h3",{attrs:{id:"编码实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编码实现"}},[s._v("#")]),s._v(" 编码实现")]),s._v(" "),n("p",[s._v("先准备基本的 HTML 结构：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<div id="motionPath">\n  <div class="motion-path">\n    <div class="square">\n    </div> <svg width="600" height="400" viewBox="0 0 600 400">\n        <path id="curpath" fill="none" stroke="currentColor" stroke-width="1" d="M11.6,246.9c0,0,143.1-274.1,267.8-137.9s124.7,136.2,124.7,136.2L11.6,246.9z"/>\n      </svg> \n  </div>\n</div>\n\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("然后是样式：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(".motion-path {\n  width: 600px;\n  height: 400px;\n  position: relative;\n}\n.square {\n  width:30px;\n  height: 30px;\n  background-color: #000;\n}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("在 Anime 中，要实现一个路径跟随动画，需要用到：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("anime.path(pathEl)\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("这个方法是专门用来实现路径跟随动画的，它接受 CSS 选择器或者是 DOM 元素，而且它会返回路径上每个点在 X 轴和 Y 轴上的坐标：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var path = anime.path('path');\n // 或者\n \nvar path = anime.path('.path');\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("使用了这个方法后，路径元素上每个点在 X 轴和 Y 轴上的坐标都会存储在定义好的 path 这个变量中，那我们要使元素沿着这条曲线运动，就很简单了，只需要不停的使用 transform 中的 translate 来改变元素的 X 轴和 Y 轴的坐标就可以了。")]),s._v(" "),n("p",[s._v("结合我们前面学到的 Anime 的知识，代码如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var path = anime.path('path');\n\nanime({\n  targets: '.square',\n  translateX: path('x'),\n  translateY: path('y'),\n  rotate: path('angle'),\n  duration: 3000,\n  loop: true,\n  easing: 'linear'\n});\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("从上面的代码中我们可以看到这3行代码：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  translateX: path('x'),\n  translateY: path('y'),\n  rotate: path('angle'),\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("可以发现，通过得到路径元素每个点的坐标，然后通过 translateX 和 translateY 来改变元素的坐标值，从而使元素沿着路径的轨迹移动，实现路径跟随动画效果。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/9/16792de1dce04c0c?w=838&h=502&f=gif&s=226876",alt:"图片"}})]),s._v(" "),n("p",[s._v("我们还可以看到在代码中有一个rotate的属性，它是用来实时返回当前在 SVG 中 path 元素的一个角度，这样当元素实时移动的时候有一个角度的倾斜，动画才更加的自然。")]),s._v(" "),n("p",[s._v("我们来看看，如果没有这个 rotate 的属性会怎么样？")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/3/6/16951bcd49d31c2b?w=425&h=234&f=gif&s=27792",alt:""}})]),s._v(" "),n("p",[s._v("可以看到没有设置 rotate 属性的时候，元素运动起来非常的不自然生硬。")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://codepen.io/janily/pen/roNebb",target:"_blank",rel:"noopener noreferrer"}},[s._v("代码演示地址"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("这章节简介绍了使用 Anime 来实现路径跟随动画效果，下一章节来学习下使用 Anime 在蒙版动画中的运用。")])])}),[],!1,null,null,null);a.default=e.exports}}]);